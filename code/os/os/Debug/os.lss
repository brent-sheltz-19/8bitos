
os.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000b82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b0e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a3  00800100  00800100  00000b82  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000348  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007b53  00000000  00000000  00000f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001b1f  00000000  00000000  00008a8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019b7  00000000  00000000  0000a5ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000830  00000000  00000000  0000bf68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001660  00000000  00000000  0000c798  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001770  00000000  00000000  0000ddf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a8  00000000  00000000  0000f568  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__dtors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000007c <__ctors_start>:
  7c:	7b 03       	fmul	r23, r19

0000007e <__ctors_end>:
  7e:	e3 04       	cpc	r14, r3

00000080 <__dtors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d0 e1       	ldi	r29, 0x10	; 16
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_clear_bss>:
  8c:	23 e0       	ldi	r18, 0x03	; 3
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a3 3a       	cpi	r26, 0xA3	; 163
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	cf e3       	ldi	r28, 0x3F	; 63
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 74 05 	call	0xae8	; 0xae8 <__tablejump2__>
  ac:	ce 33       	cpi	r28, 0x3E	; 62
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 5e 03 	call	0x6bc	; 0x6bc <main>
  b6:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__do_global_dtors>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_ZN11interpreterC1Ev>:
{

}

void interpreter::ldi(char regto,char val)
{
  be:	fc 01       	movw	r30, r24
  c0:	10 86       	std	Z+8, r1	; 0x08
  c2:	11 86       	std	Z+9, r1	; 0x09
  c4:	12 86       	std	Z+10, r1	; 0x0a
  c6:	dc 01       	movw	r26, r24
  c8:	a6 5f       	subi	r26, 0xF6	; 246
  ca:	be 4f       	sbci	r27, 0xFE	; 254
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8c 93       	st	X, r24
  d0:	19 96       	adiw	r26, 0x09	; 9
  d2:	cf 01       	movw	r24, r30
  d4:	88 5f       	subi	r24, 0xF8	; 248
  d6:	9e 4f       	sbci	r25, 0xFE	; 254
  d8:	11 96       	adiw	r26, 0x01	; 1
  da:	9c 93       	st	X, r25
  dc:	8e 93       	st	-X, r24
  de:	12 96       	adiw	r26, 0x02	; 2
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	11 96       	adiw	r26, 0x01	; 1
  e4:	9c 93       	st	X, r25
  e6:	8e 93       	st	-X, r24
  e8:	16 97       	sbiw	r26, 0x06	; 6
  ea:	03 97       	sbiw	r24, 0x03	; 3
  ec:	11 96       	adiw	r26, 0x01	; 1
  ee:	9c 93       	st	X, r25
  f0:	8e 93       	st	-X, r24
  f2:	12 96       	adiw	r26, 0x02	; 2
  f4:	01 96       	adiw	r24, 0x01	; 1
  f6:	11 96       	adiw	r26, 0x01	; 1
  f8:	9c 93       	st	X, r25
  fa:	8e 93       	st	-X, r24
  fc:	16 97       	sbiw	r26, 0x06	; 6
  fe:	03 97       	sbiw	r24, 0x03	; 3
 100:	11 96       	adiw	r26, 0x01	; 1
 102:	9c 93       	st	X, r25
 104:	8e 93       	st	-X, r24
 106:	12 96       	adiw	r26, 0x02	; 2
 108:	eb 5f       	subi	r30, 0xFB	; 251
 10a:	fe 4f       	sbci	r31, 0xFE	; 254
 10c:	ed 93       	st	X+, r30
 10e:	fc 93       	st	X, r31
 110:	08 95       	ret

00000112 <_ZN11interpreter3nopEv>:

}

void interpreter::nop()
{
	asm volatile("nop");
 112:	00 00       	nop
 114:	08 95       	ret

00000116 <_ZN11interpreterD1Ev>:
}


// default destructor
interpreter::~interpreter()
 116:	08 95       	ret

00000118 <_ZN10interruptsC1Ev>:
interrupts::interrupts()
{
} //interrupts

void interrupts::handleinterrupt()
{
 118:	08 95       	ret

0000011a <_ZN10interruptsD1Ev>:
	{
	}
}

// default destructor
interrupts::~interrupts()
 11a:	08 95       	ret

0000011c <_ZN3lcdC1Ev>:
lcd::lcd()
{
	//instructions ins = instructions();
} //lcd

 lcd::lcd(portcontroller* port)
 11c:	08 95       	ret

0000011e <_ZN3lcdD1Ev>:
 {
	
 }

// default destructor
lcd::~lcd()
 11e:	08 95       	ret

00000120 <_ZN14portcontrollerC1Ev>:
		{
			PORTD|=0b10000000;
		}
		else
		{
			PORTD&=0b01111111;
 120:	08 95       	ret

00000122 <_ZN14portcontroller10writeportcEc>:
 122:	68 b9       	out	0x08, r22	; 8
 124:	08 95       	ret

00000126 <_ZN14portcontroller9writeddraEc>:
 126:	61 b9       	out	0x01, r22	; 1
 128:	08 95       	ret

0000012a <_ZN14portcontroller9writeddrcEc>:
 12a:	67 b9       	out	0x07, r22	; 7
 12c:	08 95       	ret

0000012e <_ZN14portcontroller13digitalwriteaEhb>:
 12e:	61 30       	cpi	r22, 0x01	; 1
 130:	31 f4       	brne	.+12     	; 0x13e <_ZN14portcontroller13digitalwriteaEhb+0x10>
 132:	44 23       	and	r20, r20
 134:	11 f0       	breq	.+4      	; 0x13a <_ZN14portcontroller13digitalwriteaEhb+0xc>
 136:	10 9a       	sbi	0x02, 0	; 2
 138:	08 95       	ret
 13a:	10 98       	cbi	0x02, 0	; 2
 13c:	08 95       	ret
 13e:	62 30       	cpi	r22, 0x02	; 2
 140:	31 f4       	brne	.+12     	; 0x14e <_ZN14portcontroller13digitalwriteaEhb+0x20>
 142:	44 23       	and	r20, r20
 144:	11 f0       	breq	.+4      	; 0x14a <_ZN14portcontroller13digitalwriteaEhb+0x1c>
 146:	11 9a       	sbi	0x02, 1	; 2
 148:	08 95       	ret
 14a:	11 98       	cbi	0x02, 1	; 2
 14c:	08 95       	ret
 14e:	63 30       	cpi	r22, 0x03	; 3
 150:	31 f4       	brne	.+12     	; 0x15e <_ZN14portcontroller13digitalwriteaEhb+0x30>
 152:	44 23       	and	r20, r20
 154:	11 f0       	breq	.+4      	; 0x15a <_ZN14portcontroller13digitalwriteaEhb+0x2c>
 156:	12 9a       	sbi	0x02, 2	; 2
 158:	08 95       	ret
 15a:	12 98       	cbi	0x02, 2	; 2
 15c:	08 95       	ret
 15e:	64 30       	cpi	r22, 0x04	; 4
 160:	31 f4       	brne	.+12     	; 0x16e <_ZN14portcontroller13digitalwriteaEhb+0x40>
 162:	44 23       	and	r20, r20
 164:	11 f0       	breq	.+4      	; 0x16a <_ZN14portcontroller13digitalwriteaEhb+0x3c>
 166:	13 9a       	sbi	0x02, 3	; 2
 168:	08 95       	ret
 16a:	13 98       	cbi	0x02, 3	; 2
 16c:	08 95       	ret
 16e:	65 30       	cpi	r22, 0x05	; 5
 170:	31 f4       	brne	.+12     	; 0x17e <_ZN14portcontroller13digitalwriteaEhb+0x50>
 172:	44 23       	and	r20, r20
 174:	11 f0       	breq	.+4      	; 0x17a <_ZN14portcontroller13digitalwriteaEhb+0x4c>
 176:	14 9a       	sbi	0x02, 4	; 2
 178:	08 95       	ret
 17a:	14 98       	cbi	0x02, 4	; 2
 17c:	08 95       	ret
 17e:	66 30       	cpi	r22, 0x06	; 6
 180:	31 f4       	brne	.+12     	; 0x18e <_ZN14portcontroller13digitalwriteaEhb+0x60>
 182:	44 23       	and	r20, r20
 184:	11 f0       	breq	.+4      	; 0x18a <_ZN14portcontroller13digitalwriteaEhb+0x5c>
 186:	15 9a       	sbi	0x02, 5	; 2
 188:	08 95       	ret
 18a:	15 98       	cbi	0x02, 5	; 2
 18c:	08 95       	ret
 18e:	67 30       	cpi	r22, 0x07	; 7
 190:	31 f4       	brne	.+12     	; 0x19e <_ZN14portcontroller13digitalwriteaEhb+0x70>
 192:	44 23       	and	r20, r20
 194:	11 f0       	breq	.+4      	; 0x19a <_ZN14portcontroller13digitalwriteaEhb+0x6c>
 196:	16 9a       	sbi	0x02, 6	; 2
 198:	08 95       	ret
 19a:	16 98       	cbi	0x02, 6	; 2
 19c:	08 95       	ret
 19e:	68 30       	cpi	r22, 0x08	; 8
 1a0:	29 f4       	brne	.+10     	; 0x1ac <_ZN14portcontroller13digitalwriteaEhb+0x7e>
 1a2:	44 23       	and	r20, r20
 1a4:	11 f0       	breq	.+4      	; 0x1aa <_ZN14portcontroller13digitalwriteaEhb+0x7c>
 1a6:	17 9a       	sbi	0x02, 7	; 2
 1a8:	08 95       	ret
 1aa:	17 98       	cbi	0x02, 7	; 2
 1ac:	08 95       	ret

000001ae <_ZN14portcontroller12digitalwriteEhb>:
 1ae:	9c 01       	movw	r18, r24
 1b0:	9f ef       	ldi	r25, 0xFF	; 255
 1b2:	96 0f       	add	r25, r22
 1b4:	98 30       	cpi	r25, 0x08	; 8
 1b6:	28 f4       	brcc	.+10     	; 0x1c2 <_ZN14portcontroller12digitalwriteEhb+0x14>
 1b8:	69 2f       	mov	r22, r25
 1ba:	c9 01       	movw	r24, r18
 1bc:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN14portcontroller13digitalwriteaEhb>
 1c0:	08 95       	ret
 1c2:	82 ef       	ldi	r24, 0xF2	; 242
 1c4:	86 0f       	add	r24, r22
 1c6:	88 30       	cpi	r24, 0x08	; 8
 1c8:	28 f4       	brcc	.+10     	; 0x1d4 <_ZN14portcontroller12digitalwriteEhb+0x26>
 1ca:	6d 50       	subi	r22, 0x0D	; 13
 1cc:	c9 01       	movw	r24, r18
 1ce:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN14portcontroller13digitalwriteaEhb>
 1d2:	08 95       	ret
 1d4:	8a ee       	ldi	r24, 0xEA	; 234
 1d6:	86 0f       	add	r24, r22
 1d8:	88 30       	cpi	r24, 0x08	; 8
 1da:	28 f4       	brcc	.+10     	; 0x1e6 <_ZN14portcontroller12digitalwriteEhb+0x38>
 1dc:	65 51       	subi	r22, 0x15	; 21
 1de:	c9 01       	movw	r24, r18
 1e0:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN14portcontroller13digitalwriteaEhb>
 1e4:	08 95       	ret
 1e6:	8f ed       	ldi	r24, 0xDF	; 223
 1e8:	86 0f       	add	r24, r22
 1ea:	88 30       	cpi	r24, 0x08	; 8
 1ec:	20 f4       	brcc	.+8      	; 0x1f6 <_ZN14portcontroller12digitalwriteEhb+0x48>
 1ee:	60 52       	subi	r22, 0x20	; 32
 1f0:	c9 01       	movw	r24, r18
 1f2:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN14portcontroller13digitalwriteaEhb>
 1f6:	08 95       	ret

000001f8 <_ZN14portcontrollerD1Ev>:
	}

}

// default destructor
portcontroller::~portcontroller()
 1f8:	08 95       	ret

000001fa <_ZN8shiftregC1EhhhP14portcontroller>:
	}
	port->digitalwrite(latchclkpin,true);

	port->digitalwrite(latchclkpin,false);

}
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	fc 01       	movw	r30, r24
 200:	60 83       	st	Z, r22
 202:	41 83       	std	Z+1, r20	; 0x01
 204:	22 83       	std	Z+2, r18	; 0x02
 206:	14 87       	std	Z+12, r17	; 0x0c
 208:	03 87       	std	Z+11, r16	; 0x0b
 20a:	13 82       	std	Z+3, r1	; 0x03
 20c:	14 82       	std	Z+4, r1	; 0x04
 20e:	15 82       	std	Z+5, r1	; 0x05
 210:	16 82       	std	Z+6, r1	; 0x06
 212:	17 82       	std	Z+7, r1	; 0x07
 214:	10 86       	std	Z+8, r1	; 0x08
 216:	11 86       	std	Z+9, r1	; 0x09
 218:	12 86       	std	Z+10, r1	; 0x0a
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	08 95       	ret

00000220 <_ZN8shiftreg9shiftout8Eh>:
 220:	ef 92       	push	r14
 222:	ff 92       	push	r15
 224:	0f 93       	push	r16
 226:	1f 93       	push	r17
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	ec 01       	movw	r28, r24
 22e:	07 e0       	ldi	r16, 0x07	; 7
 230:	10 e0       	ldi	r17, 0x00	; 0
 232:	e6 2e       	mov	r14, r22
 234:	f1 2c       	mov	r15, r1
 236:	c7 01       	movw	r24, r14
 238:	00 2e       	mov	r0, r16
 23a:	02 c0       	rjmp	.+4      	; 0x240 <_ZN8shiftreg9shiftout8Eh+0x20>
 23c:	95 95       	asr	r25
 23e:	87 95       	ror	r24
 240:	0a 94       	dec	r0
 242:	e2 f7       	brpl	.-8      	; 0x23c <_ZN8shiftreg9shiftout8Eh+0x1c>
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	39 f4       	brne	.+14     	; 0x256 <_ZN8shiftreg9shiftout8Eh+0x36>
 248:	41 e0       	ldi	r20, 0x01	; 1
 24a:	68 81       	ld	r22, Y
 24c:	8b 85       	ldd	r24, Y+11	; 0x0b
 24e:	9c 85       	ldd	r25, Y+12	; 0x0c
 250:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 254:	06 c0       	rjmp	.+12     	; 0x262 <_ZN8shiftreg9shiftout8Eh+0x42>
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	68 81       	ld	r22, Y
 25a:	8b 85       	ldd	r24, Y+11	; 0x0b
 25c:	9c 85       	ldd	r25, Y+12	; 0x0c
 25e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	69 81       	ldd	r22, Y+1	; 0x01
 266:	8b 85       	ldd	r24, Y+11	; 0x0b
 268:	9c 85       	ldd	r25, Y+12	; 0x0c
 26a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 26e:	40 e0       	ldi	r20, 0x00	; 0
 270:	69 81       	ldd	r22, Y+1	; 0x01
 272:	8b 85       	ldd	r24, Y+11	; 0x0b
 274:	9c 85       	ldd	r25, Y+12	; 0x0c
 276:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 27a:	01 50       	subi	r16, 0x01	; 1
 27c:	11 09       	sbc	r17, r1
 27e:	d8 f6       	brcc	.-74     	; 0x236 <_ZN8shiftreg9shiftout8Eh+0x16>
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	6a 81       	ldd	r22, Y+2	; 0x02
 284:	8b 85       	ldd	r24, Y+11	; 0x0b
 286:	9c 85       	ldd	r25, Y+12	; 0x0c
 288:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 28c:	40 e0       	ldi	r20, 0x00	; 0
 28e:	6a 81       	ldd	r22, Y+2	; 0x02
 290:	8b 85       	ldd	r24, Y+11	; 0x0b
 292:	9c 85       	ldd	r25, Y+12	; 0x0c
 294:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	ff 90       	pop	r15
 2a2:	ef 90       	pop	r14
 2a4:	08 95       	ret

000002a6 <_ZN8shiftreg10shiftout64Ey>:
void shiftreg::shiftout64(uint64_t data32)
{
 2a6:	7f 92       	push	r7
 2a8:	8f 92       	push	r8
 2aa:	9f 92       	push	r9
 2ac:	af 92       	push	r10
 2ae:	bf 92       	push	r11
 2b0:	cf 92       	push	r12
 2b2:	df 92       	push	r13
 2b4:	ef 92       	push	r14
 2b6:	ff 92       	push	r15
 2b8:	0f 93       	push	r16
 2ba:	1f 93       	push	r17
 2bc:	cf 93       	push	r28
 2be:	df 93       	push	r29
 2c0:	ec 01       	movw	r28, r24
 2c2:	70 2e       	mov	r7, r16
 2c4:	82 2e       	mov	r8, r18
 2c6:	93 2e       	mov	r9, r19
 2c8:	a4 2e       	mov	r10, r20
 2ca:	b5 2e       	mov	r11, r21
 2cc:	c6 2e       	mov	r12, r22
 2ce:	d7 2e       	mov	r13, r23
 2d0:	68 94       	set
 2d2:	ee 24       	eor	r14, r14
 2d4:	e6 f8       	bld	r14, 6
 2d6:	f1 2c       	mov	r15, r1
	
	for (char i =  0; i<64;i++)
	{
		if ((data32>>(64-i))==1)
 2d8:	27 2d       	mov	r18, r7
 2da:	31 2f       	mov	r19, r17
 2dc:	48 2d       	mov	r20, r8
 2de:	59 2d       	mov	r21, r9
 2e0:	6a 2d       	mov	r22, r10
 2e2:	7b 2d       	mov	r23, r11
 2e4:	8c 2d       	mov	r24, r12
 2e6:	9d 2d       	mov	r25, r13
 2e8:	0e 2d       	mov	r16, r14
 2ea:	0e 94 4c 05 	call	0xa98	; 0xa98 <__lshrdi3>
 2ee:	a1 e0       	ldi	r26, 0x01	; 1
 2f0:	0e 94 68 05 	call	0xad0	; 0xad0 <__cmpdi2_s8>
 2f4:	39 f4       	brne	.+14     	; 0x304 <_ZN8shiftreg10shiftout64Ey+0x5e>
		{
			
			port->digitalwrite(datapin,true);
 2f6:	41 e0       	ldi	r20, 0x01	; 1
 2f8:	68 81       	ld	r22, Y
 2fa:	8b 85       	ldd	r24, Y+11	; 0x0b
 2fc:	9c 85       	ldd	r25, Y+12	; 0x0c
 2fe:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 302:	06 c0       	rjmp	.+12     	; 0x310 <_ZN8shiftreg10shiftout64Ey+0x6a>
			
		}
		else
		{
			port->digitalwrite(datapin,false);
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	68 81       	ld	r22, Y
 308:	8b 85       	ldd	r24, Y+11	; 0x0b
 30a:	9c 85       	ldd	r25, Y+12	; 0x0c
 30c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
		}
		port->digitalwrite(clockpin,true);
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	69 81       	ldd	r22, Y+1	; 0x01
 314:	8b 85       	ldd	r24, Y+11	; 0x0b
 316:	9c 85       	ldd	r25, Y+12	; 0x0c
 318:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
		port->digitalwrite(clockpin,false);
 31c:	40 e0       	ldi	r20, 0x00	; 0
 31e:	69 81       	ldd	r22, Y+1	; 0x01
 320:	8b 85       	ldd	r24, Y+11	; 0x0b
 322:	9c 85       	ldd	r25, Y+12	; 0x0c
 324:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	e8 1a       	sub	r14, r24
 32c:	f1 08       	sbc	r15, r1

}
void shiftreg::shiftout64(uint64_t data32)
{
	
	for (char i =  0; i<64;i++)
 32e:	a1 f6       	brne	.-88     	; 0x2d8 <_ZN8shiftreg10shiftout64Ey+0x32>
		}
		port->digitalwrite(clockpin,true);
		port->digitalwrite(clockpin,false);
		
	}
	port->digitalwrite(latchclkpin,true);
 330:	41 e0       	ldi	r20, 0x01	; 1
 332:	6a 81       	ldd	r22, Y+2	; 0x02
 334:	8b 85       	ldd	r24, Y+11	; 0x0b
 336:	9c 85       	ldd	r25, Y+12	; 0x0c
 338:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>

	port->digitalwrite(latchclkpin,false);
 33c:	40 e0       	ldi	r20, 0x00	; 0
 33e:	6a 81       	ldd	r22, Y+2	; 0x02
 340:	8b 85       	ldd	r24, Y+11	; 0x0b
 342:	9c 85       	ldd	r25, Y+12	; 0x0c
 344:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>

}
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	1f 91       	pop	r17
 34e:	0f 91       	pop	r16
 350:	ff 90       	pop	r15
 352:	ef 90       	pop	r14
 354:	df 90       	pop	r13
 356:	cf 90       	pop	r12
 358:	bf 90       	pop	r11
 35a:	af 90       	pop	r10
 35c:	9f 90       	pop	r9
 35e:	8f 90       	pop	r8
 360:	7f 90       	pop	r7
 362:	08 95       	ret

00000364 <_ZN8shiftregD1Ev>:
// default destructor
shiftreg::~shiftreg()
 364:	08 95       	ret

00000366 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>:
// default constructor
eeprom::eeprom()
{
} //eeprom

 eeprom::eeprom(portcontroller* portptr,shiftreg* addrptr,shiftreg* dataregister,uint8_t wepin,uint64_t address2)
 366:	8f 92       	push	r8
 368:	9f 92       	push	r9
 36a:	af 92       	push	r10
 36c:	bf 92       	push	r11
 36e:	cf 92       	push	r12
 370:	df 92       	push	r13
 372:	ef 92       	push	r14
 374:	ff 92       	push	r15
 376:	0f 93       	push	r16
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	cd b7       	in	r28, 0x3d	; 61
 37e:	de b7       	in	r29, 0x3e	; 62
 380:	fc 01       	movw	r30, r24
 382:	cb 01       	movw	r24, r22
 384:	60 2f       	mov	r22, r16
 {
	 	this->portptr=portptr;
 386:	94 83       	std	Z+4, r25	; 0x04
 388:	83 83       	std	Z+3, r24	; 0x03
	 	this->addrptr=addrptr;
 38a:	56 83       	std	Z+6, r21	; 0x06
 38c:	45 83       	std	Z+5, r20	; 0x05
		this->dataptr=dataregister;
 38e:	30 87       	std	Z+8, r19	; 0x08
 390:	27 83       	std	Z+7, r18	; 0x07
	 	this->wepin=wepin;
 392:	02 83       	std	Z+2, r16	; 0x02
		this->address= address2;
 394:	81 86       	std	Z+9, r8	; 0x09
 396:	92 86       	std	Z+10, r9	; 0x0a
 398:	a3 86       	std	Z+11, r10	; 0x0b
 39a:	b4 86       	std	Z+12, r11	; 0x0c
 39c:	c5 86       	std	Z+13, r12	; 0x0d
 39e:	d6 86       	std	Z+14, r13	; 0x0e
 3a0:	e7 86       	std	Z+15, r14	; 0x0f
 3a2:	f0 8a       	std	Z+16, r15	; 0x10
		this->offset = 0;
 3a4:	11 82       	std	Z+1, r1	; 0x01
 3a6:	10 82       	st	Z, r1
	 	portptr->digitalwrite(wepin,true);
 3a8:	41 e0       	ldi	r20, 0x01	; 1
 3aa:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>

 }
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	0f 91       	pop	r16
 3b4:	ff 90       	pop	r15
 3b6:	ef 90       	pop	r14
 3b8:	df 90       	pop	r13
 3ba:	cf 90       	pop	r12
 3bc:	bf 90       	pop	r11
 3be:	af 90       	pop	r10
 3c0:	9f 90       	pop	r9
 3c2:	8f 90       	pop	r8
 3c4:	08 95       	ret

000003c6 <_ZN6eepromD1Ev>:

// default destructor
eeprom::~eeprom()
 3c6:	08 95       	ret

000003c8 <_ZN3romC1EP14portcontrollerP8shiftregy>:
}

uint16_t rom::getaddr()
{
	return address;
}
 3c8:	cf 92       	push	r12
 3ca:	df 92       	push	r13
 3cc:	ef 92       	push	r14
 3ce:	ff 92       	push	r15
 3d0:	0f 93       	push	r16
 3d2:	1f 93       	push	r17
 3d4:	fc 01       	movw	r30, r24
 3d6:	71 8b       	std	Z+17, r23	; 0x11
 3d8:	60 8b       	std	Z+16, r22	; 0x10
 3da:	53 8b       	std	Z+19, r21	; 0x13
 3dc:	42 8b       	std	Z+18, r20	; 0x12
 3de:	c0 86       	std	Z+8, r12	; 0x08
 3e0:	d1 86       	std	Z+9, r13	; 0x09
 3e2:	e2 86       	std	Z+10, r14	; 0x0a
 3e4:	f3 86       	std	Z+11, r15	; 0x0b
 3e6:	04 87       	std	Z+12, r16	; 0x0c
 3e8:	15 87       	std	Z+13, r17	; 0x0d
 3ea:	26 87       	std	Z+14, r18	; 0x0e
 3ec:	37 87       	std	Z+15, r19	; 0x0f
 3ee:	10 82       	st	Z, r1
 3f0:	11 82       	std	Z+1, r1	; 0x01
 3f2:	12 82       	std	Z+2, r1	; 0x02
 3f4:	13 82       	std	Z+3, r1	; 0x03
 3f6:	14 82       	std	Z+4, r1	; 0x04
 3f8:	15 82       	std	Z+5, r1	; 0x05
 3fa:	16 82       	std	Z+6, r1	; 0x06
 3fc:	17 82       	std	Z+7, r1	; 0x07
 3fe:	1f 91       	pop	r17
 400:	0f 91       	pop	r16
 402:	ff 90       	pop	r15
 404:	ef 90       	pop	r14
 406:	df 90       	pop	r13
 408:	cf 90       	pop	r12
 40a:	08 95       	ret

0000040c <_ZN3romD1Ev>:

// default destructor
rom::~rom()
 40c:	08 95       	ret

0000040e <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>:
		dataptr->shiftout8(data);
	}
	portptr->digitalwrite(wepin,false);
	_delay_ms(1);
	portptr->digitalwrite(wepin,true);
}
 40e:	8f 92       	push	r8
 410:	9f 92       	push	r9
 412:	af 92       	push	r10
 414:	bf 92       	push	r11
 416:	cf 92       	push	r12
 418:	df 92       	push	r13
 41a:	ef 92       	push	r14
 41c:	ff 92       	push	r15
 41e:	0f 93       	push	r16
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	cd b7       	in	r28, 0x3d	; 61
 426:	de b7       	in	r29, 0x3e	; 62
 428:	fc 01       	movw	r30, r24
 42a:	cb 01       	movw	r24, r22
 42c:	60 2f       	mov	r22, r16
 42e:	93 83       	std	Z+3, r25	; 0x03
 430:	82 83       	std	Z+2, r24	; 0x02
 432:	55 83       	std	Z+5, r21	; 0x05
 434:	44 83       	std	Z+4, r20	; 0x04
 436:	37 83       	std	Z+7, r19	; 0x07
 438:	26 83       	std	Z+6, r18	; 0x06
 43a:	01 83       	std	Z+1, r16	; 0x01
 43c:	80 86       	std	Z+8, r8	; 0x08
 43e:	91 86       	std	Z+9, r9	; 0x09
 440:	a2 86       	std	Z+10, r10	; 0x0a
 442:	b3 86       	std	Z+11, r11	; 0x0b
 444:	c4 86       	std	Z+12, r12	; 0x0c
 446:	d5 86       	std	Z+13, r13	; 0x0d
 448:	e6 86       	std	Z+14, r14	; 0x0e
 44a:	f7 86       	std	Z+15, r15	; 0x0f
 44c:	10 82       	st	Z, r1
 44e:	41 e0       	ldi	r20, 0x01	; 1
 450:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
 454:	df 91       	pop	r29
 456:	cf 91       	pop	r28
 458:	0f 91       	pop	r16
 45a:	ff 90       	pop	r15
 45c:	ef 90       	pop	r14
 45e:	df 90       	pop	r13
 460:	cf 90       	pop	r12
 462:	bf 90       	pop	r11
 464:	af 90       	pop	r10
 466:	9f 90       	pop	r9
 468:	8f 90       	pop	r8
 46a:	08 95       	ret

0000046c <_ZN3ram5writeEyc>:
void ram::write(uint64_t address,char data)
{
 46c:	ef 92       	push	r14
 46e:	0f 93       	push	r16
 470:	1f 93       	push	r17
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	ec 01       	movw	r28, r24
	addrptr->shiftout64(address);
 478:	8c 81       	ldd	r24, Y+4	; 0x04
 47a:	9d 81       	ldd	r25, Y+5	; 0x05
 47c:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_ZN8shiftreg10shiftout64Ey>
	if(dataptr == NULL)
 480:	8e 81       	ldd	r24, Y+6	; 0x06
 482:	9f 81       	ldd	r25, Y+7	; 0x07
 484:	00 97       	sbiw	r24, 0x00	; 0
 486:	31 f4       	brne	.+12     	; 0x494 <_ZN3ram5writeEyc+0x28>
	{
		portptr->writeportc(data);
 488:	6e 2d       	mov	r22, r14
 48a:	8a 81       	ldd	r24, Y+2	; 0x02
 48c:	9b 81       	ldd	r25, Y+3	; 0x03
 48e:	0e 94 91 00 	call	0x122	; 0x122 <_ZN14portcontroller10writeportcEc>
 492:	03 c0       	rjmp	.+6      	; 0x49a <_ZN3ram5writeEyc+0x2e>
	}
	else
	{
		dataptr->shiftout8(data);
 494:	6e 2d       	mov	r22, r14
 496:	0e 94 10 01 	call	0x220	; 0x220 <_ZN8shiftreg9shiftout8Eh>
	}
	portptr->digitalwrite(wepin,false);
 49a:	40 e0       	ldi	r20, 0x00	; 0
 49c:	69 81       	ldd	r22, Y+1	; 0x01
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	9b 81       	ldd	r25, Y+3	; 0x03
 4a2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4a6:	89 ef       	ldi	r24, 0xF9	; 249
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	01 97       	sbiw	r24, 0x01	; 1
 4ac:	f1 f7       	brne	.-4      	; 0x4aa <_ZN3ram5writeEyc+0x3e>
 4ae:	00 c0       	rjmp	.+0      	; 0x4b0 <_ZN3ram5writeEyc+0x44>
 4b0:	00 00       	nop
	_delay_ms(1);
	portptr->digitalwrite(wepin,true);
 4b2:	41 e0       	ldi	r20, 0x01	; 1
 4b4:	69 81       	ldd	r22, Y+1	; 0x01
 4b6:	8a 81       	ldd	r24, Y+2	; 0x02
 4b8:	9b 81       	ldd	r25, Y+3	; 0x03
 4ba:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN14portcontroller12digitalwriteEhb>
}
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	1f 91       	pop	r17
 4c4:	0f 91       	pop	r16
 4c6:	ef 90       	pop	r14
 4c8:	08 95       	ret

000004ca <_ZN3ramD1Ev>:
{
	return address;
}
*/
// default destructor
ram::~ram()
 4ca:	08 95       	ret

000004cc <_ZN4VramC1EP14portcontrollerP8shiftregS3_hy>:
{
	for (int i =0; i<8 ; i++)
	{
		write(this->custom_char_memory_base+i,customchar[i]);	
	}
}
 4cc:	8f 92       	push	r8
 4ce:	9f 92       	push	r9
 4d0:	af 92       	push	r10
 4d2:	bf 92       	push	r11
 4d4:	cf 92       	push	r12
 4d6:	df 92       	push	r13
 4d8:	ef 92       	push	r14
 4da:	ff 92       	push	r15
 4dc:	0f 93       	push	r16
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
 4e2:	cd b7       	in	r28, 0x3d	; 61
 4e4:	de b7       	in	r29, 0x3e	; 62
 4e6:	0e 94 07 02 	call	0x40e	; 0x40e <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
 4ea:	df 91       	pop	r29
 4ec:	cf 91       	pop	r28
 4ee:	0f 91       	pop	r16
 4f0:	ff 90       	pop	r15
 4f2:	ef 90       	pop	r14
 4f4:	df 90       	pop	r13
 4f6:	cf 90       	pop	r12
 4f8:	bf 90       	pop	r11
 4fa:	af 90       	pop	r10
 4fc:	9f 90       	pop	r9
 4fe:	8f 90       	pop	r8
 500:	08 95       	ret

00000502 <_ZN4VramD1Ev>:

// default destructor
Vram::~Vram()
 502:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
 506:	08 95       	ret

00000508 <_Z11storememoryyc>:
{
	
	
}
void storememory(uint64_t address, char out)
{
 508:	6f 92       	push	r6
 50a:	7f 92       	push	r7
 50c:	8f 92       	push	r8
 50e:	9f 92       	push	r9
 510:	af 92       	push	r10
 512:	bf 92       	push	r11
 514:	cf 92       	push	r12
 516:	df 92       	push	r13
 518:	ef 92       	push	r14
 51a:	ff 92       	push	r15
 51c:	0f 93       	push	r16
 51e:	1f 93       	push	r17
 520:	cf 93       	push	r28
 522:	df 93       	push	r29
 524:	c2 2e       	mov	r12, r18
 526:	d3 2e       	mov	r13, r19
 528:	f4 2e       	mov	r15, r20
 52a:	d5 2f       	mov	r29, r21
 52c:	c6 2f       	mov	r28, r22
 52e:	b7 2f       	mov	r27, r23
 530:	f8 2f       	mov	r31, r24
 532:	e9 2f       	mov	r30, r25
 534:	e0 2e       	mov	r14, r16
	if (address>=0x0 && address<=0x3fff)
 536:	2f 3f       	cpi	r18, 0xFF	; 255
 538:	0f e3       	ldi	r16, 0x3F	; 63
 53a:	30 07       	cpc	r19, r16
 53c:	41 05       	cpc	r20, r1
 53e:	51 05       	cpc	r21, r1
 540:	61 05       	cpc	r22, r1
 542:	71 05       	cpc	r23, r1
 544:	81 05       	cpc	r24, r1
 546:	91 05       	cpc	r25, r1
 548:	09 f0       	breq	.+2      	; 0x54c <_Z11storememoryyc+0x44>
 54a:	68 f4       	brcc	.+26     	; 0x566 <_Z11storememoryyc+0x5e>
	{
		bank0.write(address,out);
 54c:	02 2f       	mov	r16, r18
 54e:	13 2f       	mov	r17, r19
 550:	24 2f       	mov	r18, r20
 552:	35 2f       	mov	r19, r21
 554:	46 2f       	mov	r20, r22
 556:	57 2f       	mov	r21, r23
 558:	68 2f       	mov	r22, r24
 55a:	79 2f       	mov	r23, r25
 55c:	88 e7       	ldi	r24, 0x78	; 120
 55e:	93 e0       	ldi	r25, 0x03	; 3
 560:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN3ram5writeEyc>
 564:	9c c0       	rjmp	.+312    	; 0x69e <_Z11storememoryyc+0x196>
	}
	else if (address>=0x4000 && address<=0x7fff)
 566:	30 54       	subi	r19, 0x40	; 64
 568:	41 09       	sbc	r20, r1
 56a:	51 09       	sbc	r21, r1
 56c:	61 09       	sbc	r22, r1
 56e:	71 09       	sbc	r23, r1
 570:	81 09       	sbc	r24, r1
 572:	91 09       	sbc	r25, r1
 574:	13 2f       	mov	r17, r19
 576:	2f 3f       	cpi	r18, 0xFF	; 255
 578:	0f e3       	ldi	r16, 0x3F	; 63
 57a:	30 07       	cpc	r19, r16
 57c:	41 05       	cpc	r20, r1
 57e:	51 05       	cpc	r21, r1
 580:	61 05       	cpc	r22, r1
 582:	71 05       	cpc	r23, r1
 584:	81 05       	cpc	r24, r1
 586:	91 05       	cpc	r25, r1
 588:	09 f0       	breq	.+2      	; 0x58c <_Z11storememoryyc+0x84>
 58a:	60 f4       	brcc	.+24     	; 0x5a4 <_Z11storememoryyc+0x9c>
	{
		bank1.write(address-0x4000,out);
 58c:	02 2f       	mov	r16, r18
 58e:	24 2f       	mov	r18, r20
 590:	35 2f       	mov	r19, r21
 592:	46 2f       	mov	r20, r22
 594:	57 2f       	mov	r21, r23
 596:	68 2f       	mov	r22, r24
 598:	79 2f       	mov	r23, r25
 59a:	88 e6       	ldi	r24, 0x68	; 104
 59c:	93 e0       	ldi	r25, 0x03	; 3
 59e:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN3ram5writeEyc>
 5a2:	7d c0       	rjmp	.+250    	; 0x69e <_Z11storememoryyc+0x196>
	} 
	else if(address>=0x8000 && address<=0xbfff)
 5a4:	2c 2d       	mov	r18, r12
 5a6:	3d 2d       	mov	r19, r13
 5a8:	4f 2d       	mov	r20, r15
 5aa:	5d 2f       	mov	r21, r29
 5ac:	6c 2f       	mov	r22, r28
 5ae:	7b 2f       	mov	r23, r27
 5b0:	8f 2f       	mov	r24, r31
 5b2:	9e 2f       	mov	r25, r30
 5b4:	30 58       	subi	r19, 0x80	; 128
 5b6:	41 09       	sbc	r20, r1
 5b8:	51 09       	sbc	r21, r1
 5ba:	61 09       	sbc	r22, r1
 5bc:	71 09       	sbc	r23, r1
 5be:	81 09       	sbc	r24, r1
 5c0:	91 09       	sbc	r25, r1
 5c2:	13 2f       	mov	r17, r19
 5c4:	2f 3f       	cpi	r18, 0xFF	; 255
 5c6:	0f e3       	ldi	r16, 0x3F	; 63
 5c8:	30 07       	cpc	r19, r16
 5ca:	41 05       	cpc	r20, r1
 5cc:	51 05       	cpc	r21, r1
 5ce:	61 05       	cpc	r22, r1
 5d0:	71 05       	cpc	r23, r1
 5d2:	81 05       	cpc	r24, r1
 5d4:	91 05       	cpc	r25, r1
 5d6:	09 f0       	breq	.+2      	; 0x5da <_Z11storememoryyc+0xd2>
 5d8:	60 f4       	brcc	.+24     	; 0x5f2 <_Z11storememoryyc+0xea>
	{
		bank2.write(address-0x8000,out);
 5da:	02 2f       	mov	r16, r18
 5dc:	24 2f       	mov	r18, r20
 5de:	35 2f       	mov	r19, r21
 5e0:	46 2f       	mov	r20, r22
 5e2:	57 2f       	mov	r21, r23
 5e4:	68 2f       	mov	r22, r24
 5e6:	79 2f       	mov	r23, r25
 5e8:	88 e5       	ldi	r24, 0x58	; 88
 5ea:	93 e0       	ldi	r25, 0x03	; 3
 5ec:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN3ram5writeEyc>
 5f0:	56 c0       	rjmp	.+172    	; 0x69e <_Z11storememoryyc+0x196>
	}
	else if(address>=0xC000 && address<=0xffff)
 5f2:	2c 2d       	mov	r18, r12
 5f4:	3d 2d       	mov	r19, r13
 5f6:	4f 2d       	mov	r20, r15
 5f8:	5d 2f       	mov	r21, r29
 5fa:	6c 2f       	mov	r22, r28
 5fc:	7b 2f       	mov	r23, r27
 5fe:	8f 2f       	mov	r24, r31
 600:	9e 2f       	mov	r25, r30
 602:	30 5c       	subi	r19, 0xC0	; 192
 604:	41 09       	sbc	r20, r1
 606:	51 09       	sbc	r21, r1
 608:	61 09       	sbc	r22, r1
 60a:	71 09       	sbc	r23, r1
 60c:	81 09       	sbc	r24, r1
 60e:	91 09       	sbc	r25, r1
 610:	13 2f       	mov	r17, r19
 612:	2f 3f       	cpi	r18, 0xFF	; 255
 614:	0f e3       	ldi	r16, 0x3F	; 63
 616:	30 07       	cpc	r19, r16
 618:	41 05       	cpc	r20, r1
 61a:	51 05       	cpc	r21, r1
 61c:	61 05       	cpc	r22, r1
 61e:	71 05       	cpc	r23, r1
 620:	81 05       	cpc	r24, r1
 622:	91 05       	cpc	r25, r1
 624:	09 f0       	breq	.+2      	; 0x628 <_Z11storememoryyc+0x120>
 626:	60 f4       	brcc	.+24     	; 0x640 <_Z11storememoryyc+0x138>
	{
		bank3.write(address-0xC000,out);
 628:	02 2f       	mov	r16, r18
 62a:	24 2f       	mov	r18, r20
 62c:	35 2f       	mov	r19, r21
 62e:	46 2f       	mov	r20, r22
 630:	57 2f       	mov	r21, r23
 632:	68 2f       	mov	r22, r24
 634:	79 2f       	mov	r23, r25
 636:	88 e4       	ldi	r24, 0x48	; 72
 638:	93 e0       	ldi	r25, 0x03	; 3
 63a:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN3ram5writeEyc>
 63e:	2f c0       	rjmp	.+94     	; 0x69e <_Z11storememoryyc+0x196>
	}
	else if(address>=0xffff && address<=0x10000)
 640:	2c 2d       	mov	r18, r12
 642:	3d 2d       	mov	r19, r13
 644:	4f 2d       	mov	r20, r15
 646:	5d 2f       	mov	r21, r29
 648:	6c 2f       	mov	r22, r28
 64a:	7b 2f       	mov	r23, r27
 64c:	8f 2f       	mov	r24, r31
 64e:	9e 2f       	mov	r25, r30
 650:	2f 5f       	subi	r18, 0xFF	; 255
 652:	3f 4f       	sbci	r19, 0xFF	; 255
 654:	41 09       	sbc	r20, r1
 656:	51 09       	sbc	r21, r1
 658:	61 09       	sbc	r22, r1
 65a:	71 09       	sbc	r23, r1
 65c:	81 09       	sbc	r24, r1
 65e:	91 09       	sbc	r25, r1
 660:	a1 e0       	ldi	r26, 0x01	; 1
 662:	0e 94 68 05 	call	0xad0	; 0xad0 <__cmpdi2_s8>
 666:	09 f0       	breq	.+2      	; 0x66a <_Z11storememoryyc+0x162>
 668:	d0 f4       	brcc	.+52     	; 0x69e <_Z11storememoryyc+0x196>
	{
		bank4.write(address-0x10000,out);
 66a:	2c 2d       	mov	r18, r12
 66c:	3d 2d       	mov	r19, r13
 66e:	4f 2d       	mov	r20, r15
 670:	5d 2f       	mov	r21, r29
 672:	6c 2f       	mov	r22, r28
 674:	7b 2f       	mov	r23, r27
 676:	8f 2f       	mov	r24, r31
 678:	9e 2f       	mov	r25, r30
 67a:	41 50       	subi	r20, 0x01	; 1
 67c:	51 09       	sbc	r21, r1
 67e:	61 09       	sbc	r22, r1
 680:	71 09       	sbc	r23, r1
 682:	81 09       	sbc	r24, r1
 684:	91 09       	sbc	r25, r1
 686:	02 2f       	mov	r16, r18
 688:	13 2f       	mov	r17, r19
 68a:	24 2f       	mov	r18, r20
 68c:	35 2f       	mov	r19, r21
 68e:	46 2f       	mov	r20, r22
 690:	57 2f       	mov	r21, r23
 692:	68 2f       	mov	r22, r24
 694:	79 2f       	mov	r23, r25
 696:	88 e3       	ldi	r24, 0x38	; 56
 698:	93 e0       	ldi	r25, 0x03	; 3
 69a:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN3ram5writeEyc>
	}
	
	
}
 69e:	df 91       	pop	r29
 6a0:	cf 91       	pop	r28
 6a2:	1f 91       	pop	r17
 6a4:	0f 91       	pop	r16
 6a6:	ff 90       	pop	r15
 6a8:	ef 90       	pop	r14
 6aa:	df 90       	pop	r13
 6ac:	cf 90       	pop	r12
 6ae:	bf 90       	pop	r11
 6b0:	af 90       	pop	r10
 6b2:	9f 90       	pop	r9
 6b4:	8f 90       	pop	r8
 6b6:	7f 90       	pop	r7
 6b8:	6f 90       	pop	r6
 6ba:	08 95       	ret

000006bc <main>:
int main(void)
{
	port.writeddra(0xff);
 6bc:	6f ef       	ldi	r22, 0xFF	; 255
 6be:	82 ea       	ldi	r24, 0xA2	; 162
 6c0:	93 e0       	ldi	r25, 0x03	; 3
 6c2:	0e 94 93 00 	call	0x126	; 0x126 <_ZN14portcontroller9writeddraEc>
	port.writeddrc(0xff);
 6c6:	6f ef       	ldi	r22, 0xFF	; 255
 6c8:	82 ea       	ldi	r24, 0xA2	; 162
 6ca:	93 e0       	ldi	r25, 0x03	; 3
 6cc:	0e 94 95 00 	call	0x12a	; 0x12a <_ZN14portcontroller9writeddrcEc>
	interpret.nop();
 6d0:	82 e0       	ldi	r24, 0x02	; 2
 6d2:	91 e0       	ldi	r25, 0x01	; 1
 6d4:	0e 94 89 00 	call	0x112	; 0x112 <_ZN11interpreter3nopEv>
	//bank1.setaddress(0);
    /* Replace with your application code */
    while (1) 
    {
		if (PINB>0)
 6d8:	83 b1       	in	r24, 0x03	; 3
 6da:	81 11       	cpse	r24, r1
		{
			if (PINB)
 6dc:	83 b1       	in	r24, 0x03	; 3
			{
				
			}
		}
		storememory(0x0000,0xff);
 6de:	0f ef       	ldi	r16, 0xFF	; 255
 6e0:	20 e0       	ldi	r18, 0x00	; 0
 6e2:	30 e0       	ldi	r19, 0x00	; 0
 6e4:	40 e0       	ldi	r20, 0x00	; 0
 6e6:	50 e0       	ldi	r21, 0x00	; 0
 6e8:	60 e0       	ldi	r22, 0x00	; 0
 6ea:	70 e0       	ldi	r23, 0x00	; 0
 6ec:	80 e0       	ldi	r24, 0x00	; 0
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	0e 94 84 02 	call	0x508	; 0x508 <_Z11storememoryyc>
	port.writeddra(0xff);
	port.writeddrc(0xff);
	interpret.nop();
	//bank1.setaddress(0);
    /* Replace with your application code */
    while (1) 
 6f4:	f1 cf       	rjmp	.-30     	; 0x6d8 <main+0x1c>

000006f6 <_GLOBAL__sub_I_gpvariables>:
				
			}
		}
		storememory(0x0000,0xff);
	}
 6f6:	8f 92       	push	r8
 6f8:	9f 92       	push	r9
 6fa:	af 92       	push	r10
 6fc:	bf 92       	push	r11
 6fe:	cf 92       	push	r12
 700:	df 92       	push	r13
 702:	ef 92       	push	r14
 704:	ff 92       	push	r15
 706:	0f 93       	push	r16
 708:	1f 93       	push	r17
 70a:	cf 93       	push	r28
 70c:	df 93       	push	r29
 70e:	cd b7       	in	r28, 0x3d	; 61
 710:	de b7       	in	r29, 0x3e	; 62
 712:	63 97       	sbiw	r28, 0x13	; 19
 714:	0f b6       	in	r0, 0x3f	; 63
 716:	f8 94       	cli
 718:	de bf       	out	0x3e, r29	; 62
 71a:	0f be       	out	0x3f, r0	; 63
 71c:	cd bf       	out	0x3d, r28	; 61
#include "drivers/mem/volatile/Vram.h"
#include "drivers/mem/rom.h"
#include "drivers/mem/eeprom.h"
#include "cpu/interrupts/interrupts.h"
#include "cpu/interpreter/interpreter.h"
static portcontroller port=portcontroller();
 71e:	82 ea       	ldi	r24, 0xA2	; 162
 720:	93 e0       	ldi	r25, 0x03	; 3
 722:	0e 94 90 00 	call	0x120	; 0x120 <_ZN14portcontrollerC1Ev>
static shiftreg addreg=shiftreg(40,39,38,&port);
 726:	02 ea       	ldi	r16, 0xA2	; 162
 728:	13 e0       	ldi	r17, 0x03	; 3
 72a:	26 e2       	ldi	r18, 0x26	; 38
 72c:	47 e2       	ldi	r20, 0x27	; 39
 72e:	68 e2       	ldi	r22, 0x28	; 40
 730:	85 e9       	ldi	r24, 0x95	; 149
 732:	93 e0       	ldi	r25, 0x03	; 3
 734:	0e 94 fd 00 	call	0x1fa	; 0x1fa <_ZN8shiftregC1EhhhP14portcontroller>
static shiftreg datareg=shiftreg(37,36,35,&port);
 738:	23 e2       	ldi	r18, 0x23	; 35
 73a:	44 e2       	ldi	r20, 0x24	; 36
 73c:	65 e2       	ldi	r22, 0x25	; 37
 73e:	88 e8       	ldi	r24, 0x88	; 136
 740:	93 e0       	ldi	r25, 0x03	; 3
 742:	0e 94 fd 00 	call	0x1fa	; 0x1fa <_ZN8shiftregC1EhhhP14portcontroller>
static ram bank0 = ram(&port,&addreg,&datareg,34,0u);	// os ram 
 746:	81 2c       	mov	r8, r1
 748:	91 2c       	mov	r9, r1
 74a:	a1 2c       	mov	r10, r1
 74c:	b1 2c       	mov	r11, r1
 74e:	c1 2c       	mov	r12, r1
 750:	d1 2c       	mov	r13, r1
 752:	e1 2c       	mov	r14, r1
 754:	f1 2c       	mov	r15, r1
 756:	02 e2       	ldi	r16, 0x22	; 34
 758:	28 e8       	ldi	r18, 0x88	; 136
 75a:	33 e0       	ldi	r19, 0x03	; 3
 75c:	45 e9       	ldi	r20, 0x95	; 149
 75e:	53 e0       	ldi	r21, 0x03	; 3
 760:	62 ea       	ldi	r22, 0xA2	; 162
 762:	73 e0       	ldi	r23, 0x03	; 3
 764:	88 e7       	ldi	r24, 0x78	; 120
 766:	93 e0       	ldi	r25, 0x03	; 3
 768:	0e 94 07 02 	call	0x40e	; 0x40e <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
 76c:	68 94       	set
 76e:	99 24       	eor	r9, r9
 770:	96 f8       	bld	r9, 6
 772:	28 e8       	ldi	r18, 0x88	; 136
 774:	33 e0       	ldi	r19, 0x03	; 3
 776:	45 e9       	ldi	r20, 0x95	; 149
 778:	53 e0       	ldi	r21, 0x03	; 3
 77a:	62 ea       	ldi	r22, 0xA2	; 162
 77c:	73 e0       	ldi	r23, 0x03	; 3
 77e:	88 e6       	ldi	r24, 0x68	; 104
 780:	93 e0       	ldi	r25, 0x03	; 3
 782:	0e 94 07 02 	call	0x40e	; 0x40e <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
 786:	68 94       	set
 788:	99 24       	eor	r9, r9
 78a:	97 f8       	bld	r9, 7
 78c:	28 e8       	ldi	r18, 0x88	; 136
 78e:	33 e0       	ldi	r19, 0x03	; 3
 790:	45 e9       	ldi	r20, 0x95	; 149
 792:	53 e0       	ldi	r21, 0x03	; 3
 794:	62 ea       	ldi	r22, 0xA2	; 162
 796:	73 e0       	ldi	r23, 0x03	; 3
 798:	88 e5       	ldi	r24, 0x58	; 88
 79a:	93 e0       	ldi	r25, 0x03	; 3
 79c:	0e 94 07 02 	call	0x40e	; 0x40e <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
 7a0:	0f 2e       	mov	r0, r31
 7a2:	f0 ec       	ldi	r31, 0xC0	; 192
 7a4:	9f 2e       	mov	r9, r31
 7a6:	f0 2d       	mov	r31, r0
 7a8:	28 e8       	ldi	r18, 0x88	; 136
 7aa:	33 e0       	ldi	r19, 0x03	; 3
 7ac:	45 e9       	ldi	r20, 0x95	; 149
 7ae:	53 e0       	ldi	r21, 0x03	; 3
 7b0:	62 ea       	ldi	r22, 0xA2	; 162
 7b2:	73 e0       	ldi	r23, 0x03	; 3
 7b4:	88 e4       	ldi	r24, 0x48	; 72
 7b6:	93 e0       	ldi	r25, 0x03	; 3
 7b8:	0e 94 07 02 	call	0x40e	; 0x40e <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram
 7bc:	91 2c       	mov	r9, r1
 7be:	aa 24       	eor	r10, r10
 7c0:	a3 94       	inc	r10
 7c2:	28 e8       	ldi	r18, 0x88	; 136
 7c4:	33 e0       	ldi	r19, 0x03	; 3
 7c6:	45 e9       	ldi	r20, 0x95	; 149
 7c8:	53 e0       	ldi	r21, 0x03	; 3
 7ca:	62 ea       	ldi	r22, 0xA2	; 162
 7cc:	73 e0       	ldi	r23, 0x03	; 3
 7ce:	ce 01       	movw	r24, r28
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	0e 94 66 02 	call	0x4cc	; 0x4cc <_ZN4VramC1EP14portcontrollerP8shiftregS3_hy>
 7d6:	80 e1       	ldi	r24, 0x10	; 16
 7d8:	fe 01       	movw	r30, r28
 7da:	31 96       	adiw	r30, 0x01	; 1
 7dc:	a8 e3       	ldi	r26, 0x38	; 56
 7de:	b3 e0       	ldi	r27, 0x03	; 3
 7e0:	01 90       	ld	r0, Z+
 7e2:	0d 92       	st	X+, r0
 7e4:	8a 95       	dec	r24
 7e6:	e1 f7       	brne	.-8      	; 0x7e0 <_GLOBAL__sub_I_gpvariables+0xea>
 7e8:	ce 01       	movw	r24, r28
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	0e 94 81 02 	call	0x502	; 0x502 <_ZN4VramD1Ev>

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};
 7f0:	80 e1       	ldi	r24, 0x10	; 16
 7f2:	e8 e7       	ldi	r30, 0x78	; 120
 7f4:	f3 e0       	ldi	r31, 0x03	; 3
 7f6:	a8 ee       	ldi	r26, 0xE8	; 232
 7f8:	b2 e0       	ldi	r27, 0x02	; 2
 7fa:	01 90       	ld	r0, Z+
 7fc:	0d 92       	st	X+, r0
 7fe:	8a 95       	dec	r24
 800:	e1 f7       	brne	.-8      	; 0x7fa <_GLOBAL__sub_I_gpvariables+0x104>
 802:	80 e1       	ldi	r24, 0x10	; 16
 804:	e8 e6       	ldi	r30, 0x68	; 104
 806:	f3 e0       	ldi	r31, 0x03	; 3
 808:	a8 ef       	ldi	r26, 0xF8	; 248
 80a:	b2 e0       	ldi	r27, 0x02	; 2
 80c:	01 90       	ld	r0, Z+
 80e:	0d 92       	st	X+, r0
 810:	8a 95       	dec	r24
 812:	e1 f7       	brne	.-8      	; 0x80c <_GLOBAL__sub_I_gpvariables+0x116>
 814:	80 e1       	ldi	r24, 0x10	; 16
 816:	e8 e5       	ldi	r30, 0x58	; 88
 818:	f3 e0       	ldi	r31, 0x03	; 3
 81a:	a8 e0       	ldi	r26, 0x08	; 8
 81c:	b3 e0       	ldi	r27, 0x03	; 3
 81e:	01 90       	ld	r0, Z+
 820:	0d 92       	st	X+, r0
 822:	8a 95       	dec	r24
 824:	e1 f7       	brne	.-8      	; 0x81e <_GLOBAL__sub_I_gpvariables+0x128>
 826:	80 e1       	ldi	r24, 0x10	; 16
 828:	e8 e4       	ldi	r30, 0x48	; 72
 82a:	f3 e0       	ldi	r31, 0x03	; 3
 82c:	a8 e1       	ldi	r26, 0x18	; 24
 82e:	b3 e0       	ldi	r27, 0x03	; 3
 830:	01 90       	ld	r0, Z+
 832:	0d 92       	st	X+, r0
 834:	8a 95       	dec	r24
 836:	e1 f7       	brne	.-8      	; 0x830 <_GLOBAL__sub_I_gpvariables+0x13a>
 838:	80 e1       	ldi	r24, 0x10	; 16
 83a:	e8 e3       	ldi	r30, 0x38	; 56
 83c:	f3 e0       	ldi	r31, 0x03	; 3
 83e:	a8 e2       	ldi	r26, 0x28	; 40
 840:	b3 e0       	ldi	r27, 0x03	; 3
 842:	01 90       	ld	r0, Z+
 844:	0d 92       	st	X+, r0
 846:	8a 95       	dec	r24
 848:	e1 f7       	brne	.-8      	; 0x842 <_GLOBAL__sub_I_gpvariables+0x14c>


static rom bios = rom(&port,&addreg,0x14000);
 84a:	68 94       	set
 84c:	dd 24       	eor	r13, r13
 84e:	d6 f8       	bld	r13, 6
 850:	ee 24       	eor	r14, r14
 852:	e3 94       	inc	r14
 854:	00 e0       	ldi	r16, 0x00	; 0
 856:	10 e0       	ldi	r17, 0x00	; 0
 858:	20 e0       	ldi	r18, 0x00	; 0
 85a:	30 e0       	ldi	r19, 0x00	; 0
 85c:	45 e9       	ldi	r20, 0x95	; 149
 85e:	53 e0       	ldi	r21, 0x03	; 3
 860:	62 ea       	ldi	r22, 0xA2	; 162
 862:	73 e0       	ldi	r23, 0x03	; 3
 864:	84 ed       	ldi	r24, 0xD4	; 212
 866:	92 e0       	ldi	r25, 0x02	; 2
 868:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom settings = rom(&port,&addreg,0x018000);
 86c:	68 94       	set
 86e:	dd 24       	eor	r13, r13
 870:	d7 f8       	bld	r13, 7
 872:	20 e0       	ldi	r18, 0x00	; 0
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	45 e9       	ldi	r20, 0x95	; 149
 878:	53 e0       	ldi	r21, 0x03	; 3
 87a:	62 ea       	ldi	r22, 0xA2	; 162
 87c:	73 e0       	ldi	r23, 0x03	; 3
 87e:	80 ec       	ldi	r24, 0xC0	; 192
 880:	92 e0       	ldi	r25, 0x02	; 2
 882:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program0 = rom(&port,&addreg,0x1C0000);
 886:	d1 2c       	mov	r13, r1
 888:	0f 2e       	mov	r0, r31
 88a:	fc e1       	ldi	r31, 0x1C	; 28
 88c:	ef 2e       	mov	r14, r31
 88e:	f0 2d       	mov	r31, r0
 890:	20 e0       	ldi	r18, 0x00	; 0
 892:	30 e0       	ldi	r19, 0x00	; 0
 894:	45 e9       	ldi	r20, 0x95	; 149
 896:	53 e0       	ldi	r21, 0x03	; 3
 898:	62 ea       	ldi	r22, 0xA2	; 162
 89a:	73 e0       	ldi	r23, 0x03	; 3
 89c:	8c ea       	ldi	r24, 0xAC	; 172
 89e:	92 e0       	ldi	r25, 0x02	; 2
 8a0:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program1 = rom(&port,&addreg,0x020000);
 8a4:	68 94       	set
 8a6:	ee 24       	eor	r14, r14
 8a8:	e1 f8       	bld	r14, 1
 8aa:	20 e0       	ldi	r18, 0x00	; 0
 8ac:	30 e0       	ldi	r19, 0x00	; 0
 8ae:	45 e9       	ldi	r20, 0x95	; 149
 8b0:	53 e0       	ldi	r21, 0x03	; 3
 8b2:	62 ea       	ldi	r22, 0xA2	; 162
 8b4:	73 e0       	ldi	r23, 0x03	; 3
 8b6:	88 e9       	ldi	r24, 0x98	; 152
 8b8:	92 e0       	ldi	r25, 0x02	; 2
 8ba:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program2 = rom(&port,&addreg,0x024000);
 8be:	68 94       	set
 8c0:	dd 24       	eor	r13, r13
 8c2:	d6 f8       	bld	r13, 6
 8c4:	20 e0       	ldi	r18, 0x00	; 0
 8c6:	30 e0       	ldi	r19, 0x00	; 0
 8c8:	45 e9       	ldi	r20, 0x95	; 149
 8ca:	53 e0       	ldi	r21, 0x03	; 3
 8cc:	62 ea       	ldi	r22, 0xA2	; 162
 8ce:	73 e0       	ldi	r23, 0x03	; 3
 8d0:	84 e8       	ldi	r24, 0x84	; 132
 8d2:	92 e0       	ldi	r25, 0x02	; 2
 8d4:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program3 = rom(&port,&addreg,0x028000);
 8d8:	68 94       	set
 8da:	dd 24       	eor	r13, r13
 8dc:	d7 f8       	bld	r13, 7
 8de:	20 e0       	ldi	r18, 0x00	; 0
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	45 e9       	ldi	r20, 0x95	; 149
 8e4:	53 e0       	ldi	r21, 0x03	; 3
 8e6:	62 ea       	ldi	r22, 0xA2	; 162
 8e8:	73 e0       	ldi	r23, 0x03	; 3
 8ea:	80 e7       	ldi	r24, 0x70	; 112
 8ec:	92 e0       	ldi	r25, 0x02	; 2
 8ee:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_ZN3romC1EP14portcontrollerP8shiftregy>

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
 8f2:	0f 2e       	mov	r0, r31
 8f4:	f0 ec       	ldi	r31, 0xC0	; 192
 8f6:	9f 2e       	mov	r9, r31
 8f8:	f0 2d       	mov	r31, r0
 8fa:	68 94       	set
 8fc:	aa 24       	eor	r10, r10
 8fe:	a1 f8       	bld	r10, 1
 900:	d1 2c       	mov	r13, r1
 902:	e1 2c       	mov	r14, r1
 904:	02 e2       	ldi	r16, 0x22	; 34
 906:	28 e8       	ldi	r18, 0x88	; 136
 908:	33 e0       	ldi	r19, 0x03	; 3
 90a:	45 e9       	ldi	r20, 0x95	; 149
 90c:	53 e0       	ldi	r21, 0x03	; 3
 90e:	62 ea       	ldi	r22, 0xA2	; 162
 910:	73 e0       	ldi	r23, 0x03	; 3
 912:	8f e5       	ldi	r24, 0x5F	; 95
 914:	92 e0       	ldi	r25, 0x02	; 2
 916:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
 91a:	91 2c       	mov	r9, r1
 91c:	0f 2e       	mov	r0, r31
 91e:	f3 e0       	ldi	r31, 0x03	; 3
 920:	af 2e       	mov	r10, r31
 922:	f0 2d       	mov	r31, r0
 924:	28 e8       	ldi	r18, 0x88	; 136
 926:	33 e0       	ldi	r19, 0x03	; 3
 928:	45 e9       	ldi	r20, 0x95	; 149
 92a:	53 e0       	ldi	r21, 0x03	; 3
 92c:	62 ea       	ldi	r22, 0xA2	; 162
 92e:	73 e0       	ldi	r23, 0x03	; 3
 930:	8e e4       	ldi	r24, 0x4E	; 78
 932:	92 e0       	ldi	r25, 0x02	; 2
 934:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
 938:	68 94       	set
 93a:	99 24       	eor	r9, r9
 93c:	96 f8       	bld	r9, 6
 93e:	28 e8       	ldi	r18, 0x88	; 136
 940:	33 e0       	ldi	r19, 0x03	; 3
 942:	45 e9       	ldi	r20, 0x95	; 149
 944:	53 e0       	ldi	r21, 0x03	; 3
 946:	62 ea       	ldi	r22, 0xA2	; 162
 948:	73 e0       	ldi	r23, 0x03	; 3
 94a:	8d e3       	ldi	r24, 0x3D	; 61
 94c:	92 e0       	ldi	r25, 0x02	; 2
 94e:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
 952:	68 94       	set
 954:	99 24       	eor	r9, r9
 956:	97 f8       	bld	r9, 7
 958:	28 e8       	ldi	r18, 0x88	; 136
 95a:	33 e0       	ldi	r19, 0x03	; 3
 95c:	45 e9       	ldi	r20, 0x95	; 149
 95e:	53 e0       	ldi	r21, 0x03	; 3
 960:	62 ea       	ldi	r22, 0xA2	; 162
 962:	73 e0       	ldi	r23, 0x03	; 3
 964:	8c e2       	ldi	r24, 0x2C	; 44
 966:	92 e0       	ldi	r25, 0x02	; 2
 968:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);
 96c:	0f 2e       	mov	r0, r31
 96e:	f0 ec       	ldi	r31, 0xC0	; 192
 970:	9f 2e       	mov	r9, r31
 972:	f0 2d       	mov	r31, r0
 974:	28 e8       	ldi	r18, 0x88	; 136
 976:	33 e0       	ldi	r19, 0x03	; 3
 978:	45 e9       	ldi	r20, 0x95	; 149
 97a:	53 e0       	ldi	r21, 0x03	; 3
 97c:	62 ea       	ldi	r22, 0xA2	; 162
 97e:	73 e0       	ldi	r23, 0x03	; 3
 980:	8b e1       	ldi	r24, 0x1B	; 27
 982:	92 e0       	ldi	r25, 0x02	; 2
 984:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>


static interrupts irqhandler= interrupts();
 988:	89 e1       	ldi	r24, 0x19	; 25
 98a:	92 e0       	ldi	r25, 0x02	; 2
 98c:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN10interruptsC1Ev>
static interpreter interpret= interpreter();
 990:	82 e0       	ldi	r24, 0x02	; 2
 992:	91 e0       	ldi	r25, 0x01	; 1
 994:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN11interpreterC1Ev>

static lcd disp1=lcd();
 998:	80 e0       	ldi	r24, 0x00	; 0
 99a:	91 e0       	ldi	r25, 0x01	; 1
 99c:	0e 94 8e 00 	call	0x11c	; 0x11c <_ZN3lcdC1Ev>
				
			}
		}
		storememory(0x0000,0xff);
	}
 9a0:	63 96       	adiw	r28, 0x13	; 19
 9a2:	0f b6       	in	r0, 0x3f	; 63
 9a4:	f8 94       	cli
 9a6:	de bf       	out	0x3e, r29	; 62
 9a8:	0f be       	out	0x3f, r0	; 63
 9aa:	cd bf       	out	0x3d, r28	; 61
 9ac:	df 91       	pop	r29
 9ae:	cf 91       	pop	r28
 9b0:	1f 91       	pop	r17
 9b2:	0f 91       	pop	r16
 9b4:	ff 90       	pop	r15
 9b6:	ef 90       	pop	r14
 9b8:	df 90       	pop	r13
 9ba:	cf 90       	pop	r12
 9bc:	bf 90       	pop	r11
 9be:	af 90       	pop	r10
 9c0:	9f 90       	pop	r9
 9c2:	8f 90       	pop	r8
 9c4:	08 95       	ret

000009c6 <_GLOBAL__sub_D_gpvariables>:
 9c6:	cf 93       	push	r28
 9c8:	df 93       	push	r29


static interrupts irqhandler= interrupts();
static interpreter interpret= interpreter();

static lcd disp1=lcd();
 9ca:	80 e0       	ldi	r24, 0x00	; 0
 9cc:	91 e0       	ldi	r25, 0x01	; 1
 9ce:	0e 94 8f 00 	call	0x11e	; 0x11e <_ZN3lcdD1Ev>
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);


static interrupts irqhandler= interrupts();
static interpreter interpret= interpreter();
 9d2:	82 e0       	ldi	r24, 0x02	; 2
 9d4:	91 e0       	ldi	r25, 0x01	; 1
 9d6:	0e 94 8b 00 	call	0x116	; 0x116 <_ZN11interpreterD1Ev>
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);


static interrupts irqhandler= interrupts();
 9da:	89 e1       	ldi	r24, 0x19	; 25
 9dc:	92 e0       	ldi	r25, 0x02	; 2
 9de:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN10interruptsD1Ev>

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);
 9e2:	8b e1       	ldi	r24, 0x1B	; 27
 9e4:	92 e0       	ldi	r25, 0x02	; 2
 9e6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <_ZN6eepromD1Ev>
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
 9ea:	8c e2       	ldi	r24, 0x2C	; 44
 9ec:	92 e0       	ldi	r25, 0x02	; 2
 9ee:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <_ZN6eepromD1Ev>
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
 9f2:	8d e3       	ldi	r24, 0x3D	; 61
 9f4:	92 e0       	ldi	r25, 0x02	; 2
 9f6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <_ZN6eepromD1Ev>
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
 9fa:	8e e4       	ldi	r24, 0x4E	; 78
 9fc:	92 e0       	ldi	r25, 0x02	; 2
 9fe:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <_ZN6eepromD1Ev>
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
 a02:	8f e5       	ldi	r24, 0x5F	; 95
 a04:	92 e0       	ldi	r25, 0x02	; 2
 a06:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <_ZN6eepromD1Ev>
static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);
 a0a:	80 e7       	ldi	r24, 0x70	; 112
 a0c:	92 e0       	ldi	r25, 0x02	; 2
 a0e:	0e 94 06 02 	call	0x40c	; 0x40c <_ZN3romD1Ev>

static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
 a12:	84 e8       	ldi	r24, 0x84	; 132
 a14:	92 e0       	ldi	r25, 0x02	; 2
 a16:	0e 94 06 02 	call	0x40c	; 0x40c <_ZN3romD1Ev>


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
 a1a:	88 e9       	ldi	r24, 0x98	; 152
 a1c:	92 e0       	ldi	r25, 0x02	; 2
 a1e:	0e 94 06 02 	call	0x40c	; 0x40c <_ZN3romD1Ev>
static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
 a22:	8c ea       	ldi	r24, 0xAC	; 172
 a24:	92 e0       	ldi	r25, 0x02	; 2
 a26:	0e 94 06 02 	call	0x40c	; 0x40c <_ZN3romD1Ev>

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
 a2a:	80 ec       	ldi	r24, 0xC0	; 192
 a2c:	92 e0       	ldi	r25, 0x02	; 2
 a2e:	0e 94 06 02 	call	0x40c	; 0x40c <_ZN3romD1Ev>
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
 a32:	84 ed       	ldi	r24, 0xD4	; 212
 a34:	92 e0       	ldi	r25, 0x02	; 2
 a36:	0e 94 06 02 	call	0x40c	; 0x40c <_ZN3romD1Ev>
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};
 a3a:	c8 e3       	ldi	r28, 0x38	; 56
 a3c:	d3 e0       	ldi	r29, 0x03	; 3
 a3e:	60 97       	sbiw	r28, 0x10	; 16
 a40:	ce 01       	movw	r24, r28
 a42:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
 a46:	82 e0       	ldi	r24, 0x02	; 2
 a48:	c8 3e       	cpi	r28, 0xE8	; 232
 a4a:	d8 07       	cpc	r29, r24
 a4c:	c1 f7       	brne	.-16     	; 0xa3e <_GLOBAL__sub_D_gpvariables+0x78>
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram
 a4e:	88 e3       	ldi	r24, 0x38	; 56
 a50:	93 e0       	ldi	r25, 0x03	; 3
 a52:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
 a56:	88 e4       	ldi	r24, 0x48	; 72
 a58:	93 e0       	ldi	r25, 0x03	; 3
 a5a:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
 a5e:	88 e5       	ldi	r24, 0x58	; 88
 a60:	93 e0       	ldi	r25, 0x03	; 3
 a62:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
#include "cpu/interpreter/interpreter.h"
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
 a66:	88 e6       	ldi	r24, 0x68	; 104
 a68:	93 e0       	ldi	r25, 0x03	; 3
 a6a:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
#include "cpu/interrupts/interrupts.h"
#include "cpu/interpreter/interpreter.h"
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0u);	// os ram 
 a6e:	88 e7       	ldi	r24, 0x78	; 120
 a70:	93 e0       	ldi	r25, 0x03	; 3
 a72:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN3ramD1Ev>
#include "drivers/mem/eeprom.h"
#include "cpu/interrupts/interrupts.h"
#include "cpu/interpreter/interpreter.h"
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
 a76:	88 e8       	ldi	r24, 0x88	; 136
 a78:	93 e0       	ldi	r25, 0x03	; 3
 a7a:	0e 94 b2 01 	call	0x364	; 0x364 <_ZN8shiftregD1Ev>
#include "drivers/mem/rom.h"
#include "drivers/mem/eeprom.h"
#include "cpu/interrupts/interrupts.h"
#include "cpu/interpreter/interpreter.h"
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
 a7e:	85 e9       	ldi	r24, 0x95	; 149
 a80:	93 e0       	ldi	r25, 0x03	; 3
 a82:	0e 94 b2 01 	call	0x364	; 0x364 <_ZN8shiftregD1Ev>
#include "drivers/mem/volatile/Vram.h"
#include "drivers/mem/rom.h"
#include "drivers/mem/eeprom.h"
#include "cpu/interrupts/interrupts.h"
#include "cpu/interpreter/interpreter.h"
static portcontroller port=portcontroller();
 a86:	82 ea       	ldi	r24, 0xA2	; 162
 a88:	93 e0       	ldi	r25, 0x03	; 3
 a8a:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_ZN14portcontrollerD1Ev>
				
			}
		}
		storememory(0x0000,0xff);
	}
 a8e:	df 91       	pop	r29
 a90:	cf 91       	pop	r28
 a92:	08 95       	ret

00000a94 <__ashrdi3>:
 a94:	97 fb       	bst	r25, 7
 a96:	10 f8       	bld	r1, 0

00000a98 <__lshrdi3>:
 a98:	16 94       	lsr	r1
 a9a:	00 08       	sbc	r0, r0
 a9c:	0f 93       	push	r16
 a9e:	08 30       	cpi	r16, 0x08	; 8
 aa0:	98 f0       	brcs	.+38     	; 0xac8 <__lshrdi3+0x30>
 aa2:	08 50       	subi	r16, 0x08	; 8
 aa4:	23 2f       	mov	r18, r19
 aa6:	34 2f       	mov	r19, r20
 aa8:	45 2f       	mov	r20, r21
 aaa:	56 2f       	mov	r21, r22
 aac:	67 2f       	mov	r22, r23
 aae:	78 2f       	mov	r23, r24
 ab0:	89 2f       	mov	r24, r25
 ab2:	90 2d       	mov	r25, r0
 ab4:	f4 cf       	rjmp	.-24     	; 0xa9e <__lshrdi3+0x6>
 ab6:	05 94       	asr	r0
 ab8:	97 95       	ror	r25
 aba:	87 95       	ror	r24
 abc:	77 95       	ror	r23
 abe:	67 95       	ror	r22
 ac0:	57 95       	ror	r21
 ac2:	47 95       	ror	r20
 ac4:	37 95       	ror	r19
 ac6:	27 95       	ror	r18
 ac8:	0a 95       	dec	r16
 aca:	aa f7       	brpl	.-22     	; 0xab6 <__lshrdi3+0x1e>
 acc:	0f 91       	pop	r16
 ace:	08 95       	ret

00000ad0 <__cmpdi2_s8>:
 ad0:	00 24       	eor	r0, r0
 ad2:	a7 fd       	sbrc	r26, 7
 ad4:	00 94       	com	r0
 ad6:	2a 17       	cp	r18, r26
 ad8:	30 05       	cpc	r19, r0
 ada:	40 05       	cpc	r20, r0
 adc:	50 05       	cpc	r21, r0
 ade:	60 05       	cpc	r22, r0
 ae0:	70 05       	cpc	r23, r0
 ae2:	80 05       	cpc	r24, r0
 ae4:	90 05       	cpc	r25, r0
 ae6:	08 95       	ret

00000ae8 <__tablejump2__>:
 ae8:	ee 0f       	add	r30, r30
 aea:	ff 1f       	adc	r31, r31
 aec:	05 90       	lpm	r0, Z+
 aee:	f4 91       	lpm	r31, Z
 af0:	e0 2d       	mov	r30, r0
 af2:	09 94       	ijmp

00000af4 <__do_global_dtors>:
 af4:	10 e0       	ldi	r17, 0x00	; 0
 af6:	cf e3       	ldi	r28, 0x3F	; 63
 af8:	d0 e0       	ldi	r29, 0x00	; 0
 afa:	04 c0       	rjmp	.+8      	; 0xb04 <__do_global_dtors+0x10>
 afc:	fe 01       	movw	r30, r28
 afe:	0e 94 74 05 	call	0xae8	; 0xae8 <__tablejump2__>
 b02:	21 96       	adiw	r28, 0x01	; 1
 b04:	c0 34       	cpi	r28, 0x40	; 64
 b06:	d1 07       	cpc	r29, r17
 b08:	c9 f7       	brne	.-14     	; 0xafc <__do_global_dtors+0x8>
 b0a:	f8 94       	cli

00000b0c <__stop_program>:
 b0c:	ff cf       	rjmp	.-2      	; 0xb0c <__stop_program>
