
os.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000b9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b2a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a4  00800100  00800100  00000b9e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  00000c10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008162  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001c38  00000000  00000000  000090da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ab9  00000000  00000000  0000ad12  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008a8  00000000  00000000  0000c7cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000017f3  00000000  00000000  0000d074  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001bbd  00000000  00000000  0000e867  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c8  00000000  00000000  00010424  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__dtors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000007c <__ctors_start>:
  7c:	89 03       	fmulsu	r16, r17

0000007e <__ctors_end>:
  7e:	f1 04       	cpc	r15, r1

00000080 <__dtors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d0 e1       	ldi	r29, 0x10	; 16
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_clear_bss>:
  8c:	23 e0       	ldi	r18, 0x03	; 3
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a4 3a       	cpi	r26, 0xA4	; 164
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	cf e3       	ldi	r28, 0x3F	; 63
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 82 05 	call	0xb04	; 0xb04 <__tablejump2__>
  ac:	ce 33       	cpi	r28, 0x3E	; 62
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 67 03 	call	0x6ce	; 0x6ce <main>
  b6:	0c 94 88 05 	jmp	0xb10	; 0xb10 <__do_global_dtors>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_ZN11interpreterC1Ev>:
	asm volatile("nop");
}


void interpreter::syscall()
{
  be:	fc 01       	movw	r30, r24
  c0:	16 82       	std	Z+6, r1	; 0x06
  c2:	17 82       	std	Z+7, r1	; 0x07
  c4:	10 86       	std	Z+8, r1	; 0x08
  c6:	dc 01       	movw	r26, r24
  c8:	a8 5f       	subi	r26, 0xF8	; 248
  ca:	be 4f       	sbci	r27, 0xFE	; 254
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8c 93       	st	X, r24
  d0:	1f 96       	adiw	r26, 0x0f	; 15
  d2:	1c 92       	st	X, r1
  d4:	14 97       	sbiw	r26, 0x04	; 4
  d6:	cf 01       	movw	r24, r30
  d8:	8a 5f       	subi	r24, 0xFA	; 250
  da:	9e 4f       	sbci	r25, 0xFE	; 254
  dc:	11 96       	adiw	r26, 0x01	; 1
  de:	9c 93       	st	X, r25
  e0:	8e 93       	st	-X, r24
  e2:	12 96       	adiw	r26, 0x02	; 2
  e4:	01 96       	adiw	r24, 0x01	; 1
  e6:	11 96       	adiw	r26, 0x01	; 1
  e8:	9c 93       	st	X, r25
  ea:	8e 93       	st	-X, r24
  ec:	16 97       	sbiw	r26, 0x06	; 6
  ee:	03 97       	sbiw	r24, 0x03	; 3
  f0:	11 96       	adiw	r26, 0x01	; 1
  f2:	9c 93       	st	X, r25
  f4:	8e 93       	st	-X, r24
  f6:	12 96       	adiw	r26, 0x02	; 2
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	11 96       	adiw	r26, 0x01	; 1
  fc:	9c 93       	st	X, r25
  fe:	8e 93       	st	-X, r24
 100:	16 97       	sbiw	r26, 0x06	; 6
 102:	03 97       	sbiw	r24, 0x03	; 3
 104:	11 96       	adiw	r26, 0x01	; 1
 106:	9c 93       	st	X, r25
 108:	8e 93       	st	-X, r24
 10a:	12 96       	adiw	r26, 0x02	; 2
 10c:	ed 5f       	subi	r30, 0xFD	; 253
 10e:	fe 4f       	sbci	r31, 0xFE	; 254
 110:	ed 93       	st	X+, r30
 112:	fc 93       	st	X, r31
 114:	08 95       	ret

00000116 <_ZN11interpreter3incEc>:
 116:	fc 01       	movw	r30, r24
 118:	e6 0f       	add	r30, r22
 11a:	f1 1d       	adc	r31, r1
 11c:	91 85       	ldd	r25, Z+9	; 0x09
 11e:	9f 5f       	subi	r25, 0xFF	; 255
 120:	91 87       	std	Z+9, r25	; 0x09
 122:	08 95       	ret

00000124 <_ZN11interpreter3nopEv>:
 124:	00 00       	nop
 126:	08 95       	ret

00000128 <_ZN11interpreterD1Ev>:

}

// default destructor
interpreter::~interpreter()
 128:	08 95       	ret

0000012a <_ZN10interruptsC1Ev>:
interrupts::interrupts()
{
} //interrupts

void interrupts::handleinterrupt()
{
 12a:	08 95       	ret

0000012c <_ZN10interruptsD1Ev>:
	{
	}
}

// default destructor
interrupts::~interrupts()
 12c:	08 95       	ret

0000012e <_ZN3lcdC1Ev>:
lcd::lcd()
{
	//instructions ins = instructions();
} //lcd

 lcd::lcd(portcontroller* port)
 12e:	08 95       	ret

00000130 <_ZN3lcdD1Ev>:
 {
	
 }

// default destructor
lcd::~lcd()
 130:	08 95       	ret

00000132 <_ZN14portcontrollerC1Ev>:
		{
			PORTD|=0b10000000;
		}
		else
		{
			PORTD&=0b01111111;
 132:	08 95       	ret

00000134 <_ZN14portcontroller10writeportcEc>:
 134:	68 b9       	out	0x08, r22	; 8
 136:	08 95       	ret

00000138 <_ZN14portcontroller9writeddraEc>:
 138:	61 b9       	out	0x01, r22	; 1
 13a:	08 95       	ret

0000013c <_ZN14portcontroller9writeddrcEc>:
 13c:	67 b9       	out	0x07, r22	; 7
 13e:	08 95       	ret

00000140 <_ZN14portcontroller13digitalwriteaEhb>:
 140:	61 30       	cpi	r22, 0x01	; 1
 142:	31 f4       	brne	.+12     	; 0x150 <_ZN14portcontroller13digitalwriteaEhb+0x10>
 144:	44 23       	and	r20, r20
 146:	11 f0       	breq	.+4      	; 0x14c <_ZN14portcontroller13digitalwriteaEhb+0xc>
 148:	10 9a       	sbi	0x02, 0	; 2
 14a:	08 95       	ret
 14c:	10 98       	cbi	0x02, 0	; 2
 14e:	08 95       	ret
 150:	62 30       	cpi	r22, 0x02	; 2
 152:	31 f4       	brne	.+12     	; 0x160 <_ZN14portcontroller13digitalwriteaEhb+0x20>
 154:	44 23       	and	r20, r20
 156:	11 f0       	breq	.+4      	; 0x15c <_ZN14portcontroller13digitalwriteaEhb+0x1c>
 158:	11 9a       	sbi	0x02, 1	; 2
 15a:	08 95       	ret
 15c:	11 98       	cbi	0x02, 1	; 2
 15e:	08 95       	ret
 160:	63 30       	cpi	r22, 0x03	; 3
 162:	31 f4       	brne	.+12     	; 0x170 <_ZN14portcontroller13digitalwriteaEhb+0x30>
 164:	44 23       	and	r20, r20
 166:	11 f0       	breq	.+4      	; 0x16c <_ZN14portcontroller13digitalwriteaEhb+0x2c>
 168:	12 9a       	sbi	0x02, 2	; 2
 16a:	08 95       	ret
 16c:	12 98       	cbi	0x02, 2	; 2
 16e:	08 95       	ret
 170:	64 30       	cpi	r22, 0x04	; 4
 172:	31 f4       	brne	.+12     	; 0x180 <_ZN14portcontroller13digitalwriteaEhb+0x40>
 174:	44 23       	and	r20, r20
 176:	11 f0       	breq	.+4      	; 0x17c <_ZN14portcontroller13digitalwriteaEhb+0x3c>
 178:	13 9a       	sbi	0x02, 3	; 2
 17a:	08 95       	ret
 17c:	13 98       	cbi	0x02, 3	; 2
 17e:	08 95       	ret
 180:	65 30       	cpi	r22, 0x05	; 5
 182:	31 f4       	brne	.+12     	; 0x190 <_ZN14portcontroller13digitalwriteaEhb+0x50>
 184:	44 23       	and	r20, r20
 186:	11 f0       	breq	.+4      	; 0x18c <_ZN14portcontroller13digitalwriteaEhb+0x4c>
 188:	14 9a       	sbi	0x02, 4	; 2
 18a:	08 95       	ret
 18c:	14 98       	cbi	0x02, 4	; 2
 18e:	08 95       	ret
 190:	66 30       	cpi	r22, 0x06	; 6
 192:	31 f4       	brne	.+12     	; 0x1a0 <_ZN14portcontroller13digitalwriteaEhb+0x60>
 194:	44 23       	and	r20, r20
 196:	11 f0       	breq	.+4      	; 0x19c <_ZN14portcontroller13digitalwriteaEhb+0x5c>
 198:	15 9a       	sbi	0x02, 5	; 2
 19a:	08 95       	ret
 19c:	15 98       	cbi	0x02, 5	; 2
 19e:	08 95       	ret
 1a0:	67 30       	cpi	r22, 0x07	; 7
 1a2:	31 f4       	brne	.+12     	; 0x1b0 <_ZN14portcontroller13digitalwriteaEhb+0x70>
 1a4:	44 23       	and	r20, r20
 1a6:	11 f0       	breq	.+4      	; 0x1ac <_ZN14portcontroller13digitalwriteaEhb+0x6c>
 1a8:	16 9a       	sbi	0x02, 6	; 2
 1aa:	08 95       	ret
 1ac:	16 98       	cbi	0x02, 6	; 2
 1ae:	08 95       	ret
 1b0:	68 30       	cpi	r22, 0x08	; 8
 1b2:	29 f4       	brne	.+10     	; 0x1be <_ZN14portcontroller13digitalwriteaEhb+0x7e>
 1b4:	44 23       	and	r20, r20
 1b6:	11 f0       	breq	.+4      	; 0x1bc <_ZN14portcontroller13digitalwriteaEhb+0x7c>
 1b8:	17 9a       	sbi	0x02, 7	; 2
 1ba:	08 95       	ret
 1bc:	17 98       	cbi	0x02, 7	; 2
 1be:	08 95       	ret

000001c0 <_ZN14portcontroller12digitalwriteEhb>:
 1c0:	9c 01       	movw	r18, r24
 1c2:	9f ef       	ldi	r25, 0xFF	; 255
 1c4:	96 0f       	add	r25, r22
 1c6:	98 30       	cpi	r25, 0x08	; 8
 1c8:	28 f4       	brcc	.+10     	; 0x1d4 <_ZN14portcontroller12digitalwriteEhb+0x14>
 1ca:	69 2f       	mov	r22, r25
 1cc:	c9 01       	movw	r24, r18
 1ce:	0e 94 a0 00 	call	0x140	; 0x140 <_ZN14portcontroller13digitalwriteaEhb>
 1d2:	08 95       	ret
 1d4:	82 ef       	ldi	r24, 0xF2	; 242
 1d6:	86 0f       	add	r24, r22
 1d8:	88 30       	cpi	r24, 0x08	; 8
 1da:	28 f4       	brcc	.+10     	; 0x1e6 <_ZN14portcontroller12digitalwriteEhb+0x26>
 1dc:	6d 50       	subi	r22, 0x0D	; 13
 1de:	c9 01       	movw	r24, r18
 1e0:	0e 94 a0 00 	call	0x140	; 0x140 <_ZN14portcontroller13digitalwriteaEhb>
 1e4:	08 95       	ret
 1e6:	8a ee       	ldi	r24, 0xEA	; 234
 1e8:	86 0f       	add	r24, r22
 1ea:	88 30       	cpi	r24, 0x08	; 8
 1ec:	28 f4       	brcc	.+10     	; 0x1f8 <_ZN14portcontroller12digitalwriteEhb+0x38>
 1ee:	65 51       	subi	r22, 0x15	; 21
 1f0:	c9 01       	movw	r24, r18
 1f2:	0e 94 a0 00 	call	0x140	; 0x140 <_ZN14portcontroller13digitalwriteaEhb>
 1f6:	08 95       	ret
 1f8:	8f ed       	ldi	r24, 0xDF	; 223
 1fa:	86 0f       	add	r24, r22
 1fc:	88 30       	cpi	r24, 0x08	; 8
 1fe:	20 f4       	brcc	.+8      	; 0x208 <_ZN14portcontroller12digitalwriteEhb+0x48>
 200:	60 52       	subi	r22, 0x20	; 32
 202:	c9 01       	movw	r24, r18
 204:	0e 94 a0 00 	call	0x140	; 0x140 <_ZN14portcontroller13digitalwriteaEhb>
 208:	08 95       	ret

0000020a <_ZN14portcontrollerD1Ev>:
	}

}

// default destructor
portcontroller::~portcontroller()
 20a:	08 95       	ret

0000020c <_ZN8shiftregC1EhhhP14portcontroller>:
	}
	port->digitalwrite(latchclkpin,true);

	port->digitalwrite(latchclkpin,false);

}
 20c:	0f 93       	push	r16
 20e:	1f 93       	push	r17
 210:	fc 01       	movw	r30, r24
 212:	60 83       	st	Z, r22
 214:	41 83       	std	Z+1, r20	; 0x01
 216:	22 83       	std	Z+2, r18	; 0x02
 218:	14 87       	std	Z+12, r17	; 0x0c
 21a:	03 87       	std	Z+11, r16	; 0x0b
 21c:	13 82       	std	Z+3, r1	; 0x03
 21e:	14 82       	std	Z+4, r1	; 0x04
 220:	15 82       	std	Z+5, r1	; 0x05
 222:	16 82       	std	Z+6, r1	; 0x06
 224:	17 82       	std	Z+7, r1	; 0x07
 226:	10 86       	std	Z+8, r1	; 0x08
 228:	11 86       	std	Z+9, r1	; 0x09
 22a:	12 86       	std	Z+10, r1	; 0x0a
 22c:	1f 91       	pop	r17
 22e:	0f 91       	pop	r16
 230:	08 95       	ret

00000232 <_ZN8shiftreg9shiftout8Eh>:
 232:	ef 92       	push	r14
 234:	ff 92       	push	r15
 236:	0f 93       	push	r16
 238:	1f 93       	push	r17
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	ec 01       	movw	r28, r24
 240:	07 e0       	ldi	r16, 0x07	; 7
 242:	10 e0       	ldi	r17, 0x00	; 0
 244:	e6 2e       	mov	r14, r22
 246:	f1 2c       	mov	r15, r1
 248:	c7 01       	movw	r24, r14
 24a:	00 2e       	mov	r0, r16
 24c:	02 c0       	rjmp	.+4      	; 0x252 <_ZN8shiftreg9shiftout8Eh+0x20>
 24e:	95 95       	asr	r25
 250:	87 95       	ror	r24
 252:	0a 94       	dec	r0
 254:	e2 f7       	brpl	.-8      	; 0x24e <_ZN8shiftreg9shiftout8Eh+0x1c>
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	39 f4       	brne	.+14     	; 0x268 <_ZN8shiftreg9shiftout8Eh+0x36>
 25a:	41 e0       	ldi	r20, 0x01	; 1
 25c:	68 81       	ld	r22, Y
 25e:	8b 85       	ldd	r24, Y+11	; 0x0b
 260:	9c 85       	ldd	r25, Y+12	; 0x0c
 262:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 266:	06 c0       	rjmp	.+12     	; 0x274 <_ZN8shiftreg9shiftout8Eh+0x42>
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	68 81       	ld	r22, Y
 26c:	8b 85       	ldd	r24, Y+11	; 0x0b
 26e:	9c 85       	ldd	r25, Y+12	; 0x0c
 270:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 274:	41 e0       	ldi	r20, 0x01	; 1
 276:	69 81       	ldd	r22, Y+1	; 0x01
 278:	8b 85       	ldd	r24, Y+11	; 0x0b
 27a:	9c 85       	ldd	r25, Y+12	; 0x0c
 27c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 280:	40 e0       	ldi	r20, 0x00	; 0
 282:	69 81       	ldd	r22, Y+1	; 0x01
 284:	8b 85       	ldd	r24, Y+11	; 0x0b
 286:	9c 85       	ldd	r25, Y+12	; 0x0c
 288:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 28c:	01 50       	subi	r16, 0x01	; 1
 28e:	11 09       	sbc	r17, r1
 290:	d8 f6       	brcc	.-74     	; 0x248 <_ZN8shiftreg9shiftout8Eh+0x16>
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	6a 81       	ldd	r22, Y+2	; 0x02
 296:	8b 85       	ldd	r24, Y+11	; 0x0b
 298:	9c 85       	ldd	r25, Y+12	; 0x0c
 29a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	6a 81       	ldd	r22, Y+2	; 0x02
 2a2:	8b 85       	ldd	r24, Y+11	; 0x0b
 2a4:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	1f 91       	pop	r17
 2b0:	0f 91       	pop	r16
 2b2:	ff 90       	pop	r15
 2b4:	ef 90       	pop	r14
 2b6:	08 95       	ret

000002b8 <_ZN8shiftreg10shiftout64Ey>:
void shiftreg::shiftout64(uint64_t data32)
{
 2b8:	7f 92       	push	r7
 2ba:	8f 92       	push	r8
 2bc:	9f 92       	push	r9
 2be:	af 92       	push	r10
 2c0:	bf 92       	push	r11
 2c2:	cf 92       	push	r12
 2c4:	df 92       	push	r13
 2c6:	ef 92       	push	r14
 2c8:	ff 92       	push	r15
 2ca:	0f 93       	push	r16
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	ec 01       	movw	r28, r24
 2d4:	70 2e       	mov	r7, r16
 2d6:	82 2e       	mov	r8, r18
 2d8:	93 2e       	mov	r9, r19
 2da:	a4 2e       	mov	r10, r20
 2dc:	b5 2e       	mov	r11, r21
 2de:	c6 2e       	mov	r12, r22
 2e0:	d7 2e       	mov	r13, r23
 2e2:	68 94       	set
 2e4:	ee 24       	eor	r14, r14
 2e6:	e6 f8       	bld	r14, 6
 2e8:	f1 2c       	mov	r15, r1
	
	for (char i =  0; i<64;i++)
	{
		if ((data32>>(64-i))==1)
 2ea:	27 2d       	mov	r18, r7
 2ec:	31 2f       	mov	r19, r17
 2ee:	48 2d       	mov	r20, r8
 2f0:	59 2d       	mov	r21, r9
 2f2:	6a 2d       	mov	r22, r10
 2f4:	7b 2d       	mov	r23, r11
 2f6:	8c 2d       	mov	r24, r12
 2f8:	9d 2d       	mov	r25, r13
 2fa:	0e 2d       	mov	r16, r14
 2fc:	0e 94 5a 05 	call	0xab4	; 0xab4 <__lshrdi3>
 300:	a1 e0       	ldi	r26, 0x01	; 1
 302:	0e 94 76 05 	call	0xaec	; 0xaec <__cmpdi2_s8>
 306:	39 f4       	brne	.+14     	; 0x316 <_ZN8shiftreg10shiftout64Ey+0x5e>
		{
			
			port->digitalwrite(datapin,true);
 308:	41 e0       	ldi	r20, 0x01	; 1
 30a:	68 81       	ld	r22, Y
 30c:	8b 85       	ldd	r24, Y+11	; 0x0b
 30e:	9c 85       	ldd	r25, Y+12	; 0x0c
 310:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 314:	06 c0       	rjmp	.+12     	; 0x322 <_ZN8shiftreg10shiftout64Ey+0x6a>
			
		}
		else
		{
			port->digitalwrite(datapin,false);
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	68 81       	ld	r22, Y
 31a:	8b 85       	ldd	r24, Y+11	; 0x0b
 31c:	9c 85       	ldd	r25, Y+12	; 0x0c
 31e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
		}
		port->digitalwrite(clockpin,true);
 322:	41 e0       	ldi	r20, 0x01	; 1
 324:	69 81       	ldd	r22, Y+1	; 0x01
 326:	8b 85       	ldd	r24, Y+11	; 0x0b
 328:	9c 85       	ldd	r25, Y+12	; 0x0c
 32a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
		port->digitalwrite(clockpin,false);
 32e:	40 e0       	ldi	r20, 0x00	; 0
 330:	69 81       	ldd	r22, Y+1	; 0x01
 332:	8b 85       	ldd	r24, Y+11	; 0x0b
 334:	9c 85       	ldd	r25, Y+12	; 0x0c
 336:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	e8 1a       	sub	r14, r24
 33e:	f1 08       	sbc	r15, r1

}
void shiftreg::shiftout64(uint64_t data32)
{
	
	for (char i =  0; i<64;i++)
 340:	a1 f6       	brne	.-88     	; 0x2ea <_ZN8shiftreg10shiftout64Ey+0x32>
		}
		port->digitalwrite(clockpin,true);
		port->digitalwrite(clockpin,false);
		
	}
	port->digitalwrite(latchclkpin,true);
 342:	41 e0       	ldi	r20, 0x01	; 1
 344:	6a 81       	ldd	r22, Y+2	; 0x02
 346:	8b 85       	ldd	r24, Y+11	; 0x0b
 348:	9c 85       	ldd	r25, Y+12	; 0x0c
 34a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>

	port->digitalwrite(latchclkpin,false);
 34e:	40 e0       	ldi	r20, 0x00	; 0
 350:	6a 81       	ldd	r22, Y+2	; 0x02
 352:	8b 85       	ldd	r24, Y+11	; 0x0b
 354:	9c 85       	ldd	r25, Y+12	; 0x0c
 356:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>

}
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	1f 91       	pop	r17
 360:	0f 91       	pop	r16
 362:	ff 90       	pop	r15
 364:	ef 90       	pop	r14
 366:	df 90       	pop	r13
 368:	cf 90       	pop	r12
 36a:	bf 90       	pop	r11
 36c:	af 90       	pop	r10
 36e:	9f 90       	pop	r9
 370:	8f 90       	pop	r8
 372:	7f 90       	pop	r7
 374:	08 95       	ret

00000376 <_ZN8shiftregD1Ev>:
// default destructor
shiftreg::~shiftreg()
 376:	08 95       	ret

00000378 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>:
// default constructor
eeprom::eeprom()
{
} //eeprom

 eeprom::eeprom(portcontroller* portptr,shiftreg* addrptr,shiftreg* dataregister,uint8_t wepin,uint64_t address2)
 378:	8f 92       	push	r8
 37a:	9f 92       	push	r9
 37c:	af 92       	push	r10
 37e:	bf 92       	push	r11
 380:	cf 92       	push	r12
 382:	df 92       	push	r13
 384:	ef 92       	push	r14
 386:	ff 92       	push	r15
 388:	0f 93       	push	r16
 38a:	cf 93       	push	r28
 38c:	df 93       	push	r29
 38e:	cd b7       	in	r28, 0x3d	; 61
 390:	de b7       	in	r29, 0x3e	; 62
 392:	fc 01       	movw	r30, r24
 394:	cb 01       	movw	r24, r22
 396:	60 2f       	mov	r22, r16
 {
	 	this->portptr=portptr;
 398:	94 83       	std	Z+4, r25	; 0x04
 39a:	83 83       	std	Z+3, r24	; 0x03
	 	this->addrptr=addrptr;
 39c:	56 83       	std	Z+6, r21	; 0x06
 39e:	45 83       	std	Z+5, r20	; 0x05
		this->dataptr=dataregister;
 3a0:	30 87       	std	Z+8, r19	; 0x08
 3a2:	27 83       	std	Z+7, r18	; 0x07
	 	this->wepin=wepin;
 3a4:	02 83       	std	Z+2, r16	; 0x02
		this->address= address2;
 3a6:	81 86       	std	Z+9, r8	; 0x09
 3a8:	92 86       	std	Z+10, r9	; 0x0a
 3aa:	a3 86       	std	Z+11, r10	; 0x0b
 3ac:	b4 86       	std	Z+12, r11	; 0x0c
 3ae:	c5 86       	std	Z+13, r12	; 0x0d
 3b0:	d6 86       	std	Z+14, r13	; 0x0e
 3b2:	e7 86       	std	Z+15, r14	; 0x0f
 3b4:	f0 8a       	std	Z+16, r15	; 0x10
		this->offset = 0;
 3b6:	11 82       	std	Z+1, r1	; 0x01
 3b8:	10 82       	st	Z, r1
	 	portptr->digitalwrite(wepin,true);
 3ba:	41 e0       	ldi	r20, 0x01	; 1
 3bc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>

 }
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	0f 91       	pop	r16
 3c6:	ff 90       	pop	r15
 3c8:	ef 90       	pop	r14
 3ca:	df 90       	pop	r13
 3cc:	cf 90       	pop	r12
 3ce:	bf 90       	pop	r11
 3d0:	af 90       	pop	r10
 3d2:	9f 90       	pop	r9
 3d4:	8f 90       	pop	r8
 3d6:	08 95       	ret

000003d8 <_ZN6eepromD1Ev>:

// default destructor
eeprom::~eeprom()
 3d8:	08 95       	ret

000003da <_ZN3romC1EP14portcontrollerP8shiftregy>:
}

uint16_t rom::getaddr()
{
	return address;
}
 3da:	cf 92       	push	r12
 3dc:	df 92       	push	r13
 3de:	ef 92       	push	r14
 3e0:	ff 92       	push	r15
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
 3e6:	fc 01       	movw	r30, r24
 3e8:	71 8b       	std	Z+17, r23	; 0x11
 3ea:	60 8b       	std	Z+16, r22	; 0x10
 3ec:	53 8b       	std	Z+19, r21	; 0x13
 3ee:	42 8b       	std	Z+18, r20	; 0x12
 3f0:	c0 86       	std	Z+8, r12	; 0x08
 3f2:	d1 86       	std	Z+9, r13	; 0x09
 3f4:	e2 86       	std	Z+10, r14	; 0x0a
 3f6:	f3 86       	std	Z+11, r15	; 0x0b
 3f8:	04 87       	std	Z+12, r16	; 0x0c
 3fa:	15 87       	std	Z+13, r17	; 0x0d
 3fc:	26 87       	std	Z+14, r18	; 0x0e
 3fe:	37 87       	std	Z+15, r19	; 0x0f
 400:	10 82       	st	Z, r1
 402:	11 82       	std	Z+1, r1	; 0x01
 404:	12 82       	std	Z+2, r1	; 0x02
 406:	13 82       	std	Z+3, r1	; 0x03
 408:	14 82       	std	Z+4, r1	; 0x04
 40a:	15 82       	std	Z+5, r1	; 0x05
 40c:	16 82       	std	Z+6, r1	; 0x06
 40e:	17 82       	std	Z+7, r1	; 0x07
 410:	1f 91       	pop	r17
 412:	0f 91       	pop	r16
 414:	ff 90       	pop	r15
 416:	ef 90       	pop	r14
 418:	df 90       	pop	r13
 41a:	cf 90       	pop	r12
 41c:	08 95       	ret

0000041e <_ZN3romD1Ev>:

// default destructor
rom::~rom()
 41e:	08 95       	ret

00000420 <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>:
		dataptr->shiftout8(data);
	}
	portptr->digitalwrite(wepin,false);
	_delay_ms(1);
	portptr->digitalwrite(wepin,true);
}
 420:	8f 92       	push	r8
 422:	9f 92       	push	r9
 424:	af 92       	push	r10
 426:	bf 92       	push	r11
 428:	cf 92       	push	r12
 42a:	df 92       	push	r13
 42c:	ef 92       	push	r14
 42e:	ff 92       	push	r15
 430:	0f 93       	push	r16
 432:	cf 93       	push	r28
 434:	df 93       	push	r29
 436:	cd b7       	in	r28, 0x3d	; 61
 438:	de b7       	in	r29, 0x3e	; 62
 43a:	fc 01       	movw	r30, r24
 43c:	cb 01       	movw	r24, r22
 43e:	60 2f       	mov	r22, r16
 440:	93 83       	std	Z+3, r25	; 0x03
 442:	82 83       	std	Z+2, r24	; 0x02
 444:	55 83       	std	Z+5, r21	; 0x05
 446:	44 83       	std	Z+4, r20	; 0x04
 448:	37 83       	std	Z+7, r19	; 0x07
 44a:	26 83       	std	Z+6, r18	; 0x06
 44c:	01 83       	std	Z+1, r16	; 0x01
 44e:	80 86       	std	Z+8, r8	; 0x08
 450:	91 86       	std	Z+9, r9	; 0x09
 452:	a2 86       	std	Z+10, r10	; 0x0a
 454:	b3 86       	std	Z+11, r11	; 0x0b
 456:	c4 86       	std	Z+12, r12	; 0x0c
 458:	d5 86       	std	Z+13, r13	; 0x0d
 45a:	e6 86       	std	Z+14, r14	; 0x0e
 45c:	f7 86       	std	Z+15, r15	; 0x0f
 45e:	10 82       	st	Z, r1
 460:	41 e0       	ldi	r20, 0x01	; 1
 462:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
 466:	df 91       	pop	r29
 468:	cf 91       	pop	r28
 46a:	0f 91       	pop	r16
 46c:	ff 90       	pop	r15
 46e:	ef 90       	pop	r14
 470:	df 90       	pop	r13
 472:	cf 90       	pop	r12
 474:	bf 90       	pop	r11
 476:	af 90       	pop	r10
 478:	9f 90       	pop	r9
 47a:	8f 90       	pop	r8
 47c:	08 95       	ret

0000047e <_ZN3ram5writeEyc>:
void ram::write(uint64_t address,char data)
{
 47e:	ef 92       	push	r14
 480:	0f 93       	push	r16
 482:	1f 93       	push	r17
 484:	cf 93       	push	r28
 486:	df 93       	push	r29
 488:	ec 01       	movw	r28, r24
	addrptr->shiftout64(address);
 48a:	8c 81       	ldd	r24, Y+4	; 0x04
 48c:	9d 81       	ldd	r25, Y+5	; 0x05
 48e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_ZN8shiftreg10shiftout64Ey>
	if(dataptr == NULL)
 492:	8e 81       	ldd	r24, Y+6	; 0x06
 494:	9f 81       	ldd	r25, Y+7	; 0x07
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	31 f4       	brne	.+12     	; 0x4a6 <_ZN3ram5writeEyc+0x28>
	{
		portptr->writeportc(data);
 49a:	6e 2d       	mov	r22, r14
 49c:	8a 81       	ldd	r24, Y+2	; 0x02
 49e:	9b 81       	ldd	r25, Y+3	; 0x03
 4a0:	0e 94 9a 00 	call	0x134	; 0x134 <_ZN14portcontroller10writeportcEc>
 4a4:	03 c0       	rjmp	.+6      	; 0x4ac <_ZN3ram5writeEyc+0x2e>
	}
	else
	{
		dataptr->shiftout8(data);
 4a6:	6e 2d       	mov	r22, r14
 4a8:	0e 94 19 01 	call	0x232	; 0x232 <_ZN8shiftreg9shiftout8Eh>
	}
	portptr->digitalwrite(wepin,false);
 4ac:	40 e0       	ldi	r20, 0x00	; 0
 4ae:	69 81       	ldd	r22, Y+1	; 0x01
 4b0:	8a 81       	ldd	r24, Y+2	; 0x02
 4b2:	9b 81       	ldd	r25, Y+3	; 0x03
 4b4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4b8:	89 ef       	ldi	r24, 0xF9	; 249
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	01 97       	sbiw	r24, 0x01	; 1
 4be:	f1 f7       	brne	.-4      	; 0x4bc <_ZN3ram5writeEyc+0x3e>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <_ZN3ram5writeEyc+0x44>
 4c2:	00 00       	nop
	_delay_ms(1);
	portptr->digitalwrite(wepin,true);
 4c4:	41 e0       	ldi	r20, 0x01	; 1
 4c6:	69 81       	ldd	r22, Y+1	; 0x01
 4c8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ca:	9b 81       	ldd	r25, Y+3	; 0x03
 4cc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN14portcontroller12digitalwriteEhb>
}
 4d0:	df 91       	pop	r29
 4d2:	cf 91       	pop	r28
 4d4:	1f 91       	pop	r17
 4d6:	0f 91       	pop	r16
 4d8:	ef 90       	pop	r14
 4da:	08 95       	ret

000004dc <_ZN3ramD1Ev>:
{
	return address;
}
*/
// default destructor
ram::~ram()
 4dc:	08 95       	ret

000004de <_ZN4VramC1EP14portcontrollerP8shiftregS3_hy>:
{
	for (int i =0; i<8 ; i++)
	{
		write(this->custom_char_memory_base+i,customchar[i]);	
	}
}
 4de:	8f 92       	push	r8
 4e0:	9f 92       	push	r9
 4e2:	af 92       	push	r10
 4e4:	bf 92       	push	r11
 4e6:	cf 92       	push	r12
 4e8:	df 92       	push	r13
 4ea:	ef 92       	push	r14
 4ec:	ff 92       	push	r15
 4ee:	0f 93       	push	r16
 4f0:	cf 93       	push	r28
 4f2:	df 93       	push	r29
 4f4:	cd b7       	in	r28, 0x3d	; 61
 4f6:	de b7       	in	r29, 0x3e	; 62
 4f8:	0e 94 10 02 	call	0x420	; 0x420 <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	0f 91       	pop	r16
 502:	ff 90       	pop	r15
 504:	ef 90       	pop	r14
 506:	df 90       	pop	r13
 508:	cf 90       	pop	r12
 50a:	bf 90       	pop	r11
 50c:	af 90       	pop	r10
 50e:	9f 90       	pop	r9
 510:	8f 90       	pop	r8
 512:	08 95       	ret

00000514 <_ZN4VramD1Ev>:

// default destructor
Vram::~Vram()
 514:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
 518:	08 95       	ret

0000051a <_Z11storememoryyc>:
{
	
	
}
void storememory(uint64_t address, char out)
{
 51a:	6f 92       	push	r6
 51c:	7f 92       	push	r7
 51e:	8f 92       	push	r8
 520:	9f 92       	push	r9
 522:	af 92       	push	r10
 524:	bf 92       	push	r11
 526:	cf 92       	push	r12
 528:	df 92       	push	r13
 52a:	ef 92       	push	r14
 52c:	ff 92       	push	r15
 52e:	0f 93       	push	r16
 530:	1f 93       	push	r17
 532:	cf 93       	push	r28
 534:	df 93       	push	r29
 536:	c2 2e       	mov	r12, r18
 538:	d3 2e       	mov	r13, r19
 53a:	f4 2e       	mov	r15, r20
 53c:	d5 2f       	mov	r29, r21
 53e:	c6 2f       	mov	r28, r22
 540:	b7 2f       	mov	r27, r23
 542:	f8 2f       	mov	r31, r24
 544:	e9 2f       	mov	r30, r25
 546:	e0 2e       	mov	r14, r16
	if (address>=0x0 && address<=0x3fff)
 548:	2f 3f       	cpi	r18, 0xFF	; 255
 54a:	0f e3       	ldi	r16, 0x3F	; 63
 54c:	30 07       	cpc	r19, r16
 54e:	41 05       	cpc	r20, r1
 550:	51 05       	cpc	r21, r1
 552:	61 05       	cpc	r22, r1
 554:	71 05       	cpc	r23, r1
 556:	81 05       	cpc	r24, r1
 558:	91 05       	cpc	r25, r1
 55a:	09 f0       	breq	.+2      	; 0x55e <_Z11storememoryyc+0x44>
 55c:	68 f4       	brcc	.+26     	; 0x578 <_Z11storememoryyc+0x5e>
	{
		bank0.write(address,out);
 55e:	02 2f       	mov	r16, r18
 560:	13 2f       	mov	r17, r19
 562:	24 2f       	mov	r18, r20
 564:	35 2f       	mov	r19, r21
 566:	46 2f       	mov	r20, r22
 568:	57 2f       	mov	r21, r23
 56a:	68 2f       	mov	r22, r24
 56c:	79 2f       	mov	r23, r25
 56e:	89 e7       	ldi	r24, 0x79	; 121
 570:	93 e0       	ldi	r25, 0x03	; 3
 572:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN3ram5writeEyc>
 576:	9c c0       	rjmp	.+312    	; 0x6b0 <_Z11storememoryyc+0x196>
	}
	else if (address>=0x4000 && address<=0x7fff)
 578:	30 54       	subi	r19, 0x40	; 64
 57a:	41 09       	sbc	r20, r1
 57c:	51 09       	sbc	r21, r1
 57e:	61 09       	sbc	r22, r1
 580:	71 09       	sbc	r23, r1
 582:	81 09       	sbc	r24, r1
 584:	91 09       	sbc	r25, r1
 586:	13 2f       	mov	r17, r19
 588:	2f 3f       	cpi	r18, 0xFF	; 255
 58a:	0f e3       	ldi	r16, 0x3F	; 63
 58c:	30 07       	cpc	r19, r16
 58e:	41 05       	cpc	r20, r1
 590:	51 05       	cpc	r21, r1
 592:	61 05       	cpc	r22, r1
 594:	71 05       	cpc	r23, r1
 596:	81 05       	cpc	r24, r1
 598:	91 05       	cpc	r25, r1
 59a:	09 f0       	breq	.+2      	; 0x59e <_Z11storememoryyc+0x84>
 59c:	60 f4       	brcc	.+24     	; 0x5b6 <_Z11storememoryyc+0x9c>
	{
		bank1.write(address-0x4000,out);
 59e:	02 2f       	mov	r16, r18
 5a0:	24 2f       	mov	r18, r20
 5a2:	35 2f       	mov	r19, r21
 5a4:	46 2f       	mov	r20, r22
 5a6:	57 2f       	mov	r21, r23
 5a8:	68 2f       	mov	r22, r24
 5aa:	79 2f       	mov	r23, r25
 5ac:	89 e6       	ldi	r24, 0x69	; 105
 5ae:	93 e0       	ldi	r25, 0x03	; 3
 5b0:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN3ram5writeEyc>
 5b4:	7d c0       	rjmp	.+250    	; 0x6b0 <_Z11storememoryyc+0x196>
	} 
	else if(address>=0x8000 && address<=0xbfff)
 5b6:	2c 2d       	mov	r18, r12
 5b8:	3d 2d       	mov	r19, r13
 5ba:	4f 2d       	mov	r20, r15
 5bc:	5d 2f       	mov	r21, r29
 5be:	6c 2f       	mov	r22, r28
 5c0:	7b 2f       	mov	r23, r27
 5c2:	8f 2f       	mov	r24, r31
 5c4:	9e 2f       	mov	r25, r30
 5c6:	30 58       	subi	r19, 0x80	; 128
 5c8:	41 09       	sbc	r20, r1
 5ca:	51 09       	sbc	r21, r1
 5cc:	61 09       	sbc	r22, r1
 5ce:	71 09       	sbc	r23, r1
 5d0:	81 09       	sbc	r24, r1
 5d2:	91 09       	sbc	r25, r1
 5d4:	13 2f       	mov	r17, r19
 5d6:	2f 3f       	cpi	r18, 0xFF	; 255
 5d8:	0f e3       	ldi	r16, 0x3F	; 63
 5da:	30 07       	cpc	r19, r16
 5dc:	41 05       	cpc	r20, r1
 5de:	51 05       	cpc	r21, r1
 5e0:	61 05       	cpc	r22, r1
 5e2:	71 05       	cpc	r23, r1
 5e4:	81 05       	cpc	r24, r1
 5e6:	91 05       	cpc	r25, r1
 5e8:	09 f0       	breq	.+2      	; 0x5ec <_Z11storememoryyc+0xd2>
 5ea:	60 f4       	brcc	.+24     	; 0x604 <_Z11storememoryyc+0xea>
	{
		bank2.write(address-0x8000,out);
 5ec:	02 2f       	mov	r16, r18
 5ee:	24 2f       	mov	r18, r20
 5f0:	35 2f       	mov	r19, r21
 5f2:	46 2f       	mov	r20, r22
 5f4:	57 2f       	mov	r21, r23
 5f6:	68 2f       	mov	r22, r24
 5f8:	79 2f       	mov	r23, r25
 5fa:	89 e5       	ldi	r24, 0x59	; 89
 5fc:	93 e0       	ldi	r25, 0x03	; 3
 5fe:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN3ram5writeEyc>
 602:	56 c0       	rjmp	.+172    	; 0x6b0 <_Z11storememoryyc+0x196>
	}
	else if(address>=0xC000 && address<=0xffff)
 604:	2c 2d       	mov	r18, r12
 606:	3d 2d       	mov	r19, r13
 608:	4f 2d       	mov	r20, r15
 60a:	5d 2f       	mov	r21, r29
 60c:	6c 2f       	mov	r22, r28
 60e:	7b 2f       	mov	r23, r27
 610:	8f 2f       	mov	r24, r31
 612:	9e 2f       	mov	r25, r30
 614:	30 5c       	subi	r19, 0xC0	; 192
 616:	41 09       	sbc	r20, r1
 618:	51 09       	sbc	r21, r1
 61a:	61 09       	sbc	r22, r1
 61c:	71 09       	sbc	r23, r1
 61e:	81 09       	sbc	r24, r1
 620:	91 09       	sbc	r25, r1
 622:	13 2f       	mov	r17, r19
 624:	2f 3f       	cpi	r18, 0xFF	; 255
 626:	0f e3       	ldi	r16, 0x3F	; 63
 628:	30 07       	cpc	r19, r16
 62a:	41 05       	cpc	r20, r1
 62c:	51 05       	cpc	r21, r1
 62e:	61 05       	cpc	r22, r1
 630:	71 05       	cpc	r23, r1
 632:	81 05       	cpc	r24, r1
 634:	91 05       	cpc	r25, r1
 636:	09 f0       	breq	.+2      	; 0x63a <_Z11storememoryyc+0x120>
 638:	60 f4       	brcc	.+24     	; 0x652 <_Z11storememoryyc+0x138>
	{
		bank3.write(address-0xC000,out);
 63a:	02 2f       	mov	r16, r18
 63c:	24 2f       	mov	r18, r20
 63e:	35 2f       	mov	r19, r21
 640:	46 2f       	mov	r20, r22
 642:	57 2f       	mov	r21, r23
 644:	68 2f       	mov	r22, r24
 646:	79 2f       	mov	r23, r25
 648:	89 e4       	ldi	r24, 0x49	; 73
 64a:	93 e0       	ldi	r25, 0x03	; 3
 64c:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN3ram5writeEyc>
 650:	2f c0       	rjmp	.+94     	; 0x6b0 <_Z11storememoryyc+0x196>
	}
	else if(address>=0xffff && address<=0x10000)
 652:	2c 2d       	mov	r18, r12
 654:	3d 2d       	mov	r19, r13
 656:	4f 2d       	mov	r20, r15
 658:	5d 2f       	mov	r21, r29
 65a:	6c 2f       	mov	r22, r28
 65c:	7b 2f       	mov	r23, r27
 65e:	8f 2f       	mov	r24, r31
 660:	9e 2f       	mov	r25, r30
 662:	2f 5f       	subi	r18, 0xFF	; 255
 664:	3f 4f       	sbci	r19, 0xFF	; 255
 666:	41 09       	sbc	r20, r1
 668:	51 09       	sbc	r21, r1
 66a:	61 09       	sbc	r22, r1
 66c:	71 09       	sbc	r23, r1
 66e:	81 09       	sbc	r24, r1
 670:	91 09       	sbc	r25, r1
 672:	a1 e0       	ldi	r26, 0x01	; 1
 674:	0e 94 76 05 	call	0xaec	; 0xaec <__cmpdi2_s8>
 678:	09 f0       	breq	.+2      	; 0x67c <_Z11storememoryyc+0x162>
 67a:	d0 f4       	brcc	.+52     	; 0x6b0 <_Z11storememoryyc+0x196>
	{
		bank4.write(address-0x10000,out);
 67c:	2c 2d       	mov	r18, r12
 67e:	3d 2d       	mov	r19, r13
 680:	4f 2d       	mov	r20, r15
 682:	5d 2f       	mov	r21, r29
 684:	6c 2f       	mov	r22, r28
 686:	7b 2f       	mov	r23, r27
 688:	8f 2f       	mov	r24, r31
 68a:	9e 2f       	mov	r25, r30
 68c:	41 50       	subi	r20, 0x01	; 1
 68e:	51 09       	sbc	r21, r1
 690:	61 09       	sbc	r22, r1
 692:	71 09       	sbc	r23, r1
 694:	81 09       	sbc	r24, r1
 696:	91 09       	sbc	r25, r1
 698:	02 2f       	mov	r16, r18
 69a:	13 2f       	mov	r17, r19
 69c:	24 2f       	mov	r18, r20
 69e:	35 2f       	mov	r19, r21
 6a0:	46 2f       	mov	r20, r22
 6a2:	57 2f       	mov	r21, r23
 6a4:	68 2f       	mov	r22, r24
 6a6:	79 2f       	mov	r23, r25
 6a8:	89 e3       	ldi	r24, 0x39	; 57
 6aa:	93 e0       	ldi	r25, 0x03	; 3
 6ac:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN3ram5writeEyc>
	}
	
	
}
 6b0:	df 91       	pop	r29
 6b2:	cf 91       	pop	r28
 6b4:	1f 91       	pop	r17
 6b6:	0f 91       	pop	r16
 6b8:	ff 90       	pop	r15
 6ba:	ef 90       	pop	r14
 6bc:	df 90       	pop	r13
 6be:	cf 90       	pop	r12
 6c0:	bf 90       	pop	r11
 6c2:	af 90       	pop	r10
 6c4:	9f 90       	pop	r9
 6c6:	8f 90       	pop	r8
 6c8:	7f 90       	pop	r7
 6ca:	6f 90       	pop	r6
 6cc:	08 95       	ret

000006ce <main>:
int main(void)
{
	port.writeddra(0xff);
 6ce:	6f ef       	ldi	r22, 0xFF	; 255
 6d0:	83 ea       	ldi	r24, 0xA3	; 163
 6d2:	93 e0       	ldi	r25, 0x03	; 3
 6d4:	0e 94 9c 00 	call	0x138	; 0x138 <_ZN14portcontroller9writeddraEc>
	port.writeddrc(0xff);
 6d8:	6f ef       	ldi	r22, 0xFF	; 255
 6da:	83 ea       	ldi	r24, 0xA3	; 163
 6dc:	93 e0       	ldi	r25, 0x03	; 3
 6de:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN14portcontroller9writeddrcEc>
	interpret.nop();
 6e2:	82 e0       	ldi	r24, 0x02	; 2
 6e4:	91 e0       	ldi	r25, 0x01	; 1
 6e6:	0e 94 92 00 	call	0x124	; 0x124 <_ZN11interpreter3nopEv>
	//bank1.setaddress(0);
    /* Replace with your application code */
    while (1) 
    {
		
		interpret.inc((char)9);
 6ea:	69 e0       	ldi	r22, 0x09	; 9
 6ec:	82 e0       	ldi	r24, 0x02	; 2
 6ee:	91 e0       	ldi	r25, 0x01	; 1
 6f0:	0e 94 8b 00 	call	0x116	; 0x116 <_ZN11interpreter3incEc>

		if (PINB>0)
 6f4:	83 b1       	in	r24, 0x03	; 3
 6f6:	81 11       	cpse	r24, r1
		{
			if (PINB)
 6f8:	83 b1       	in	r24, 0x03	; 3
			{
				
			}
		}
		storememory(0x0000,0xff);
 6fa:	0f ef       	ldi	r16, 0xFF	; 255
 6fc:	20 e0       	ldi	r18, 0x00	; 0
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	40 e0       	ldi	r20, 0x00	; 0
 702:	50 e0       	ldi	r21, 0x00	; 0
 704:	60 e0       	ldi	r22, 0x00	; 0
 706:	70 e0       	ldi	r23, 0x00	; 0
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 8d 02 	call	0x51a	; 0x51a <_Z11storememoryyc>
	port.writeddrc(0xff);
	interpret.nop();
	
	//bank1.setaddress(0);
    /* Replace with your application code */
    while (1) 
 710:	ec cf       	rjmp	.-40     	; 0x6ea <main+0x1c>

00000712 <_GLOBAL__sub_I_gpvariables>:
				
			}
		}
		storememory(0x0000,0xff);
	}
 712:	8f 92       	push	r8
 714:	9f 92       	push	r9
 716:	af 92       	push	r10
 718:	bf 92       	push	r11
 71a:	cf 92       	push	r12
 71c:	df 92       	push	r13
 71e:	ef 92       	push	r14
 720:	ff 92       	push	r15
 722:	0f 93       	push	r16
 724:	1f 93       	push	r17
 726:	cf 93       	push	r28
 728:	df 93       	push	r29
 72a:	cd b7       	in	r28, 0x3d	; 61
 72c:	de b7       	in	r29, 0x3e	; 62
 72e:	63 97       	sbiw	r28, 0x13	; 19
 730:	0f b6       	in	r0, 0x3f	; 63
 732:	f8 94       	cli
 734:	de bf       	out	0x3e, r29	; 62
 736:	0f be       	out	0x3f, r0	; 63
 738:	cd bf       	out	0x3d, r28	; 61
	a0-a12 adress a13-a15 
	
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
 73a:	83 ea       	ldi	r24, 0xA3	; 163
 73c:	93 e0       	ldi	r25, 0x03	; 3
 73e:	0e 94 99 00 	call	0x132	; 0x132 <_ZN14portcontrollerC1Ev>
static shiftreg addreg=shiftreg(40,39,38,&port);
 742:	03 ea       	ldi	r16, 0xA3	; 163
 744:	13 e0       	ldi	r17, 0x03	; 3
 746:	26 e2       	ldi	r18, 0x26	; 38
 748:	47 e2       	ldi	r20, 0x27	; 39
 74a:	68 e2       	ldi	r22, 0x28	; 40
 74c:	86 e9       	ldi	r24, 0x96	; 150
 74e:	93 e0       	ldi	r25, 0x03	; 3
 750:	0e 94 06 01 	call	0x20c	; 0x20c <_ZN8shiftregC1EhhhP14portcontroller>
static shiftreg datareg=shiftreg(37,36,35,&port);
 754:	23 e2       	ldi	r18, 0x23	; 35
 756:	44 e2       	ldi	r20, 0x24	; 36
 758:	65 e2       	ldi	r22, 0x25	; 37
 75a:	89 e8       	ldi	r24, 0x89	; 137
 75c:	93 e0       	ldi	r25, 0x03	; 3
 75e:	0e 94 06 01 	call	0x20c	; 0x20c <_ZN8shiftregC1EhhhP14portcontroller>
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
 762:	81 2c       	mov	r8, r1
 764:	91 2c       	mov	r9, r1
 766:	a1 2c       	mov	r10, r1
 768:	b1 2c       	mov	r11, r1
 76a:	c1 2c       	mov	r12, r1
 76c:	d1 2c       	mov	r13, r1
 76e:	e1 2c       	mov	r14, r1
 770:	f1 2c       	mov	r15, r1
 772:	02 e2       	ldi	r16, 0x22	; 34
 774:	29 e8       	ldi	r18, 0x89	; 137
 776:	33 e0       	ldi	r19, 0x03	; 3
 778:	46 e9       	ldi	r20, 0x96	; 150
 77a:	53 e0       	ldi	r21, 0x03	; 3
 77c:	63 ea       	ldi	r22, 0xA3	; 163
 77e:	73 e0       	ldi	r23, 0x03	; 3
 780:	89 e7       	ldi	r24, 0x79	; 121
 782:	93 e0       	ldi	r25, 0x03	; 3
 784:	0e 94 10 02 	call	0x420	; 0x420 <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
 788:	68 94       	set
 78a:	99 24       	eor	r9, r9
 78c:	96 f8       	bld	r9, 6
 78e:	29 e8       	ldi	r18, 0x89	; 137
 790:	33 e0       	ldi	r19, 0x03	; 3
 792:	46 e9       	ldi	r20, 0x96	; 150
 794:	53 e0       	ldi	r21, 0x03	; 3
 796:	63 ea       	ldi	r22, 0xA3	; 163
 798:	73 e0       	ldi	r23, 0x03	; 3
 79a:	89 e6       	ldi	r24, 0x69	; 105
 79c:	93 e0       	ldi	r25, 0x03	; 3
 79e:	0e 94 10 02 	call	0x420	; 0x420 <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
 7a2:	68 94       	set
 7a4:	99 24       	eor	r9, r9
 7a6:	97 f8       	bld	r9, 7
 7a8:	29 e8       	ldi	r18, 0x89	; 137
 7aa:	33 e0       	ldi	r19, 0x03	; 3
 7ac:	46 e9       	ldi	r20, 0x96	; 150
 7ae:	53 e0       	ldi	r21, 0x03	; 3
 7b0:	63 ea       	ldi	r22, 0xA3	; 163
 7b2:	73 e0       	ldi	r23, 0x03	; 3
 7b4:	89 e5       	ldi	r24, 0x59	; 89
 7b6:	93 e0       	ldi	r25, 0x03	; 3
 7b8:	0e 94 10 02 	call	0x420	; 0x420 <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
 7bc:	0f 2e       	mov	r0, r31
 7be:	f0 ec       	ldi	r31, 0xC0	; 192
 7c0:	9f 2e       	mov	r9, r31
 7c2:	f0 2d       	mov	r31, r0
 7c4:	29 e8       	ldi	r18, 0x89	; 137
 7c6:	33 e0       	ldi	r19, 0x03	; 3
 7c8:	46 e9       	ldi	r20, 0x96	; 150
 7ca:	53 e0       	ldi	r21, 0x03	; 3
 7cc:	63 ea       	ldi	r22, 0xA3	; 163
 7ce:	73 e0       	ldi	r23, 0x03	; 3
 7d0:	89 e4       	ldi	r24, 0x49	; 73
 7d2:	93 e0       	ldi	r25, 0x03	; 3
 7d4:	0e 94 10 02 	call	0x420	; 0x420 <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram
 7d8:	91 2c       	mov	r9, r1
 7da:	aa 24       	eor	r10, r10
 7dc:	a3 94       	inc	r10
 7de:	29 e8       	ldi	r18, 0x89	; 137
 7e0:	33 e0       	ldi	r19, 0x03	; 3
 7e2:	46 e9       	ldi	r20, 0x96	; 150
 7e4:	53 e0       	ldi	r21, 0x03	; 3
 7e6:	63 ea       	ldi	r22, 0xA3	; 163
 7e8:	73 e0       	ldi	r23, 0x03	; 3
 7ea:	ce 01       	movw	r24, r28
 7ec:	01 96       	adiw	r24, 0x01	; 1
 7ee:	0e 94 6f 02 	call	0x4de	; 0x4de <_ZN4VramC1EP14portcontrollerP8shiftregS3_hy>
 7f2:	80 e1       	ldi	r24, 0x10	; 16
 7f4:	fe 01       	movw	r30, r28
 7f6:	31 96       	adiw	r30, 0x01	; 1
 7f8:	a9 e3       	ldi	r26, 0x39	; 57
 7fa:	b3 e0       	ldi	r27, 0x03	; 3
 7fc:	01 90       	ld	r0, Z+
 7fe:	0d 92       	st	X+, r0
 800:	8a 95       	dec	r24
 802:	e1 f7       	brne	.-8      	; 0x7fc <_GLOBAL__sub_I_gpvariables+0xea>
 804:	ce 01       	movw	r24, r28
 806:	01 96       	adiw	r24, 0x01	; 1
 808:	0e 94 8a 02 	call	0x514	; 0x514 <_ZN4VramD1Ev>

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};
 80c:	80 e1       	ldi	r24, 0x10	; 16
 80e:	e9 e7       	ldi	r30, 0x79	; 121
 810:	f3 e0       	ldi	r31, 0x03	; 3
 812:	a9 ee       	ldi	r26, 0xE9	; 233
 814:	b2 e0       	ldi	r27, 0x02	; 2
 816:	01 90       	ld	r0, Z+
 818:	0d 92       	st	X+, r0
 81a:	8a 95       	dec	r24
 81c:	e1 f7       	brne	.-8      	; 0x816 <_GLOBAL__sub_I_gpvariables+0x104>
 81e:	80 e1       	ldi	r24, 0x10	; 16
 820:	e9 e6       	ldi	r30, 0x69	; 105
 822:	f3 e0       	ldi	r31, 0x03	; 3
 824:	a9 ef       	ldi	r26, 0xF9	; 249
 826:	b2 e0       	ldi	r27, 0x02	; 2
 828:	01 90       	ld	r0, Z+
 82a:	0d 92       	st	X+, r0
 82c:	8a 95       	dec	r24
 82e:	e1 f7       	brne	.-8      	; 0x828 <_GLOBAL__sub_I_gpvariables+0x116>
 830:	80 e1       	ldi	r24, 0x10	; 16
 832:	e9 e5       	ldi	r30, 0x59	; 89
 834:	f3 e0       	ldi	r31, 0x03	; 3
 836:	a9 e0       	ldi	r26, 0x09	; 9
 838:	b3 e0       	ldi	r27, 0x03	; 3
 83a:	01 90       	ld	r0, Z+
 83c:	0d 92       	st	X+, r0
 83e:	8a 95       	dec	r24
 840:	e1 f7       	brne	.-8      	; 0x83a <_GLOBAL__sub_I_gpvariables+0x128>
 842:	80 e1       	ldi	r24, 0x10	; 16
 844:	e9 e4       	ldi	r30, 0x49	; 73
 846:	f3 e0       	ldi	r31, 0x03	; 3
 848:	a9 e1       	ldi	r26, 0x19	; 25
 84a:	b3 e0       	ldi	r27, 0x03	; 3
 84c:	01 90       	ld	r0, Z+
 84e:	0d 92       	st	X+, r0
 850:	8a 95       	dec	r24
 852:	e1 f7       	brne	.-8      	; 0x84c <_GLOBAL__sub_I_gpvariables+0x13a>
 854:	80 e1       	ldi	r24, 0x10	; 16
 856:	e9 e3       	ldi	r30, 0x39	; 57
 858:	f3 e0       	ldi	r31, 0x03	; 3
 85a:	a9 e2       	ldi	r26, 0x29	; 41
 85c:	b3 e0       	ldi	r27, 0x03	; 3
 85e:	01 90       	ld	r0, Z+
 860:	0d 92       	st	X+, r0
 862:	8a 95       	dec	r24
 864:	e1 f7       	brne	.-8      	; 0x85e <_GLOBAL__sub_I_gpvariables+0x14c>


static rom bios = rom(&port,&addreg,0x14000);
 866:	68 94       	set
 868:	dd 24       	eor	r13, r13
 86a:	d6 f8       	bld	r13, 6
 86c:	ee 24       	eor	r14, r14
 86e:	e3 94       	inc	r14
 870:	00 e0       	ldi	r16, 0x00	; 0
 872:	10 e0       	ldi	r17, 0x00	; 0
 874:	20 e0       	ldi	r18, 0x00	; 0
 876:	30 e0       	ldi	r19, 0x00	; 0
 878:	46 e9       	ldi	r20, 0x96	; 150
 87a:	53 e0       	ldi	r21, 0x03	; 3
 87c:	63 ea       	ldi	r22, 0xA3	; 163
 87e:	73 e0       	ldi	r23, 0x03	; 3
 880:	85 ed       	ldi	r24, 0xD5	; 213
 882:	92 e0       	ldi	r25, 0x02	; 2
 884:	0e 94 ed 01 	call	0x3da	; 0x3da <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom settings = rom(&port,&addreg,0x018000);
 888:	68 94       	set
 88a:	dd 24       	eor	r13, r13
 88c:	d7 f8       	bld	r13, 7
 88e:	20 e0       	ldi	r18, 0x00	; 0
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	46 e9       	ldi	r20, 0x96	; 150
 894:	53 e0       	ldi	r21, 0x03	; 3
 896:	63 ea       	ldi	r22, 0xA3	; 163
 898:	73 e0       	ldi	r23, 0x03	; 3
 89a:	81 ec       	ldi	r24, 0xC1	; 193
 89c:	92 e0       	ldi	r25, 0x02	; 2
 89e:	0e 94 ed 01 	call	0x3da	; 0x3da <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program0 = rom(&port,&addreg,0x1C0000);
 8a2:	d1 2c       	mov	r13, r1
 8a4:	0f 2e       	mov	r0, r31
 8a6:	fc e1       	ldi	r31, 0x1C	; 28
 8a8:	ef 2e       	mov	r14, r31
 8aa:	f0 2d       	mov	r31, r0
 8ac:	20 e0       	ldi	r18, 0x00	; 0
 8ae:	30 e0       	ldi	r19, 0x00	; 0
 8b0:	46 e9       	ldi	r20, 0x96	; 150
 8b2:	53 e0       	ldi	r21, 0x03	; 3
 8b4:	63 ea       	ldi	r22, 0xA3	; 163
 8b6:	73 e0       	ldi	r23, 0x03	; 3
 8b8:	8d ea       	ldi	r24, 0xAD	; 173
 8ba:	92 e0       	ldi	r25, 0x02	; 2
 8bc:	0e 94 ed 01 	call	0x3da	; 0x3da <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program1 = rom(&port,&addreg,0x020000);
 8c0:	68 94       	set
 8c2:	ee 24       	eor	r14, r14
 8c4:	e1 f8       	bld	r14, 1
 8c6:	20 e0       	ldi	r18, 0x00	; 0
 8c8:	30 e0       	ldi	r19, 0x00	; 0
 8ca:	46 e9       	ldi	r20, 0x96	; 150
 8cc:	53 e0       	ldi	r21, 0x03	; 3
 8ce:	63 ea       	ldi	r22, 0xA3	; 163
 8d0:	73 e0       	ldi	r23, 0x03	; 3
 8d2:	89 e9       	ldi	r24, 0x99	; 153
 8d4:	92 e0       	ldi	r25, 0x02	; 2
 8d6:	0e 94 ed 01 	call	0x3da	; 0x3da <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program2 = rom(&port,&addreg,0x024000);
 8da:	68 94       	set
 8dc:	dd 24       	eor	r13, r13
 8de:	d6 f8       	bld	r13, 6
 8e0:	20 e0       	ldi	r18, 0x00	; 0
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	46 e9       	ldi	r20, 0x96	; 150
 8e6:	53 e0       	ldi	r21, 0x03	; 3
 8e8:	63 ea       	ldi	r22, 0xA3	; 163
 8ea:	73 e0       	ldi	r23, 0x03	; 3
 8ec:	85 e8       	ldi	r24, 0x85	; 133
 8ee:	92 e0       	ldi	r25, 0x02	; 2
 8f0:	0e 94 ed 01 	call	0x3da	; 0x3da <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program3 = rom(&port,&addreg,0x028000);
 8f4:	68 94       	set
 8f6:	dd 24       	eor	r13, r13
 8f8:	d7 f8       	bld	r13, 7
 8fa:	20 e0       	ldi	r18, 0x00	; 0
 8fc:	30 e0       	ldi	r19, 0x00	; 0
 8fe:	46 e9       	ldi	r20, 0x96	; 150
 900:	53 e0       	ldi	r21, 0x03	; 3
 902:	63 ea       	ldi	r22, 0xA3	; 163
 904:	73 e0       	ldi	r23, 0x03	; 3
 906:	81 e7       	ldi	r24, 0x71	; 113
 908:	92 e0       	ldi	r25, 0x02	; 2
 90a:	0e 94 ed 01 	call	0x3da	; 0x3da <_ZN3romC1EP14portcontrollerP8shiftregy>

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
 90e:	0f 2e       	mov	r0, r31
 910:	f0 ec       	ldi	r31, 0xC0	; 192
 912:	9f 2e       	mov	r9, r31
 914:	f0 2d       	mov	r31, r0
 916:	68 94       	set
 918:	aa 24       	eor	r10, r10
 91a:	a1 f8       	bld	r10, 1
 91c:	d1 2c       	mov	r13, r1
 91e:	e1 2c       	mov	r14, r1
 920:	02 e2       	ldi	r16, 0x22	; 34
 922:	29 e8       	ldi	r18, 0x89	; 137
 924:	33 e0       	ldi	r19, 0x03	; 3
 926:	46 e9       	ldi	r20, 0x96	; 150
 928:	53 e0       	ldi	r21, 0x03	; 3
 92a:	63 ea       	ldi	r22, 0xA3	; 163
 92c:	73 e0       	ldi	r23, 0x03	; 3
 92e:	80 e6       	ldi	r24, 0x60	; 96
 930:	92 e0       	ldi	r25, 0x02	; 2
 932:	0e 94 bc 01 	call	0x378	; 0x378 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
 936:	91 2c       	mov	r9, r1
 938:	0f 2e       	mov	r0, r31
 93a:	f3 e0       	ldi	r31, 0x03	; 3
 93c:	af 2e       	mov	r10, r31
 93e:	f0 2d       	mov	r31, r0
 940:	29 e8       	ldi	r18, 0x89	; 137
 942:	33 e0       	ldi	r19, 0x03	; 3
 944:	46 e9       	ldi	r20, 0x96	; 150
 946:	53 e0       	ldi	r21, 0x03	; 3
 948:	63 ea       	ldi	r22, 0xA3	; 163
 94a:	73 e0       	ldi	r23, 0x03	; 3
 94c:	8f e4       	ldi	r24, 0x4F	; 79
 94e:	92 e0       	ldi	r25, 0x02	; 2
 950:	0e 94 bc 01 	call	0x378	; 0x378 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
 954:	68 94       	set
 956:	99 24       	eor	r9, r9
 958:	96 f8       	bld	r9, 6
 95a:	29 e8       	ldi	r18, 0x89	; 137
 95c:	33 e0       	ldi	r19, 0x03	; 3
 95e:	46 e9       	ldi	r20, 0x96	; 150
 960:	53 e0       	ldi	r21, 0x03	; 3
 962:	63 ea       	ldi	r22, 0xA3	; 163
 964:	73 e0       	ldi	r23, 0x03	; 3
 966:	8e e3       	ldi	r24, 0x3E	; 62
 968:	92 e0       	ldi	r25, 0x02	; 2
 96a:	0e 94 bc 01 	call	0x378	; 0x378 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
 96e:	68 94       	set
 970:	99 24       	eor	r9, r9
 972:	97 f8       	bld	r9, 7
 974:	29 e8       	ldi	r18, 0x89	; 137
 976:	33 e0       	ldi	r19, 0x03	; 3
 978:	46 e9       	ldi	r20, 0x96	; 150
 97a:	53 e0       	ldi	r21, 0x03	; 3
 97c:	63 ea       	ldi	r22, 0xA3	; 163
 97e:	73 e0       	ldi	r23, 0x03	; 3
 980:	8d e2       	ldi	r24, 0x2D	; 45
 982:	92 e0       	ldi	r25, 0x02	; 2
 984:	0e 94 bc 01 	call	0x378	; 0x378 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);
 988:	0f 2e       	mov	r0, r31
 98a:	f0 ec       	ldi	r31, 0xC0	; 192
 98c:	9f 2e       	mov	r9, r31
 98e:	f0 2d       	mov	r31, r0
 990:	29 e8       	ldi	r18, 0x89	; 137
 992:	33 e0       	ldi	r19, 0x03	; 3
 994:	46 e9       	ldi	r20, 0x96	; 150
 996:	53 e0       	ldi	r21, 0x03	; 3
 998:	63 ea       	ldi	r22, 0xA3	; 163
 99a:	73 e0       	ldi	r23, 0x03	; 3
 99c:	8c e1       	ldi	r24, 0x1C	; 28
 99e:	92 e0       	ldi	r25, 0x02	; 2
 9a0:	0e 94 bc 01 	call	0x378	; 0x378 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>


static interrupts irqhandler= interrupts();
 9a4:	8a e1       	ldi	r24, 0x1A	; 26
 9a6:	92 e0       	ldi	r25, 0x02	; 2
 9a8:	0e 94 95 00 	call	0x12a	; 0x12a <_ZN10interruptsC1Ev>
static interpreter interpret= interpreter();
 9ac:	82 e0       	ldi	r24, 0x02	; 2
 9ae:	91 e0       	ldi	r25, 0x01	; 1
 9b0:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN11interpreterC1Ev>

static lcd disp1=lcd();
 9b4:	80 e0       	ldi	r24, 0x00	; 0
 9b6:	91 e0       	ldi	r25, 0x01	; 1
 9b8:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN3lcdC1Ev>
				
			}
		}
		storememory(0x0000,0xff);
	}
 9bc:	63 96       	adiw	r28, 0x13	; 19
 9be:	0f b6       	in	r0, 0x3f	; 63
 9c0:	f8 94       	cli
 9c2:	de bf       	out	0x3e, r29	; 62
 9c4:	0f be       	out	0x3f, r0	; 63
 9c6:	cd bf       	out	0x3d, r28	; 61
 9c8:	df 91       	pop	r29
 9ca:	cf 91       	pop	r28
 9cc:	1f 91       	pop	r17
 9ce:	0f 91       	pop	r16
 9d0:	ff 90       	pop	r15
 9d2:	ef 90       	pop	r14
 9d4:	df 90       	pop	r13
 9d6:	cf 90       	pop	r12
 9d8:	bf 90       	pop	r11
 9da:	af 90       	pop	r10
 9dc:	9f 90       	pop	r9
 9de:	8f 90       	pop	r8
 9e0:	08 95       	ret

000009e2 <_GLOBAL__sub_D_gpvariables>:
 9e2:	cf 93       	push	r28
 9e4:	df 93       	push	r29


static interrupts irqhandler= interrupts();
static interpreter interpret= interpreter();

static lcd disp1=lcd();
 9e6:	80 e0       	ldi	r24, 0x00	; 0
 9e8:	91 e0       	ldi	r25, 0x01	; 1
 9ea:	0e 94 98 00 	call	0x130	; 0x130 <_ZN3lcdD1Ev>
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);


static interrupts irqhandler= interrupts();
static interpreter interpret= interpreter();
 9ee:	82 e0       	ldi	r24, 0x02	; 2
 9f0:	91 e0       	ldi	r25, 0x01	; 1
 9f2:	0e 94 94 00 	call	0x128	; 0x128 <_ZN11interpreterD1Ev>
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);


static interrupts irqhandler= interrupts();
 9f6:	8a e1       	ldi	r24, 0x1A	; 26
 9f8:	92 e0       	ldi	r25, 0x02	; 2
 9fa:	0e 94 96 00 	call	0x12c	; 0x12c <_ZN10interruptsD1Ev>

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);
 9fe:	8c e1       	ldi	r24, 0x1C	; 28
 a00:	92 e0       	ldi	r25, 0x02	; 2
 a02:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6eepromD1Ev>
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
 a06:	8d e2       	ldi	r24, 0x2D	; 45
 a08:	92 e0       	ldi	r25, 0x02	; 2
 a0a:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6eepromD1Ev>
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
 a0e:	8e e3       	ldi	r24, 0x3E	; 62
 a10:	92 e0       	ldi	r25, 0x02	; 2
 a12:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6eepromD1Ev>
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
 a16:	8f e4       	ldi	r24, 0x4F	; 79
 a18:	92 e0       	ldi	r25, 0x02	; 2
 a1a:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6eepromD1Ev>
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
 a1e:	80 e6       	ldi	r24, 0x60	; 96
 a20:	92 e0       	ldi	r25, 0x02	; 2
 a22:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <_ZN6eepromD1Ev>
static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);
 a26:	81 e7       	ldi	r24, 0x71	; 113
 a28:	92 e0       	ldi	r25, 0x02	; 2
 a2a:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN3romD1Ev>

static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
 a2e:	85 e8       	ldi	r24, 0x85	; 133
 a30:	92 e0       	ldi	r25, 0x02	; 2
 a32:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN3romD1Ev>


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
 a36:	89 e9       	ldi	r24, 0x99	; 153
 a38:	92 e0       	ldi	r25, 0x02	; 2
 a3a:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN3romD1Ev>
static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
 a3e:	8d ea       	ldi	r24, 0xAD	; 173
 a40:	92 e0       	ldi	r25, 0x02	; 2
 a42:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN3romD1Ev>

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
 a46:	81 ec       	ldi	r24, 0xC1	; 193
 a48:	92 e0       	ldi	r25, 0x02	; 2
 a4a:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN3romD1Ev>
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
 a4e:	85 ed       	ldi	r24, 0xD5	; 213
 a50:	92 e0       	ldi	r25, 0x02	; 2
 a52:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN3romD1Ev>
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};
 a56:	c9 e3       	ldi	r28, 0x39	; 57
 a58:	d3 e0       	ldi	r29, 0x03	; 3
 a5a:	60 97       	sbiw	r28, 0x10	; 16
 a5c:	ce 01       	movw	r24, r28
 a5e:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
 a62:	82 e0       	ldi	r24, 0x02	; 2
 a64:	c9 3e       	cpi	r28, 0xE9	; 233
 a66:	d8 07       	cpc	r29, r24
 a68:	c1 f7       	brne	.-16     	; 0xa5a <_GLOBAL__sub_D_gpvariables+0x78>
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram
 a6a:	89 e3       	ldi	r24, 0x39	; 57
 a6c:	93 e0       	ldi	r25, 0x03	; 3
 a6e:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
 a72:	89 e4       	ldi	r24, 0x49	; 73
 a74:	93 e0       	ldi	r25, 0x03	; 3
 a76:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
 a7a:	89 e5       	ldi	r24, 0x59	; 89
 a7c:	93 e0       	ldi	r25, 0x03	; 3
 a7e:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
 a82:	89 e6       	ldi	r24, 0x69	; 105
 a84:	93 e0       	ldi	r25, 0x03	; 3
 a86:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
 a8a:	89 e7       	ldi	r24, 0x79	; 121
 a8c:	93 e0       	ldi	r25, 0x03	; 3
 a8e:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN3ramD1Ev>
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
 a92:	89 e8       	ldi	r24, 0x89	; 137
 a94:	93 e0       	ldi	r25, 0x03	; 3
 a96:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN8shiftregD1Ev>
	
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
 a9a:	86 e9       	ldi	r24, 0x96	; 150
 a9c:	93 e0       	ldi	r25, 0x03	; 3
 a9e:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN8shiftregD1Ev>
	a0-a12 adress a13-a15 
	
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
 aa2:	83 ea       	ldi	r24, 0xA3	; 163
 aa4:	93 e0       	ldi	r25, 0x03	; 3
 aa6:	0e 94 05 01 	call	0x20a	; 0x20a <_ZN14portcontrollerD1Ev>
				
			}
		}
		storememory(0x0000,0xff);
	}
 aaa:	df 91       	pop	r29
 aac:	cf 91       	pop	r28
 aae:	08 95       	ret

00000ab0 <__ashrdi3>:
 ab0:	97 fb       	bst	r25, 7
 ab2:	10 f8       	bld	r1, 0

00000ab4 <__lshrdi3>:
 ab4:	16 94       	lsr	r1
 ab6:	00 08       	sbc	r0, r0
 ab8:	0f 93       	push	r16
 aba:	08 30       	cpi	r16, 0x08	; 8
 abc:	98 f0       	brcs	.+38     	; 0xae4 <__lshrdi3+0x30>
 abe:	08 50       	subi	r16, 0x08	; 8
 ac0:	23 2f       	mov	r18, r19
 ac2:	34 2f       	mov	r19, r20
 ac4:	45 2f       	mov	r20, r21
 ac6:	56 2f       	mov	r21, r22
 ac8:	67 2f       	mov	r22, r23
 aca:	78 2f       	mov	r23, r24
 acc:	89 2f       	mov	r24, r25
 ace:	90 2d       	mov	r25, r0
 ad0:	f4 cf       	rjmp	.-24     	; 0xaba <__lshrdi3+0x6>
 ad2:	05 94       	asr	r0
 ad4:	97 95       	ror	r25
 ad6:	87 95       	ror	r24
 ad8:	77 95       	ror	r23
 ada:	67 95       	ror	r22
 adc:	57 95       	ror	r21
 ade:	47 95       	ror	r20
 ae0:	37 95       	ror	r19
 ae2:	27 95       	ror	r18
 ae4:	0a 95       	dec	r16
 ae6:	aa f7       	brpl	.-22     	; 0xad2 <__lshrdi3+0x1e>
 ae8:	0f 91       	pop	r16
 aea:	08 95       	ret

00000aec <__cmpdi2_s8>:
 aec:	00 24       	eor	r0, r0
 aee:	a7 fd       	sbrc	r26, 7
 af0:	00 94       	com	r0
 af2:	2a 17       	cp	r18, r26
 af4:	30 05       	cpc	r19, r0
 af6:	40 05       	cpc	r20, r0
 af8:	50 05       	cpc	r21, r0
 afa:	60 05       	cpc	r22, r0
 afc:	70 05       	cpc	r23, r0
 afe:	80 05       	cpc	r24, r0
 b00:	90 05       	cpc	r25, r0
 b02:	08 95       	ret

00000b04 <__tablejump2__>:
 b04:	ee 0f       	add	r30, r30
 b06:	ff 1f       	adc	r31, r31
 b08:	05 90       	lpm	r0, Z+
 b0a:	f4 91       	lpm	r31, Z
 b0c:	e0 2d       	mov	r30, r0
 b0e:	09 94       	ijmp

00000b10 <__do_global_dtors>:
 b10:	10 e0       	ldi	r17, 0x00	; 0
 b12:	cf e3       	ldi	r28, 0x3F	; 63
 b14:	d0 e0       	ldi	r29, 0x00	; 0
 b16:	04 c0       	rjmp	.+8      	; 0xb20 <__do_global_dtors+0x10>
 b18:	fe 01       	movw	r30, r28
 b1a:	0e 94 82 05 	call	0xb04	; 0xb04 <__tablejump2__>
 b1e:	21 96       	adiw	r28, 0x01	; 1
 b20:	c0 34       	cpi	r28, 0x40	; 64
 b22:	d1 07       	cpc	r29, r17
 b24:	c9 f7       	brne	.-14     	; 0xb18 <__do_global_dtors+0x8>
 b26:	f8 94       	cli

00000b28 <__stop_program>:
 b28:	ff cf       	rjmp	.-2      	; 0xb28 <__stop_program>
