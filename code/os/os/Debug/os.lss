
os.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000b9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b26  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a1  00800100  00800100  00000b9a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b9a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000360  00000000  00000000  00000c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007e7c  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001bf9  00000000  00000000  00008de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a9c  00000000  00000000  0000a9e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000898  00000000  00000000  0000c480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000016b6  00000000  00000000  0000cd18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001bd7  00000000  00000000  0000e3ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c0  00000000  00000000  0000ffa5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__dtors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000007c <__ctors_start>:
  7c:	87 03       	fmuls	r16, r23

0000007e <__ctors_end>:
  7e:	ef 04       	cpc	r14, r15

00000080 <__dtors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d0 e1       	ldi	r29, 0x10	; 16
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_clear_bss>:
  8c:	23 e0       	ldi	r18, 0x03	; 3
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a1 3a       	cpi	r26, 0xA1	; 161
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	cf e3       	ldi	r28, 0x3F	; 63
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 80 05 	call	0xb00	; 0xb00 <__tablejump2__>
  ac:	ce 33       	cpi	r28, 0x3E	; 62
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 65 03 	call	0x6ca	; 0x6ca <main>
  b6:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__do_global_dtors>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_ZN11interpreterC1Ev>:
	asm volatile("nop");
}


void interpreter::syscall()
{
  be:	fc 01       	movw	r30, r24
  c0:	16 82       	std	Z+6, r1	; 0x06
  c2:	17 82       	std	Z+7, r1	; 0x07
  c4:	10 86       	std	Z+8, r1	; 0x08
  c6:	dc 01       	movw	r26, r24
  c8:	a8 5f       	subi	r26, 0xF8	; 248
  ca:	be 4f       	sbci	r27, 0xFE	; 254
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8c 93       	st	X, r24
  d0:	19 96       	adiw	r26, 0x09	; 9
  d2:	cf 01       	movw	r24, r30
  d4:	8a 5f       	subi	r24, 0xFA	; 250
  d6:	9e 4f       	sbci	r25, 0xFE	; 254
  d8:	11 96       	adiw	r26, 0x01	; 1
  da:	9c 93       	st	X, r25
  dc:	8e 93       	st	-X, r24
  de:	12 96       	adiw	r26, 0x02	; 2
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	11 96       	adiw	r26, 0x01	; 1
  e4:	9c 93       	st	X, r25
  e6:	8e 93       	st	-X, r24
  e8:	16 97       	sbiw	r26, 0x06	; 6
  ea:	03 97       	sbiw	r24, 0x03	; 3
  ec:	11 96       	adiw	r26, 0x01	; 1
  ee:	9c 93       	st	X, r25
  f0:	8e 93       	st	-X, r24
  f2:	12 96       	adiw	r26, 0x02	; 2
  f4:	01 96       	adiw	r24, 0x01	; 1
  f6:	11 96       	adiw	r26, 0x01	; 1
  f8:	9c 93       	st	X, r25
  fa:	8e 93       	st	-X, r24
  fc:	16 97       	sbiw	r26, 0x06	; 6
  fe:	03 97       	sbiw	r24, 0x03	; 3
 100:	11 96       	adiw	r26, 0x01	; 1
 102:	9c 93       	st	X, r25
 104:	8e 93       	st	-X, r24
 106:	12 96       	adiw	r26, 0x02	; 2
 108:	ed 5f       	subi	r30, 0xFD	; 253
 10a:	fe 4f       	sbci	r31, 0xFE	; 254
 10c:	ed 93       	st	X+, r30
 10e:	fc 93       	st	X, r31
 110:	08 95       	ret

00000112 <_ZN11interpreter3incEc>:
 112:	fc 01       	movw	r30, r24
 114:	e6 0f       	add	r30, r22
 116:	f1 1d       	adc	r31, r1
 118:	91 85       	ldd	r25, Z+9	; 0x09
 11a:	9f 5f       	subi	r25, 0xFF	; 255
 11c:	91 87       	std	Z+9, r25	; 0x09
 11e:	08 95       	ret

00000120 <_ZN11interpreter3nopEv>:
 120:	00 00       	nop
 122:	08 95       	ret

00000124 <_ZN11interpreterD1Ev>:

}

// default destructor
interpreter::~interpreter()
 124:	08 95       	ret

00000126 <_ZN10interruptsC1Ev>:
interrupts::interrupts()
{
} //interrupts

void interrupts::handleinterrupt()
{
 126:	08 95       	ret

00000128 <_ZN10interruptsD1Ev>:
	{
	}
}

// default destructor
interrupts::~interrupts()
 128:	08 95       	ret

0000012a <_ZN3lcdC1Ev>:
lcd::lcd()
{
	//instructions ins = instructions();
} //lcd

 lcd::lcd(portcontroller* port)
 12a:	08 95       	ret

0000012c <_ZN3lcdD1Ev>:
 {
	
 }

// default destructor
lcd::~lcd()
 12c:	08 95       	ret

0000012e <_ZN14portcontrollerC1Ev>:
		{
			PORTD|=0b10000000;
		}
		else
		{
			PORTD&=0b01111111;
 12e:	08 95       	ret

00000130 <_ZN14portcontroller10writeportcEc>:
 130:	68 b9       	out	0x08, r22	; 8
 132:	08 95       	ret

00000134 <_ZN14portcontroller9writeddraEc>:
 134:	61 b9       	out	0x01, r22	; 1
 136:	08 95       	ret

00000138 <_ZN14portcontroller9writeddrcEc>:
 138:	67 b9       	out	0x07, r22	; 7
 13a:	08 95       	ret

0000013c <_ZN14portcontroller13digitalwriteaEhb>:
 13c:	61 30       	cpi	r22, 0x01	; 1
 13e:	31 f4       	brne	.+12     	; 0x14c <_ZN14portcontroller13digitalwriteaEhb+0x10>
 140:	44 23       	and	r20, r20
 142:	11 f0       	breq	.+4      	; 0x148 <_ZN14portcontroller13digitalwriteaEhb+0xc>
 144:	10 9a       	sbi	0x02, 0	; 2
 146:	08 95       	ret
 148:	10 98       	cbi	0x02, 0	; 2
 14a:	08 95       	ret
 14c:	62 30       	cpi	r22, 0x02	; 2
 14e:	31 f4       	brne	.+12     	; 0x15c <_ZN14portcontroller13digitalwriteaEhb+0x20>
 150:	44 23       	and	r20, r20
 152:	11 f0       	breq	.+4      	; 0x158 <_ZN14portcontroller13digitalwriteaEhb+0x1c>
 154:	11 9a       	sbi	0x02, 1	; 2
 156:	08 95       	ret
 158:	11 98       	cbi	0x02, 1	; 2
 15a:	08 95       	ret
 15c:	63 30       	cpi	r22, 0x03	; 3
 15e:	31 f4       	brne	.+12     	; 0x16c <_ZN14portcontroller13digitalwriteaEhb+0x30>
 160:	44 23       	and	r20, r20
 162:	11 f0       	breq	.+4      	; 0x168 <_ZN14portcontroller13digitalwriteaEhb+0x2c>
 164:	12 9a       	sbi	0x02, 2	; 2
 166:	08 95       	ret
 168:	12 98       	cbi	0x02, 2	; 2
 16a:	08 95       	ret
 16c:	64 30       	cpi	r22, 0x04	; 4
 16e:	31 f4       	brne	.+12     	; 0x17c <_ZN14portcontroller13digitalwriteaEhb+0x40>
 170:	44 23       	and	r20, r20
 172:	11 f0       	breq	.+4      	; 0x178 <_ZN14portcontroller13digitalwriteaEhb+0x3c>
 174:	13 9a       	sbi	0x02, 3	; 2
 176:	08 95       	ret
 178:	13 98       	cbi	0x02, 3	; 2
 17a:	08 95       	ret
 17c:	65 30       	cpi	r22, 0x05	; 5
 17e:	31 f4       	brne	.+12     	; 0x18c <_ZN14portcontroller13digitalwriteaEhb+0x50>
 180:	44 23       	and	r20, r20
 182:	11 f0       	breq	.+4      	; 0x188 <_ZN14portcontroller13digitalwriteaEhb+0x4c>
 184:	14 9a       	sbi	0x02, 4	; 2
 186:	08 95       	ret
 188:	14 98       	cbi	0x02, 4	; 2
 18a:	08 95       	ret
 18c:	66 30       	cpi	r22, 0x06	; 6
 18e:	31 f4       	brne	.+12     	; 0x19c <_ZN14portcontroller13digitalwriteaEhb+0x60>
 190:	44 23       	and	r20, r20
 192:	11 f0       	breq	.+4      	; 0x198 <_ZN14portcontroller13digitalwriteaEhb+0x5c>
 194:	15 9a       	sbi	0x02, 5	; 2
 196:	08 95       	ret
 198:	15 98       	cbi	0x02, 5	; 2
 19a:	08 95       	ret
 19c:	67 30       	cpi	r22, 0x07	; 7
 19e:	31 f4       	brne	.+12     	; 0x1ac <_ZN14portcontroller13digitalwriteaEhb+0x70>
 1a0:	44 23       	and	r20, r20
 1a2:	11 f0       	breq	.+4      	; 0x1a8 <_ZN14portcontroller13digitalwriteaEhb+0x6c>
 1a4:	16 9a       	sbi	0x02, 6	; 2
 1a6:	08 95       	ret
 1a8:	16 98       	cbi	0x02, 6	; 2
 1aa:	08 95       	ret
 1ac:	68 30       	cpi	r22, 0x08	; 8
 1ae:	29 f4       	brne	.+10     	; 0x1ba <_ZN14portcontroller13digitalwriteaEhb+0x7e>
 1b0:	44 23       	and	r20, r20
 1b2:	11 f0       	breq	.+4      	; 0x1b8 <_ZN14portcontroller13digitalwriteaEhb+0x7c>
 1b4:	17 9a       	sbi	0x02, 7	; 2
 1b6:	08 95       	ret
 1b8:	17 98       	cbi	0x02, 7	; 2
 1ba:	08 95       	ret

000001bc <_ZN14portcontroller12digitalwriteEhb>:
 1bc:	9c 01       	movw	r18, r24
 1be:	9f ef       	ldi	r25, 0xFF	; 255
 1c0:	96 0f       	add	r25, r22
 1c2:	98 30       	cpi	r25, 0x08	; 8
 1c4:	28 f4       	brcc	.+10     	; 0x1d0 <_ZN14portcontroller12digitalwriteEhb+0x14>
 1c6:	69 2f       	mov	r22, r25
 1c8:	c9 01       	movw	r24, r18
 1ca:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN14portcontroller13digitalwriteaEhb>
 1ce:	08 95       	ret
 1d0:	82 ef       	ldi	r24, 0xF2	; 242
 1d2:	86 0f       	add	r24, r22
 1d4:	88 30       	cpi	r24, 0x08	; 8
 1d6:	28 f4       	brcc	.+10     	; 0x1e2 <_ZN14portcontroller12digitalwriteEhb+0x26>
 1d8:	6d 50       	subi	r22, 0x0D	; 13
 1da:	c9 01       	movw	r24, r18
 1dc:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN14portcontroller13digitalwriteaEhb>
 1e0:	08 95       	ret
 1e2:	8a ee       	ldi	r24, 0xEA	; 234
 1e4:	86 0f       	add	r24, r22
 1e6:	88 30       	cpi	r24, 0x08	; 8
 1e8:	28 f4       	brcc	.+10     	; 0x1f4 <_ZN14portcontroller12digitalwriteEhb+0x38>
 1ea:	65 51       	subi	r22, 0x15	; 21
 1ec:	c9 01       	movw	r24, r18
 1ee:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN14portcontroller13digitalwriteaEhb>
 1f2:	08 95       	ret
 1f4:	8f ed       	ldi	r24, 0xDF	; 223
 1f6:	86 0f       	add	r24, r22
 1f8:	88 30       	cpi	r24, 0x08	; 8
 1fa:	20 f4       	brcc	.+8      	; 0x204 <_ZN14portcontroller12digitalwriteEhb+0x48>
 1fc:	60 52       	subi	r22, 0x20	; 32
 1fe:	c9 01       	movw	r24, r18
 200:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN14portcontroller13digitalwriteaEhb>
 204:	08 95       	ret

00000206 <_ZN14portcontrollerD1Ev>:
	}

}

// default destructor
portcontroller::~portcontroller()
 206:	08 95       	ret

00000208 <_ZN8shiftregC1EhhhP14portcontroller>:
	}
	port->digitalwrite(latchclkpin,true);

	port->digitalwrite(latchclkpin,false);

}
 208:	0f 93       	push	r16
 20a:	1f 93       	push	r17
 20c:	fc 01       	movw	r30, r24
 20e:	60 83       	st	Z, r22
 210:	41 83       	std	Z+1, r20	; 0x01
 212:	22 83       	std	Z+2, r18	; 0x02
 214:	14 87       	std	Z+12, r17	; 0x0c
 216:	03 87       	std	Z+11, r16	; 0x0b
 218:	13 82       	std	Z+3, r1	; 0x03
 21a:	14 82       	std	Z+4, r1	; 0x04
 21c:	15 82       	std	Z+5, r1	; 0x05
 21e:	16 82       	std	Z+6, r1	; 0x06
 220:	17 82       	std	Z+7, r1	; 0x07
 222:	10 86       	std	Z+8, r1	; 0x08
 224:	11 86       	std	Z+9, r1	; 0x09
 226:	12 86       	std	Z+10, r1	; 0x0a
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	08 95       	ret

0000022e <_ZN8shiftreg9shiftout8Eh>:
 22e:	ef 92       	push	r14
 230:	ff 92       	push	r15
 232:	0f 93       	push	r16
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	ec 01       	movw	r28, r24
 23c:	07 e0       	ldi	r16, 0x07	; 7
 23e:	10 e0       	ldi	r17, 0x00	; 0
 240:	e6 2e       	mov	r14, r22
 242:	f1 2c       	mov	r15, r1
 244:	c7 01       	movw	r24, r14
 246:	00 2e       	mov	r0, r16
 248:	02 c0       	rjmp	.+4      	; 0x24e <_ZN8shiftreg9shiftout8Eh+0x20>
 24a:	95 95       	asr	r25
 24c:	87 95       	ror	r24
 24e:	0a 94       	dec	r0
 250:	e2 f7       	brpl	.-8      	; 0x24a <_ZN8shiftreg9shiftout8Eh+0x1c>
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	39 f4       	brne	.+14     	; 0x264 <_ZN8shiftreg9shiftout8Eh+0x36>
 256:	41 e0       	ldi	r20, 0x01	; 1
 258:	68 81       	ld	r22, Y
 25a:	8b 85       	ldd	r24, Y+11	; 0x0b
 25c:	9c 85       	ldd	r25, Y+12	; 0x0c
 25e:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 262:	06 c0       	rjmp	.+12     	; 0x270 <_ZN8shiftreg9shiftout8Eh+0x42>
 264:	40 e0       	ldi	r20, 0x00	; 0
 266:	68 81       	ld	r22, Y
 268:	8b 85       	ldd	r24, Y+11	; 0x0b
 26a:	9c 85       	ldd	r25, Y+12	; 0x0c
 26c:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 270:	41 e0       	ldi	r20, 0x01	; 1
 272:	69 81       	ldd	r22, Y+1	; 0x01
 274:	8b 85       	ldd	r24, Y+11	; 0x0b
 276:	9c 85       	ldd	r25, Y+12	; 0x0c
 278:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	69 81       	ldd	r22, Y+1	; 0x01
 280:	8b 85       	ldd	r24, Y+11	; 0x0b
 282:	9c 85       	ldd	r25, Y+12	; 0x0c
 284:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 288:	01 50       	subi	r16, 0x01	; 1
 28a:	11 09       	sbc	r17, r1
 28c:	d8 f6       	brcc	.-74     	; 0x244 <_ZN8shiftreg9shiftout8Eh+0x16>
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	6a 81       	ldd	r22, Y+2	; 0x02
 292:	8b 85       	ldd	r24, Y+11	; 0x0b
 294:	9c 85       	ldd	r25, Y+12	; 0x0c
 296:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 29a:	40 e0       	ldi	r20, 0x00	; 0
 29c:	6a 81       	ldd	r22, Y+2	; 0x02
 29e:	8b 85       	ldd	r24, Y+11	; 0x0b
 2a0:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a2:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	ff 90       	pop	r15
 2b0:	ef 90       	pop	r14
 2b2:	08 95       	ret

000002b4 <_ZN8shiftreg10shiftout64Ey>:
void shiftreg::shiftout64(uint64_t data32)
{
 2b4:	7f 92       	push	r7
 2b6:	8f 92       	push	r8
 2b8:	9f 92       	push	r9
 2ba:	af 92       	push	r10
 2bc:	bf 92       	push	r11
 2be:	cf 92       	push	r12
 2c0:	df 92       	push	r13
 2c2:	ef 92       	push	r14
 2c4:	ff 92       	push	r15
 2c6:	0f 93       	push	r16
 2c8:	1f 93       	push	r17
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	ec 01       	movw	r28, r24
 2d0:	70 2e       	mov	r7, r16
 2d2:	82 2e       	mov	r8, r18
 2d4:	93 2e       	mov	r9, r19
 2d6:	a4 2e       	mov	r10, r20
 2d8:	b5 2e       	mov	r11, r21
 2da:	c6 2e       	mov	r12, r22
 2dc:	d7 2e       	mov	r13, r23
 2de:	68 94       	set
 2e0:	ee 24       	eor	r14, r14
 2e2:	e6 f8       	bld	r14, 6
 2e4:	f1 2c       	mov	r15, r1
	
	for (char i =  0; i<64;i++)
	{
		if ((data32>>(64-i))==1)
 2e6:	27 2d       	mov	r18, r7
 2e8:	31 2f       	mov	r19, r17
 2ea:	48 2d       	mov	r20, r8
 2ec:	59 2d       	mov	r21, r9
 2ee:	6a 2d       	mov	r22, r10
 2f0:	7b 2d       	mov	r23, r11
 2f2:	8c 2d       	mov	r24, r12
 2f4:	9d 2d       	mov	r25, r13
 2f6:	0e 2d       	mov	r16, r14
 2f8:	0e 94 58 05 	call	0xab0	; 0xab0 <__lshrdi3>
 2fc:	a1 e0       	ldi	r26, 0x01	; 1
 2fe:	0e 94 74 05 	call	0xae8	; 0xae8 <__cmpdi2_s8>
 302:	39 f4       	brne	.+14     	; 0x312 <_ZN8shiftreg10shiftout64Ey+0x5e>
		{
			
			port->digitalwrite(datapin,true);
 304:	41 e0       	ldi	r20, 0x01	; 1
 306:	68 81       	ld	r22, Y
 308:	8b 85       	ldd	r24, Y+11	; 0x0b
 30a:	9c 85       	ldd	r25, Y+12	; 0x0c
 30c:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 310:	06 c0       	rjmp	.+12     	; 0x31e <_ZN8shiftreg10shiftout64Ey+0x6a>
			
		}
		else
		{
			port->digitalwrite(datapin,false);
 312:	40 e0       	ldi	r20, 0x00	; 0
 314:	68 81       	ld	r22, Y
 316:	8b 85       	ldd	r24, Y+11	; 0x0b
 318:	9c 85       	ldd	r25, Y+12	; 0x0c
 31a:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
		}
		port->digitalwrite(clockpin,true);
 31e:	41 e0       	ldi	r20, 0x01	; 1
 320:	69 81       	ldd	r22, Y+1	; 0x01
 322:	8b 85       	ldd	r24, Y+11	; 0x0b
 324:	9c 85       	ldd	r25, Y+12	; 0x0c
 326:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
		port->digitalwrite(clockpin,false);
 32a:	40 e0       	ldi	r20, 0x00	; 0
 32c:	69 81       	ldd	r22, Y+1	; 0x01
 32e:	8b 85       	ldd	r24, Y+11	; 0x0b
 330:	9c 85       	ldd	r25, Y+12	; 0x0c
 332:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	e8 1a       	sub	r14, r24
 33a:	f1 08       	sbc	r15, r1

}
void shiftreg::shiftout64(uint64_t data32)
{
	
	for (char i =  0; i<64;i++)
 33c:	a1 f6       	brne	.-88     	; 0x2e6 <_ZN8shiftreg10shiftout64Ey+0x32>
		}
		port->digitalwrite(clockpin,true);
		port->digitalwrite(clockpin,false);
		
	}
	port->digitalwrite(latchclkpin,true);
 33e:	41 e0       	ldi	r20, 0x01	; 1
 340:	6a 81       	ldd	r22, Y+2	; 0x02
 342:	8b 85       	ldd	r24, Y+11	; 0x0b
 344:	9c 85       	ldd	r25, Y+12	; 0x0c
 346:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>

	port->digitalwrite(latchclkpin,false);
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	6a 81       	ldd	r22, Y+2	; 0x02
 34e:	8b 85       	ldd	r24, Y+11	; 0x0b
 350:	9c 85       	ldd	r25, Y+12	; 0x0c
 352:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>

}
 356:	df 91       	pop	r29
 358:	cf 91       	pop	r28
 35a:	1f 91       	pop	r17
 35c:	0f 91       	pop	r16
 35e:	ff 90       	pop	r15
 360:	ef 90       	pop	r14
 362:	df 90       	pop	r13
 364:	cf 90       	pop	r12
 366:	bf 90       	pop	r11
 368:	af 90       	pop	r10
 36a:	9f 90       	pop	r9
 36c:	8f 90       	pop	r8
 36e:	7f 90       	pop	r7
 370:	08 95       	ret

00000372 <_ZN8shiftregD1Ev>:
// default destructor
shiftreg::~shiftreg()
 372:	08 95       	ret

00000374 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>:
// default constructor
eeprom::eeprom()
{
} //eeprom

 eeprom::eeprom(portcontroller* portptr,shiftreg* addrptr,shiftreg* dataregister,uint8_t wepin,uint64_t address2)
 374:	8f 92       	push	r8
 376:	9f 92       	push	r9
 378:	af 92       	push	r10
 37a:	bf 92       	push	r11
 37c:	cf 92       	push	r12
 37e:	df 92       	push	r13
 380:	ef 92       	push	r14
 382:	ff 92       	push	r15
 384:	0f 93       	push	r16
 386:	cf 93       	push	r28
 388:	df 93       	push	r29
 38a:	cd b7       	in	r28, 0x3d	; 61
 38c:	de b7       	in	r29, 0x3e	; 62
 38e:	fc 01       	movw	r30, r24
 390:	cb 01       	movw	r24, r22
 392:	60 2f       	mov	r22, r16
 {
	 	this->portptr=portptr;
 394:	94 83       	std	Z+4, r25	; 0x04
 396:	83 83       	std	Z+3, r24	; 0x03
	 	this->addrptr=addrptr;
 398:	56 83       	std	Z+6, r21	; 0x06
 39a:	45 83       	std	Z+5, r20	; 0x05
		this->dataptr=dataregister;
 39c:	30 87       	std	Z+8, r19	; 0x08
 39e:	27 83       	std	Z+7, r18	; 0x07
	 	this->wepin=wepin;
 3a0:	02 83       	std	Z+2, r16	; 0x02
		this->address= address2;
 3a2:	81 86       	std	Z+9, r8	; 0x09
 3a4:	92 86       	std	Z+10, r9	; 0x0a
 3a6:	a3 86       	std	Z+11, r10	; 0x0b
 3a8:	b4 86       	std	Z+12, r11	; 0x0c
 3aa:	c5 86       	std	Z+13, r12	; 0x0d
 3ac:	d6 86       	std	Z+14, r13	; 0x0e
 3ae:	e7 86       	std	Z+15, r14	; 0x0f
 3b0:	f0 8a       	std	Z+16, r15	; 0x10
		this->offset = 0;
 3b2:	11 82       	std	Z+1, r1	; 0x01
 3b4:	10 82       	st	Z, r1
	 	portptr->digitalwrite(wepin,true);
 3b6:	41 e0       	ldi	r20, 0x01	; 1
 3b8:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>

 }
 3bc:	df 91       	pop	r29
 3be:	cf 91       	pop	r28
 3c0:	0f 91       	pop	r16
 3c2:	ff 90       	pop	r15
 3c4:	ef 90       	pop	r14
 3c6:	df 90       	pop	r13
 3c8:	cf 90       	pop	r12
 3ca:	bf 90       	pop	r11
 3cc:	af 90       	pop	r10
 3ce:	9f 90       	pop	r9
 3d0:	8f 90       	pop	r8
 3d2:	08 95       	ret

000003d4 <_ZN6eepromD1Ev>:

// default destructor
eeprom::~eeprom()
 3d4:	08 95       	ret

000003d6 <_ZN3romC1EP14portcontrollerP8shiftregy>:
}

uint16_t rom::getaddr()
{
	return address;
}
 3d6:	cf 92       	push	r12
 3d8:	df 92       	push	r13
 3da:	ef 92       	push	r14
 3dc:	ff 92       	push	r15
 3de:	0f 93       	push	r16
 3e0:	1f 93       	push	r17
 3e2:	fc 01       	movw	r30, r24
 3e4:	71 8b       	std	Z+17, r23	; 0x11
 3e6:	60 8b       	std	Z+16, r22	; 0x10
 3e8:	53 8b       	std	Z+19, r21	; 0x13
 3ea:	42 8b       	std	Z+18, r20	; 0x12
 3ec:	c0 86       	std	Z+8, r12	; 0x08
 3ee:	d1 86       	std	Z+9, r13	; 0x09
 3f0:	e2 86       	std	Z+10, r14	; 0x0a
 3f2:	f3 86       	std	Z+11, r15	; 0x0b
 3f4:	04 87       	std	Z+12, r16	; 0x0c
 3f6:	15 87       	std	Z+13, r17	; 0x0d
 3f8:	26 87       	std	Z+14, r18	; 0x0e
 3fa:	37 87       	std	Z+15, r19	; 0x0f
 3fc:	10 82       	st	Z, r1
 3fe:	11 82       	std	Z+1, r1	; 0x01
 400:	12 82       	std	Z+2, r1	; 0x02
 402:	13 82       	std	Z+3, r1	; 0x03
 404:	14 82       	std	Z+4, r1	; 0x04
 406:	15 82       	std	Z+5, r1	; 0x05
 408:	16 82       	std	Z+6, r1	; 0x06
 40a:	17 82       	std	Z+7, r1	; 0x07
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	ff 90       	pop	r15
 412:	ef 90       	pop	r14
 414:	df 90       	pop	r13
 416:	cf 90       	pop	r12
 418:	08 95       	ret

0000041a <_ZN3romD1Ev>:

// default destructor
rom::~rom()
 41a:	08 95       	ret

0000041c <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>:
		dataptr->shiftout8(data);
	}
	portptr->digitalwrite(wepin,false);
	_delay_ms(1);
	portptr->digitalwrite(wepin,true);
}
 41c:	8f 92       	push	r8
 41e:	9f 92       	push	r9
 420:	af 92       	push	r10
 422:	bf 92       	push	r11
 424:	cf 92       	push	r12
 426:	df 92       	push	r13
 428:	ef 92       	push	r14
 42a:	ff 92       	push	r15
 42c:	0f 93       	push	r16
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	cd b7       	in	r28, 0x3d	; 61
 434:	de b7       	in	r29, 0x3e	; 62
 436:	fc 01       	movw	r30, r24
 438:	cb 01       	movw	r24, r22
 43a:	60 2f       	mov	r22, r16
 43c:	93 83       	std	Z+3, r25	; 0x03
 43e:	82 83       	std	Z+2, r24	; 0x02
 440:	55 83       	std	Z+5, r21	; 0x05
 442:	44 83       	std	Z+4, r20	; 0x04
 444:	37 83       	std	Z+7, r19	; 0x07
 446:	26 83       	std	Z+6, r18	; 0x06
 448:	01 83       	std	Z+1, r16	; 0x01
 44a:	80 86       	std	Z+8, r8	; 0x08
 44c:	91 86       	std	Z+9, r9	; 0x09
 44e:	a2 86       	std	Z+10, r10	; 0x0a
 450:	b3 86       	std	Z+11, r11	; 0x0b
 452:	c4 86       	std	Z+12, r12	; 0x0c
 454:	d5 86       	std	Z+13, r13	; 0x0d
 456:	e6 86       	std	Z+14, r14	; 0x0e
 458:	f7 86       	std	Z+15, r15	; 0x0f
 45a:	10 82       	st	Z, r1
 45c:	41 e0       	ldi	r20, 0x01	; 1
 45e:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
 462:	df 91       	pop	r29
 464:	cf 91       	pop	r28
 466:	0f 91       	pop	r16
 468:	ff 90       	pop	r15
 46a:	ef 90       	pop	r14
 46c:	df 90       	pop	r13
 46e:	cf 90       	pop	r12
 470:	bf 90       	pop	r11
 472:	af 90       	pop	r10
 474:	9f 90       	pop	r9
 476:	8f 90       	pop	r8
 478:	08 95       	ret

0000047a <_ZN3ram5writeEyc>:
void ram::write(uint64_t address,char data)
{
 47a:	ef 92       	push	r14
 47c:	0f 93       	push	r16
 47e:	1f 93       	push	r17
 480:	cf 93       	push	r28
 482:	df 93       	push	r29
 484:	ec 01       	movw	r28, r24
	addrptr->shiftout64(address);
 486:	8c 81       	ldd	r24, Y+4	; 0x04
 488:	9d 81       	ldd	r25, Y+5	; 0x05
 48a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_ZN8shiftreg10shiftout64Ey>
	if(dataptr == NULL)
 48e:	8e 81       	ldd	r24, Y+6	; 0x06
 490:	9f 81       	ldd	r25, Y+7	; 0x07
 492:	00 97       	sbiw	r24, 0x00	; 0
 494:	31 f4       	brne	.+12     	; 0x4a2 <_ZN3ram5writeEyc+0x28>
	{
		portptr->writeportc(data);
 496:	6e 2d       	mov	r22, r14
 498:	8a 81       	ldd	r24, Y+2	; 0x02
 49a:	9b 81       	ldd	r25, Y+3	; 0x03
 49c:	0e 94 98 00 	call	0x130	; 0x130 <_ZN14portcontroller10writeportcEc>
 4a0:	03 c0       	rjmp	.+6      	; 0x4a8 <_ZN3ram5writeEyc+0x2e>
	}
	else
	{
		dataptr->shiftout8(data);
 4a2:	6e 2d       	mov	r22, r14
 4a4:	0e 94 17 01 	call	0x22e	; 0x22e <_ZN8shiftreg9shiftout8Eh>
	}
	portptr->digitalwrite(wepin,false);
 4a8:	40 e0       	ldi	r20, 0x00	; 0
 4aa:	69 81       	ldd	r22, Y+1	; 0x01
 4ac:	8a 81       	ldd	r24, Y+2	; 0x02
 4ae:	9b 81       	ldd	r25, Y+3	; 0x03
 4b0:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4b4:	89 ef       	ldi	r24, 0xF9	; 249
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <_ZN3ram5writeEyc+0x3e>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <_ZN3ram5writeEyc+0x44>
 4be:	00 00       	nop
	_delay_ms(1);
	portptr->digitalwrite(wepin,true);
 4c0:	41 e0       	ldi	r20, 0x01	; 1
 4c2:	69 81       	ldd	r22, Y+1	; 0x01
 4c4:	8a 81       	ldd	r24, Y+2	; 0x02
 4c6:	9b 81       	ldd	r25, Y+3	; 0x03
 4c8:	0e 94 de 00 	call	0x1bc	; 0x1bc <_ZN14portcontroller12digitalwriteEhb>
}
 4cc:	df 91       	pop	r29
 4ce:	cf 91       	pop	r28
 4d0:	1f 91       	pop	r17
 4d2:	0f 91       	pop	r16
 4d4:	ef 90       	pop	r14
 4d6:	08 95       	ret

000004d8 <_ZN3ramD1Ev>:
{
	return address;
}
*/
// default destructor
ram::~ram()
 4d8:	08 95       	ret

000004da <_ZN4VramC1EP14portcontrollerP8shiftregS3_hy>:
{
	for (int i =0; i<8 ; i++)
	{
		write(this->custom_char_memory_base+i,customchar[i]);	
	}
}
 4da:	8f 92       	push	r8
 4dc:	9f 92       	push	r9
 4de:	af 92       	push	r10
 4e0:	bf 92       	push	r11
 4e2:	cf 92       	push	r12
 4e4:	df 92       	push	r13
 4e6:	ef 92       	push	r14
 4e8:	ff 92       	push	r15
 4ea:	0f 93       	push	r16
 4ec:	cf 93       	push	r28
 4ee:	df 93       	push	r29
 4f0:	cd b7       	in	r28, 0x3d	; 61
 4f2:	de b7       	in	r29, 0x3e	; 62
 4f4:	0e 94 0e 02 	call	0x41c	; 0x41c <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	0f 91       	pop	r16
 4fe:	ff 90       	pop	r15
 500:	ef 90       	pop	r14
 502:	df 90       	pop	r13
 504:	cf 90       	pop	r12
 506:	bf 90       	pop	r11
 508:	af 90       	pop	r10
 50a:	9f 90       	pop	r9
 50c:	8f 90       	pop	r8
 50e:	08 95       	ret

00000510 <_ZN4VramD1Ev>:

// default destructor
Vram::~Vram()
 510:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
 514:	08 95       	ret

00000516 <_Z11storememoryyc>:
{
	
	
}
void storememory(uint64_t address, char out)
{
 516:	6f 92       	push	r6
 518:	7f 92       	push	r7
 51a:	8f 92       	push	r8
 51c:	9f 92       	push	r9
 51e:	af 92       	push	r10
 520:	bf 92       	push	r11
 522:	cf 92       	push	r12
 524:	df 92       	push	r13
 526:	ef 92       	push	r14
 528:	ff 92       	push	r15
 52a:	0f 93       	push	r16
 52c:	1f 93       	push	r17
 52e:	cf 93       	push	r28
 530:	df 93       	push	r29
 532:	c2 2e       	mov	r12, r18
 534:	d3 2e       	mov	r13, r19
 536:	f4 2e       	mov	r15, r20
 538:	d5 2f       	mov	r29, r21
 53a:	c6 2f       	mov	r28, r22
 53c:	b7 2f       	mov	r27, r23
 53e:	f8 2f       	mov	r31, r24
 540:	e9 2f       	mov	r30, r25
 542:	e0 2e       	mov	r14, r16
	if (address>=0x0 && address<=0x3fff)
 544:	2f 3f       	cpi	r18, 0xFF	; 255
 546:	0f e3       	ldi	r16, 0x3F	; 63
 548:	30 07       	cpc	r19, r16
 54a:	41 05       	cpc	r20, r1
 54c:	51 05       	cpc	r21, r1
 54e:	61 05       	cpc	r22, r1
 550:	71 05       	cpc	r23, r1
 552:	81 05       	cpc	r24, r1
 554:	91 05       	cpc	r25, r1
 556:	09 f0       	breq	.+2      	; 0x55a <_Z11storememoryyc+0x44>
 558:	68 f4       	brcc	.+26     	; 0x574 <_Z11storememoryyc+0x5e>
	{
		bank0.write(address,out);
 55a:	02 2f       	mov	r16, r18
 55c:	13 2f       	mov	r17, r19
 55e:	24 2f       	mov	r18, r20
 560:	35 2f       	mov	r19, r21
 562:	46 2f       	mov	r20, r22
 564:	57 2f       	mov	r21, r23
 566:	68 2f       	mov	r22, r24
 568:	79 2f       	mov	r23, r25
 56a:	86 e7       	ldi	r24, 0x76	; 118
 56c:	93 e0       	ldi	r25, 0x03	; 3
 56e:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3ram5writeEyc>
 572:	9c c0       	rjmp	.+312    	; 0x6ac <_Z11storememoryyc+0x196>
	}
	else if (address>=0x4000 && address<=0x7fff)
 574:	30 54       	subi	r19, 0x40	; 64
 576:	41 09       	sbc	r20, r1
 578:	51 09       	sbc	r21, r1
 57a:	61 09       	sbc	r22, r1
 57c:	71 09       	sbc	r23, r1
 57e:	81 09       	sbc	r24, r1
 580:	91 09       	sbc	r25, r1
 582:	13 2f       	mov	r17, r19
 584:	2f 3f       	cpi	r18, 0xFF	; 255
 586:	0f e3       	ldi	r16, 0x3F	; 63
 588:	30 07       	cpc	r19, r16
 58a:	41 05       	cpc	r20, r1
 58c:	51 05       	cpc	r21, r1
 58e:	61 05       	cpc	r22, r1
 590:	71 05       	cpc	r23, r1
 592:	81 05       	cpc	r24, r1
 594:	91 05       	cpc	r25, r1
 596:	09 f0       	breq	.+2      	; 0x59a <_Z11storememoryyc+0x84>
 598:	60 f4       	brcc	.+24     	; 0x5b2 <_Z11storememoryyc+0x9c>
	{
		bank1.write(address-0x4000,out);
 59a:	02 2f       	mov	r16, r18
 59c:	24 2f       	mov	r18, r20
 59e:	35 2f       	mov	r19, r21
 5a0:	46 2f       	mov	r20, r22
 5a2:	57 2f       	mov	r21, r23
 5a4:	68 2f       	mov	r22, r24
 5a6:	79 2f       	mov	r23, r25
 5a8:	86 e6       	ldi	r24, 0x66	; 102
 5aa:	93 e0       	ldi	r25, 0x03	; 3
 5ac:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3ram5writeEyc>
 5b0:	7d c0       	rjmp	.+250    	; 0x6ac <_Z11storememoryyc+0x196>
	} 
	else if(address>=0x8000 && address<=0xbfff)
 5b2:	2c 2d       	mov	r18, r12
 5b4:	3d 2d       	mov	r19, r13
 5b6:	4f 2d       	mov	r20, r15
 5b8:	5d 2f       	mov	r21, r29
 5ba:	6c 2f       	mov	r22, r28
 5bc:	7b 2f       	mov	r23, r27
 5be:	8f 2f       	mov	r24, r31
 5c0:	9e 2f       	mov	r25, r30
 5c2:	30 58       	subi	r19, 0x80	; 128
 5c4:	41 09       	sbc	r20, r1
 5c6:	51 09       	sbc	r21, r1
 5c8:	61 09       	sbc	r22, r1
 5ca:	71 09       	sbc	r23, r1
 5cc:	81 09       	sbc	r24, r1
 5ce:	91 09       	sbc	r25, r1
 5d0:	13 2f       	mov	r17, r19
 5d2:	2f 3f       	cpi	r18, 0xFF	; 255
 5d4:	0f e3       	ldi	r16, 0x3F	; 63
 5d6:	30 07       	cpc	r19, r16
 5d8:	41 05       	cpc	r20, r1
 5da:	51 05       	cpc	r21, r1
 5dc:	61 05       	cpc	r22, r1
 5de:	71 05       	cpc	r23, r1
 5e0:	81 05       	cpc	r24, r1
 5e2:	91 05       	cpc	r25, r1
 5e4:	09 f0       	breq	.+2      	; 0x5e8 <_Z11storememoryyc+0xd2>
 5e6:	60 f4       	brcc	.+24     	; 0x600 <_Z11storememoryyc+0xea>
	{
		bank2.write(address-0x8000,out);
 5e8:	02 2f       	mov	r16, r18
 5ea:	24 2f       	mov	r18, r20
 5ec:	35 2f       	mov	r19, r21
 5ee:	46 2f       	mov	r20, r22
 5f0:	57 2f       	mov	r21, r23
 5f2:	68 2f       	mov	r22, r24
 5f4:	79 2f       	mov	r23, r25
 5f6:	86 e5       	ldi	r24, 0x56	; 86
 5f8:	93 e0       	ldi	r25, 0x03	; 3
 5fa:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3ram5writeEyc>
 5fe:	56 c0       	rjmp	.+172    	; 0x6ac <_Z11storememoryyc+0x196>
	}
	else if(address>=0xC000 && address<=0xffff)
 600:	2c 2d       	mov	r18, r12
 602:	3d 2d       	mov	r19, r13
 604:	4f 2d       	mov	r20, r15
 606:	5d 2f       	mov	r21, r29
 608:	6c 2f       	mov	r22, r28
 60a:	7b 2f       	mov	r23, r27
 60c:	8f 2f       	mov	r24, r31
 60e:	9e 2f       	mov	r25, r30
 610:	30 5c       	subi	r19, 0xC0	; 192
 612:	41 09       	sbc	r20, r1
 614:	51 09       	sbc	r21, r1
 616:	61 09       	sbc	r22, r1
 618:	71 09       	sbc	r23, r1
 61a:	81 09       	sbc	r24, r1
 61c:	91 09       	sbc	r25, r1
 61e:	13 2f       	mov	r17, r19
 620:	2f 3f       	cpi	r18, 0xFF	; 255
 622:	0f e3       	ldi	r16, 0x3F	; 63
 624:	30 07       	cpc	r19, r16
 626:	41 05       	cpc	r20, r1
 628:	51 05       	cpc	r21, r1
 62a:	61 05       	cpc	r22, r1
 62c:	71 05       	cpc	r23, r1
 62e:	81 05       	cpc	r24, r1
 630:	91 05       	cpc	r25, r1
 632:	09 f0       	breq	.+2      	; 0x636 <_Z11storememoryyc+0x120>
 634:	60 f4       	brcc	.+24     	; 0x64e <_Z11storememoryyc+0x138>
	{
		bank3.write(address-0xC000,out);
 636:	02 2f       	mov	r16, r18
 638:	24 2f       	mov	r18, r20
 63a:	35 2f       	mov	r19, r21
 63c:	46 2f       	mov	r20, r22
 63e:	57 2f       	mov	r21, r23
 640:	68 2f       	mov	r22, r24
 642:	79 2f       	mov	r23, r25
 644:	86 e4       	ldi	r24, 0x46	; 70
 646:	93 e0       	ldi	r25, 0x03	; 3
 648:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3ram5writeEyc>
 64c:	2f c0       	rjmp	.+94     	; 0x6ac <_Z11storememoryyc+0x196>
	}
	else if(address>=0xffff && address<=0x10000)
 64e:	2c 2d       	mov	r18, r12
 650:	3d 2d       	mov	r19, r13
 652:	4f 2d       	mov	r20, r15
 654:	5d 2f       	mov	r21, r29
 656:	6c 2f       	mov	r22, r28
 658:	7b 2f       	mov	r23, r27
 65a:	8f 2f       	mov	r24, r31
 65c:	9e 2f       	mov	r25, r30
 65e:	2f 5f       	subi	r18, 0xFF	; 255
 660:	3f 4f       	sbci	r19, 0xFF	; 255
 662:	41 09       	sbc	r20, r1
 664:	51 09       	sbc	r21, r1
 666:	61 09       	sbc	r22, r1
 668:	71 09       	sbc	r23, r1
 66a:	81 09       	sbc	r24, r1
 66c:	91 09       	sbc	r25, r1
 66e:	a1 e0       	ldi	r26, 0x01	; 1
 670:	0e 94 74 05 	call	0xae8	; 0xae8 <__cmpdi2_s8>
 674:	09 f0       	breq	.+2      	; 0x678 <_Z11storememoryyc+0x162>
 676:	d0 f4       	brcc	.+52     	; 0x6ac <_Z11storememoryyc+0x196>
	{
		bank4.write(address-0x10000,out);
 678:	2c 2d       	mov	r18, r12
 67a:	3d 2d       	mov	r19, r13
 67c:	4f 2d       	mov	r20, r15
 67e:	5d 2f       	mov	r21, r29
 680:	6c 2f       	mov	r22, r28
 682:	7b 2f       	mov	r23, r27
 684:	8f 2f       	mov	r24, r31
 686:	9e 2f       	mov	r25, r30
 688:	41 50       	subi	r20, 0x01	; 1
 68a:	51 09       	sbc	r21, r1
 68c:	61 09       	sbc	r22, r1
 68e:	71 09       	sbc	r23, r1
 690:	81 09       	sbc	r24, r1
 692:	91 09       	sbc	r25, r1
 694:	02 2f       	mov	r16, r18
 696:	13 2f       	mov	r17, r19
 698:	24 2f       	mov	r18, r20
 69a:	35 2f       	mov	r19, r21
 69c:	46 2f       	mov	r20, r22
 69e:	57 2f       	mov	r21, r23
 6a0:	68 2f       	mov	r22, r24
 6a2:	79 2f       	mov	r23, r25
 6a4:	86 e3       	ldi	r24, 0x36	; 54
 6a6:	93 e0       	ldi	r25, 0x03	; 3
 6a8:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3ram5writeEyc>
	}
	
	
}
 6ac:	df 91       	pop	r29
 6ae:	cf 91       	pop	r28
 6b0:	1f 91       	pop	r17
 6b2:	0f 91       	pop	r16
 6b4:	ff 90       	pop	r15
 6b6:	ef 90       	pop	r14
 6b8:	df 90       	pop	r13
 6ba:	cf 90       	pop	r12
 6bc:	bf 90       	pop	r11
 6be:	af 90       	pop	r10
 6c0:	9f 90       	pop	r9
 6c2:	8f 90       	pop	r8
 6c4:	7f 90       	pop	r7
 6c6:	6f 90       	pop	r6
 6c8:	08 95       	ret

000006ca <main>:
int main(void)
{
	port.writeddra(0xff);
 6ca:	6f ef       	ldi	r22, 0xFF	; 255
 6cc:	80 ea       	ldi	r24, 0xA0	; 160
 6ce:	93 e0       	ldi	r25, 0x03	; 3
 6d0:	0e 94 9a 00 	call	0x134	; 0x134 <_ZN14portcontroller9writeddraEc>
	port.writeddrc(0xff);
 6d4:	6f ef       	ldi	r22, 0xFF	; 255
 6d6:	80 ea       	ldi	r24, 0xA0	; 160
 6d8:	93 e0       	ldi	r25, 0x03	; 3
 6da:	0e 94 9c 00 	call	0x138	; 0x138 <_ZN14portcontroller9writeddrcEc>
	interpret.nop();
 6de:	82 e0       	ldi	r24, 0x02	; 2
 6e0:	91 e0       	ldi	r25, 0x01	; 1
 6e2:	0e 94 90 00 	call	0x120	; 0x120 <_ZN11interpreter3nopEv>
	//bank1.setaddress(0);
    /* Replace with your application code */
    while (1) 
    {
		
		interpret.inc((char)9);
 6e6:	69 e0       	ldi	r22, 0x09	; 9
 6e8:	82 e0       	ldi	r24, 0x02	; 2
 6ea:	91 e0       	ldi	r25, 0x01	; 1
 6ec:	0e 94 89 00 	call	0x112	; 0x112 <_ZN11interpreter3incEc>
		uint16_t addresstoinc;
		addresstoinc = 1<<8;
		if (PINB>0)
 6f0:	83 b1       	in	r24, 0x03	; 3
 6f2:	81 11       	cpse	r24, r1
		{
			if (PINB)
 6f4:	83 b1       	in	r24, 0x03	; 3
			{
				
			}
		}
		storememory(0x0000,0xff);
 6f6:	0f ef       	ldi	r16, 0xFF	; 255
 6f8:	20 e0       	ldi	r18, 0x00	; 0
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	40 e0       	ldi	r20, 0x00	; 0
 6fe:	50 e0       	ldi	r21, 0x00	; 0
 700:	60 e0       	ldi	r22, 0x00	; 0
 702:	70 e0       	ldi	r23, 0x00	; 0
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	0e 94 8b 02 	call	0x516	; 0x516 <_Z11storememoryyc>
	port.writeddrc(0xff);
	interpret.nop();
	
	//bank1.setaddress(0);
    /* Replace with your application code */
    while (1) 
 70c:	ec cf       	rjmp	.-40     	; 0x6e6 <main+0x1c>

0000070e <_GLOBAL__sub_I_gpvariables>:
				
			}
		}
		storememory(0x0000,0xff);
	}
 70e:	8f 92       	push	r8
 710:	9f 92       	push	r9
 712:	af 92       	push	r10
 714:	bf 92       	push	r11
 716:	cf 92       	push	r12
 718:	df 92       	push	r13
 71a:	ef 92       	push	r14
 71c:	ff 92       	push	r15
 71e:	0f 93       	push	r16
 720:	1f 93       	push	r17
 722:	cf 93       	push	r28
 724:	df 93       	push	r29
 726:	cd b7       	in	r28, 0x3d	; 61
 728:	de b7       	in	r29, 0x3e	; 62
 72a:	63 97       	sbiw	r28, 0x13	; 19
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	de bf       	out	0x3e, r29	; 62
 732:	0f be       	out	0x3f, r0	; 63
 734:	cd bf       	out	0x3d, r28	; 61
	a0-a12 adress a13-a15 
	
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
 736:	80 ea       	ldi	r24, 0xA0	; 160
 738:	93 e0       	ldi	r25, 0x03	; 3
 73a:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN14portcontrollerC1Ev>
static shiftreg addreg=shiftreg(40,39,38,&port);
 73e:	00 ea       	ldi	r16, 0xA0	; 160
 740:	13 e0       	ldi	r17, 0x03	; 3
 742:	26 e2       	ldi	r18, 0x26	; 38
 744:	47 e2       	ldi	r20, 0x27	; 39
 746:	68 e2       	ldi	r22, 0x28	; 40
 748:	83 e9       	ldi	r24, 0x93	; 147
 74a:	93 e0       	ldi	r25, 0x03	; 3
 74c:	0e 94 04 01 	call	0x208	; 0x208 <_ZN8shiftregC1EhhhP14portcontroller>
static shiftreg datareg=shiftreg(37,36,35,&port);
 750:	23 e2       	ldi	r18, 0x23	; 35
 752:	44 e2       	ldi	r20, 0x24	; 36
 754:	65 e2       	ldi	r22, 0x25	; 37
 756:	86 e8       	ldi	r24, 0x86	; 134
 758:	93 e0       	ldi	r25, 0x03	; 3
 75a:	0e 94 04 01 	call	0x208	; 0x208 <_ZN8shiftregC1EhhhP14portcontroller>
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
 75e:	81 2c       	mov	r8, r1
 760:	91 2c       	mov	r9, r1
 762:	a1 2c       	mov	r10, r1
 764:	b1 2c       	mov	r11, r1
 766:	c1 2c       	mov	r12, r1
 768:	d1 2c       	mov	r13, r1
 76a:	e1 2c       	mov	r14, r1
 76c:	f1 2c       	mov	r15, r1
 76e:	02 e2       	ldi	r16, 0x22	; 34
 770:	26 e8       	ldi	r18, 0x86	; 134
 772:	33 e0       	ldi	r19, 0x03	; 3
 774:	43 e9       	ldi	r20, 0x93	; 147
 776:	53 e0       	ldi	r21, 0x03	; 3
 778:	60 ea       	ldi	r22, 0xA0	; 160
 77a:	73 e0       	ldi	r23, 0x03	; 3
 77c:	86 e7       	ldi	r24, 0x76	; 118
 77e:	93 e0       	ldi	r25, 0x03	; 3
 780:	0e 94 0e 02 	call	0x41c	; 0x41c <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
 784:	68 94       	set
 786:	99 24       	eor	r9, r9
 788:	96 f8       	bld	r9, 6
 78a:	26 e8       	ldi	r18, 0x86	; 134
 78c:	33 e0       	ldi	r19, 0x03	; 3
 78e:	43 e9       	ldi	r20, 0x93	; 147
 790:	53 e0       	ldi	r21, 0x03	; 3
 792:	60 ea       	ldi	r22, 0xA0	; 160
 794:	73 e0       	ldi	r23, 0x03	; 3
 796:	86 e6       	ldi	r24, 0x66	; 102
 798:	93 e0       	ldi	r25, 0x03	; 3
 79a:	0e 94 0e 02 	call	0x41c	; 0x41c <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
 79e:	68 94       	set
 7a0:	99 24       	eor	r9, r9
 7a2:	97 f8       	bld	r9, 7
 7a4:	26 e8       	ldi	r18, 0x86	; 134
 7a6:	33 e0       	ldi	r19, 0x03	; 3
 7a8:	43 e9       	ldi	r20, 0x93	; 147
 7aa:	53 e0       	ldi	r21, 0x03	; 3
 7ac:	60 ea       	ldi	r22, 0xA0	; 160
 7ae:	73 e0       	ldi	r23, 0x03	; 3
 7b0:	86 e5       	ldi	r24, 0x56	; 86
 7b2:	93 e0       	ldi	r25, 0x03	; 3
 7b4:	0e 94 0e 02 	call	0x41c	; 0x41c <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
 7b8:	0f 2e       	mov	r0, r31
 7ba:	f0 ec       	ldi	r31, 0xC0	; 192
 7bc:	9f 2e       	mov	r9, r31
 7be:	f0 2d       	mov	r31, r0
 7c0:	26 e8       	ldi	r18, 0x86	; 134
 7c2:	33 e0       	ldi	r19, 0x03	; 3
 7c4:	43 e9       	ldi	r20, 0x93	; 147
 7c6:	53 e0       	ldi	r21, 0x03	; 3
 7c8:	60 ea       	ldi	r22, 0xA0	; 160
 7ca:	73 e0       	ldi	r23, 0x03	; 3
 7cc:	86 e4       	ldi	r24, 0x46	; 70
 7ce:	93 e0       	ldi	r25, 0x03	; 3
 7d0:	0e 94 0e 02 	call	0x41c	; 0x41c <_ZN3ramC1EP14portcontrollerP8shiftregS3_hy>
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram
 7d4:	91 2c       	mov	r9, r1
 7d6:	aa 24       	eor	r10, r10
 7d8:	a3 94       	inc	r10
 7da:	26 e8       	ldi	r18, 0x86	; 134
 7dc:	33 e0       	ldi	r19, 0x03	; 3
 7de:	43 e9       	ldi	r20, 0x93	; 147
 7e0:	53 e0       	ldi	r21, 0x03	; 3
 7e2:	60 ea       	ldi	r22, 0xA0	; 160
 7e4:	73 e0       	ldi	r23, 0x03	; 3
 7e6:	ce 01       	movw	r24, r28
 7e8:	01 96       	adiw	r24, 0x01	; 1
 7ea:	0e 94 6d 02 	call	0x4da	; 0x4da <_ZN4VramC1EP14portcontrollerP8shiftregS3_hy>
 7ee:	80 e1       	ldi	r24, 0x10	; 16
 7f0:	fe 01       	movw	r30, r28
 7f2:	31 96       	adiw	r30, 0x01	; 1
 7f4:	a6 e3       	ldi	r26, 0x36	; 54
 7f6:	b3 e0       	ldi	r27, 0x03	; 3
 7f8:	01 90       	ld	r0, Z+
 7fa:	0d 92       	st	X+, r0
 7fc:	8a 95       	dec	r24
 7fe:	e1 f7       	brne	.-8      	; 0x7f8 <_GLOBAL__sub_I_gpvariables+0xea>
 800:	ce 01       	movw	r24, r28
 802:	01 96       	adiw	r24, 0x01	; 1
 804:	0e 94 88 02 	call	0x510	; 0x510 <_ZN4VramD1Ev>

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};
 808:	80 e1       	ldi	r24, 0x10	; 16
 80a:	e6 e7       	ldi	r30, 0x76	; 118
 80c:	f3 e0       	ldi	r31, 0x03	; 3
 80e:	a6 ee       	ldi	r26, 0xE6	; 230
 810:	b2 e0       	ldi	r27, 0x02	; 2
 812:	01 90       	ld	r0, Z+
 814:	0d 92       	st	X+, r0
 816:	8a 95       	dec	r24
 818:	e1 f7       	brne	.-8      	; 0x812 <_GLOBAL__sub_I_gpvariables+0x104>
 81a:	80 e1       	ldi	r24, 0x10	; 16
 81c:	e6 e6       	ldi	r30, 0x66	; 102
 81e:	f3 e0       	ldi	r31, 0x03	; 3
 820:	a6 ef       	ldi	r26, 0xF6	; 246
 822:	b2 e0       	ldi	r27, 0x02	; 2
 824:	01 90       	ld	r0, Z+
 826:	0d 92       	st	X+, r0
 828:	8a 95       	dec	r24
 82a:	e1 f7       	brne	.-8      	; 0x824 <_GLOBAL__sub_I_gpvariables+0x116>
 82c:	80 e1       	ldi	r24, 0x10	; 16
 82e:	e6 e5       	ldi	r30, 0x56	; 86
 830:	f3 e0       	ldi	r31, 0x03	; 3
 832:	a6 e0       	ldi	r26, 0x06	; 6
 834:	b3 e0       	ldi	r27, 0x03	; 3
 836:	01 90       	ld	r0, Z+
 838:	0d 92       	st	X+, r0
 83a:	8a 95       	dec	r24
 83c:	e1 f7       	brne	.-8      	; 0x836 <_GLOBAL__sub_I_gpvariables+0x128>
 83e:	80 e1       	ldi	r24, 0x10	; 16
 840:	e6 e4       	ldi	r30, 0x46	; 70
 842:	f3 e0       	ldi	r31, 0x03	; 3
 844:	a6 e1       	ldi	r26, 0x16	; 22
 846:	b3 e0       	ldi	r27, 0x03	; 3
 848:	01 90       	ld	r0, Z+
 84a:	0d 92       	st	X+, r0
 84c:	8a 95       	dec	r24
 84e:	e1 f7       	brne	.-8      	; 0x848 <_GLOBAL__sub_I_gpvariables+0x13a>
 850:	80 e1       	ldi	r24, 0x10	; 16
 852:	e6 e3       	ldi	r30, 0x36	; 54
 854:	f3 e0       	ldi	r31, 0x03	; 3
 856:	a6 e2       	ldi	r26, 0x26	; 38
 858:	b3 e0       	ldi	r27, 0x03	; 3
 85a:	01 90       	ld	r0, Z+
 85c:	0d 92       	st	X+, r0
 85e:	8a 95       	dec	r24
 860:	e1 f7       	brne	.-8      	; 0x85a <_GLOBAL__sub_I_gpvariables+0x14c>


static rom bios = rom(&port,&addreg,0x14000);
 862:	68 94       	set
 864:	dd 24       	eor	r13, r13
 866:	d6 f8       	bld	r13, 6
 868:	ee 24       	eor	r14, r14
 86a:	e3 94       	inc	r14
 86c:	00 e0       	ldi	r16, 0x00	; 0
 86e:	10 e0       	ldi	r17, 0x00	; 0
 870:	20 e0       	ldi	r18, 0x00	; 0
 872:	30 e0       	ldi	r19, 0x00	; 0
 874:	43 e9       	ldi	r20, 0x93	; 147
 876:	53 e0       	ldi	r21, 0x03	; 3
 878:	60 ea       	ldi	r22, 0xA0	; 160
 87a:	73 e0       	ldi	r23, 0x03	; 3
 87c:	82 ed       	ldi	r24, 0xD2	; 210
 87e:	92 e0       	ldi	r25, 0x02	; 2
 880:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom settings = rom(&port,&addreg,0x018000);
 884:	68 94       	set
 886:	dd 24       	eor	r13, r13
 888:	d7 f8       	bld	r13, 7
 88a:	20 e0       	ldi	r18, 0x00	; 0
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	43 e9       	ldi	r20, 0x93	; 147
 890:	53 e0       	ldi	r21, 0x03	; 3
 892:	60 ea       	ldi	r22, 0xA0	; 160
 894:	73 e0       	ldi	r23, 0x03	; 3
 896:	8e eb       	ldi	r24, 0xBE	; 190
 898:	92 e0       	ldi	r25, 0x02	; 2
 89a:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program0 = rom(&port,&addreg,0x1C0000);
 89e:	d1 2c       	mov	r13, r1
 8a0:	0f 2e       	mov	r0, r31
 8a2:	fc e1       	ldi	r31, 0x1C	; 28
 8a4:	ef 2e       	mov	r14, r31
 8a6:	f0 2d       	mov	r31, r0
 8a8:	20 e0       	ldi	r18, 0x00	; 0
 8aa:	30 e0       	ldi	r19, 0x00	; 0
 8ac:	43 e9       	ldi	r20, 0x93	; 147
 8ae:	53 e0       	ldi	r21, 0x03	; 3
 8b0:	60 ea       	ldi	r22, 0xA0	; 160
 8b2:	73 e0       	ldi	r23, 0x03	; 3
 8b4:	8a ea       	ldi	r24, 0xAA	; 170
 8b6:	92 e0       	ldi	r25, 0x02	; 2
 8b8:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program1 = rom(&port,&addreg,0x020000);
 8bc:	68 94       	set
 8be:	ee 24       	eor	r14, r14
 8c0:	e1 f8       	bld	r14, 1
 8c2:	20 e0       	ldi	r18, 0x00	; 0
 8c4:	30 e0       	ldi	r19, 0x00	; 0
 8c6:	43 e9       	ldi	r20, 0x93	; 147
 8c8:	53 e0       	ldi	r21, 0x03	; 3
 8ca:	60 ea       	ldi	r22, 0xA0	; 160
 8cc:	73 e0       	ldi	r23, 0x03	; 3
 8ce:	86 e9       	ldi	r24, 0x96	; 150
 8d0:	92 e0       	ldi	r25, 0x02	; 2
 8d2:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program2 = rom(&port,&addreg,0x024000);
 8d6:	68 94       	set
 8d8:	dd 24       	eor	r13, r13
 8da:	d6 f8       	bld	r13, 6
 8dc:	20 e0       	ldi	r18, 0x00	; 0
 8de:	30 e0       	ldi	r19, 0x00	; 0
 8e0:	43 e9       	ldi	r20, 0x93	; 147
 8e2:	53 e0       	ldi	r21, 0x03	; 3
 8e4:	60 ea       	ldi	r22, 0xA0	; 160
 8e6:	73 e0       	ldi	r23, 0x03	; 3
 8e8:	82 e8       	ldi	r24, 0x82	; 130
 8ea:	92 e0       	ldi	r25, 0x02	; 2
 8ec:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN3romC1EP14portcontrollerP8shiftregy>
static rom program3 = rom(&port,&addreg,0x028000);
 8f0:	68 94       	set
 8f2:	dd 24       	eor	r13, r13
 8f4:	d7 f8       	bld	r13, 7
 8f6:	20 e0       	ldi	r18, 0x00	; 0
 8f8:	30 e0       	ldi	r19, 0x00	; 0
 8fa:	43 e9       	ldi	r20, 0x93	; 147
 8fc:	53 e0       	ldi	r21, 0x03	; 3
 8fe:	60 ea       	ldi	r22, 0xA0	; 160
 900:	73 e0       	ldi	r23, 0x03	; 3
 902:	8e e6       	ldi	r24, 0x6E	; 110
 904:	92 e0       	ldi	r25, 0x02	; 2
 906:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZN3romC1EP14portcontrollerP8shiftregy>

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
 90a:	0f 2e       	mov	r0, r31
 90c:	f0 ec       	ldi	r31, 0xC0	; 192
 90e:	9f 2e       	mov	r9, r31
 910:	f0 2d       	mov	r31, r0
 912:	68 94       	set
 914:	aa 24       	eor	r10, r10
 916:	a1 f8       	bld	r10, 1
 918:	d1 2c       	mov	r13, r1
 91a:	e1 2c       	mov	r14, r1
 91c:	02 e2       	ldi	r16, 0x22	; 34
 91e:	26 e8       	ldi	r18, 0x86	; 134
 920:	33 e0       	ldi	r19, 0x03	; 3
 922:	43 e9       	ldi	r20, 0x93	; 147
 924:	53 e0       	ldi	r21, 0x03	; 3
 926:	60 ea       	ldi	r22, 0xA0	; 160
 928:	73 e0       	ldi	r23, 0x03	; 3
 92a:	8d e5       	ldi	r24, 0x5D	; 93
 92c:	92 e0       	ldi	r25, 0x02	; 2
 92e:	0e 94 ba 01 	call	0x374	; 0x374 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
 932:	91 2c       	mov	r9, r1
 934:	0f 2e       	mov	r0, r31
 936:	f3 e0       	ldi	r31, 0x03	; 3
 938:	af 2e       	mov	r10, r31
 93a:	f0 2d       	mov	r31, r0
 93c:	26 e8       	ldi	r18, 0x86	; 134
 93e:	33 e0       	ldi	r19, 0x03	; 3
 940:	43 e9       	ldi	r20, 0x93	; 147
 942:	53 e0       	ldi	r21, 0x03	; 3
 944:	60 ea       	ldi	r22, 0xA0	; 160
 946:	73 e0       	ldi	r23, 0x03	; 3
 948:	8c e4       	ldi	r24, 0x4C	; 76
 94a:	92 e0       	ldi	r25, 0x02	; 2
 94c:	0e 94 ba 01 	call	0x374	; 0x374 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
 950:	68 94       	set
 952:	99 24       	eor	r9, r9
 954:	96 f8       	bld	r9, 6
 956:	26 e8       	ldi	r18, 0x86	; 134
 958:	33 e0       	ldi	r19, 0x03	; 3
 95a:	43 e9       	ldi	r20, 0x93	; 147
 95c:	53 e0       	ldi	r21, 0x03	; 3
 95e:	60 ea       	ldi	r22, 0xA0	; 160
 960:	73 e0       	ldi	r23, 0x03	; 3
 962:	8b e3       	ldi	r24, 0x3B	; 59
 964:	92 e0       	ldi	r25, 0x02	; 2
 966:	0e 94 ba 01 	call	0x374	; 0x374 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
 96a:	68 94       	set
 96c:	99 24       	eor	r9, r9
 96e:	97 f8       	bld	r9, 7
 970:	26 e8       	ldi	r18, 0x86	; 134
 972:	33 e0       	ldi	r19, 0x03	; 3
 974:	43 e9       	ldi	r20, 0x93	; 147
 976:	53 e0       	ldi	r21, 0x03	; 3
 978:	60 ea       	ldi	r22, 0xA0	; 160
 97a:	73 e0       	ldi	r23, 0x03	; 3
 97c:	8a e2       	ldi	r24, 0x2A	; 42
 97e:	92 e0       	ldi	r25, 0x02	; 2
 980:	0e 94 ba 01 	call	0x374	; 0x374 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);
 984:	0f 2e       	mov	r0, r31
 986:	f0 ec       	ldi	r31, 0xC0	; 192
 988:	9f 2e       	mov	r9, r31
 98a:	f0 2d       	mov	r31, r0
 98c:	26 e8       	ldi	r18, 0x86	; 134
 98e:	33 e0       	ldi	r19, 0x03	; 3
 990:	43 e9       	ldi	r20, 0x93	; 147
 992:	53 e0       	ldi	r21, 0x03	; 3
 994:	60 ea       	ldi	r22, 0xA0	; 160
 996:	73 e0       	ldi	r23, 0x03	; 3
 998:	89 e1       	ldi	r24, 0x19	; 25
 99a:	92 e0       	ldi	r25, 0x02	; 2
 99c:	0e 94 ba 01 	call	0x374	; 0x374 <_ZN6eepromC1EP14portcontrollerP8shiftregS3_hy>


static interrupts irqhandler= interrupts();
 9a0:	87 e1       	ldi	r24, 0x17	; 23
 9a2:	92 e0       	ldi	r25, 0x02	; 2
 9a4:	0e 94 93 00 	call	0x126	; 0x126 <_ZN10interruptsC1Ev>
static interpreter interpret= interpreter();
 9a8:	82 e0       	ldi	r24, 0x02	; 2
 9aa:	91 e0       	ldi	r25, 0x01	; 1
 9ac:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN11interpreterC1Ev>

static lcd disp1=lcd();
 9b0:	80 e0       	ldi	r24, 0x00	; 0
 9b2:	91 e0       	ldi	r25, 0x01	; 1
 9b4:	0e 94 95 00 	call	0x12a	; 0x12a <_ZN3lcdC1Ev>
				
			}
		}
		storememory(0x0000,0xff);
	}
 9b8:	63 96       	adiw	r28, 0x13	; 19
 9ba:	0f b6       	in	r0, 0x3f	; 63
 9bc:	f8 94       	cli
 9be:	de bf       	out	0x3e, r29	; 62
 9c0:	0f be       	out	0x3f, r0	; 63
 9c2:	cd bf       	out	0x3d, r28	; 61
 9c4:	df 91       	pop	r29
 9c6:	cf 91       	pop	r28
 9c8:	1f 91       	pop	r17
 9ca:	0f 91       	pop	r16
 9cc:	ff 90       	pop	r15
 9ce:	ef 90       	pop	r14
 9d0:	df 90       	pop	r13
 9d2:	cf 90       	pop	r12
 9d4:	bf 90       	pop	r11
 9d6:	af 90       	pop	r10
 9d8:	9f 90       	pop	r9
 9da:	8f 90       	pop	r8
 9dc:	08 95       	ret

000009de <_GLOBAL__sub_D_gpvariables>:
 9de:	cf 93       	push	r28
 9e0:	df 93       	push	r29


static interrupts irqhandler= interrupts();
static interpreter interpret= interpreter();

static lcd disp1=lcd();
 9e2:	80 e0       	ldi	r24, 0x00	; 0
 9e4:	91 e0       	ldi	r25, 0x01	; 1
 9e6:	0e 94 96 00 	call	0x12c	; 0x12c <_ZN3lcdD1Ev>
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);


static interrupts irqhandler= interrupts();
static interpreter interpret= interpreter();
 9ea:	82 e0       	ldi	r24, 0x02	; 2
 9ec:	91 e0       	ldi	r25, 0x01	; 1
 9ee:	0e 94 92 00 	call	0x124	; 0x124 <_ZN11interpreterD1Ev>
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);


static interrupts irqhandler= interrupts();
 9f2:	87 e1       	ldi	r24, 0x17	; 23
 9f4:	92 e0       	ldi	r25, 0x02	; 2
 9f6:	0e 94 94 00 	call	0x128	; 0x128 <_ZN10interruptsD1Ev>

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
static eeprom storage3 =eeprom(&port,&addreg,&datareg,34,0x0003C000);
 9fa:	89 e1       	ldi	r24, 0x19	; 25
 9fc:	92 e0       	ldi	r25, 0x02	; 2
 9fe:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN6eepromD1Ev>
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
static eeprom storage2 =eeprom(&port,&addreg,&datareg,34,0x00038000);
 a02:	8a e2       	ldi	r24, 0x2A	; 42
 a04:	92 e0       	ldi	r25, 0x02	; 2
 a06:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN6eepromD1Ev>
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
static eeprom storage1 =eeprom(&port,&addreg,&datareg,34,0x00034000);
 a0a:	8b e3       	ldi	r24, 0x3B	; 59
 a0c:	92 e0       	ldi	r25, 0x02	; 2
 a0e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN6eepromD1Ev>
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
static eeprom storage0 =eeprom(&port,&addreg,&datareg,34,0x00030000);
 a12:	8c e4       	ldi	r24, 0x4C	; 76
 a14:	92 e0       	ldi	r25, 0x02	; 2
 a16:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN6eepromD1Ev>
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);

static eeprom fattable =eeprom(&port,&addreg,&datareg,34,0x0002C000);
 a1a:	8d e5       	ldi	r24, 0x5D	; 93
 a1c:	92 e0       	ldi	r25, 0x02	; 2
 a1e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_ZN6eepromD1Ev>
static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
static rom program3 = rom(&port,&addreg,0x028000);
 a22:	8e e6       	ldi	r24, 0x6E	; 110
 a24:	92 e0       	ldi	r25, 0x02	; 2
 a26:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN3romD1Ev>

static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
static rom program2 = rom(&port,&addreg,0x024000);
 a2a:	82 e8       	ldi	r24, 0x82	; 130
 a2c:	92 e0       	ldi	r25, 0x02	; 2
 a2e:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN3romD1Ev>


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
static rom program1 = rom(&port,&addreg,0x020000);
 a32:	86 e9       	ldi	r24, 0x96	; 150
 a34:	92 e0       	ldi	r25, 0x02	; 2
 a36:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN3romD1Ev>
static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
static rom program0 = rom(&port,&addreg,0x1C0000);
 a3a:	8a ea       	ldi	r24, 0xAA	; 170
 a3c:	92 e0       	ldi	r25, 0x02	; 2
 a3e:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN3romD1Ev>

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
static rom settings = rom(&port,&addreg,0x018000);
 a42:	8e eb       	ldi	r24, 0xBE	; 190
 a44:	92 e0       	ldi	r25, 0x02	; 2
 a46:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN3romD1Ev>
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};


static rom bios = rom(&port,&addreg,0x14000);
 a4a:	82 ed       	ldi	r24, 0xD2	; 210
 a4c:	92 e0       	ldi	r25, 0x02	; 2
 a4e:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN3romD1Ev>
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram

static ram rambanklist[] = {bank0,bank1,bank2,bank3,bank4};
 a52:	c6 e3       	ldi	r28, 0x36	; 54
 a54:	d3 e0       	ldi	r29, 0x03	; 3
 a56:	60 97       	sbiw	r28, 0x10	; 16
 a58:	ce 01       	movw	r24, r28
 a5a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
 a5e:	82 e0       	ldi	r24, 0x02	; 2
 a60:	c6 3e       	cpi	r28, 0xE6	; 230
 a62:	d8 07       	cpc	r29, r24
 a64:	c1 f7       	brne	.-16     	; 0xa56 <_GLOBAL__sub_D_gpvariables+0x78>
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
static ram bank4 = Vram(&port,&addreg,&datareg,34,0x10000);// video ram
 a66:	86 e3       	ldi	r24, 0x36	; 54
 a68:	93 e0       	ldi	r25, 0x03	; 3
 a6a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
static ram bank3 = ram(&port,&addreg,&datareg,34,0xC000);// third program or prog data ram
 a6e:	86 e4       	ldi	r24, 0x46	; 70
 a70:	93 e0       	ldi	r25, 0x03	; 3
 a72:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
static ram bank2 = ram(&port,&addreg,&datareg,34,0x8000u);// second prog ram or extended main program ram
 a76:	86 e5       	ldi	r24, 0x56	; 86
 a78:	93 e0       	ldi	r25, 0x03	; 3
 a7a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
static ram bank1 = ram(&port,&addreg,&datareg,34,0x4000u);//main prog ram
 a7e:	86 e6       	ldi	r24, 0x66	; 102
 a80:	93 e0       	ldi	r25, 0x03	; 3
 a82:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
static ram bank0 = ram(&port,&addreg,&datareg,34,0x0u);	// os ram 
 a86:	86 e7       	ldi	r24, 0x76	; 118
 a88:	93 e0       	ldi	r25, 0x03	; 3
 a8a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <_ZN3ramD1Ev>
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
static shiftreg datareg=shiftreg(37,36,35,&port);
 a8e:	86 e8       	ldi	r24, 0x86	; 134
 a90:	93 e0       	ldi	r25, 0x03	; 3
 a92:	0e 94 b9 01 	call	0x372	; 0x372 <_ZN8shiftregD1Ev>
	
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
static shiftreg addreg=shiftreg(40,39,38,&port);
 a96:	83 e9       	ldi	r24, 0x93	; 147
 a98:	93 e0       	ldi	r25, 0x03	; 3
 a9a:	0e 94 b9 01 	call	0x372	; 0x372 <_ZN8shiftregD1Ev>
	a0-a12 adress a13-a15 
	
	
*/
static const int address_max_hex=0x1fff;
static portcontroller port=portcontroller();
 a9e:	80 ea       	ldi	r24, 0xA0	; 160
 aa0:	93 e0       	ldi	r25, 0x03	; 3
 aa2:	0e 94 03 01 	call	0x206	; 0x206 <_ZN14portcontrollerD1Ev>
				
			}
		}
		storememory(0x0000,0xff);
	}
 aa6:	df 91       	pop	r29
 aa8:	cf 91       	pop	r28
 aaa:	08 95       	ret

00000aac <__ashrdi3>:
 aac:	97 fb       	bst	r25, 7
 aae:	10 f8       	bld	r1, 0

00000ab0 <__lshrdi3>:
 ab0:	16 94       	lsr	r1
 ab2:	00 08       	sbc	r0, r0
 ab4:	0f 93       	push	r16
 ab6:	08 30       	cpi	r16, 0x08	; 8
 ab8:	98 f0       	brcs	.+38     	; 0xae0 <__lshrdi3+0x30>
 aba:	08 50       	subi	r16, 0x08	; 8
 abc:	23 2f       	mov	r18, r19
 abe:	34 2f       	mov	r19, r20
 ac0:	45 2f       	mov	r20, r21
 ac2:	56 2f       	mov	r21, r22
 ac4:	67 2f       	mov	r22, r23
 ac6:	78 2f       	mov	r23, r24
 ac8:	89 2f       	mov	r24, r25
 aca:	90 2d       	mov	r25, r0
 acc:	f4 cf       	rjmp	.-24     	; 0xab6 <__lshrdi3+0x6>
 ace:	05 94       	asr	r0
 ad0:	97 95       	ror	r25
 ad2:	87 95       	ror	r24
 ad4:	77 95       	ror	r23
 ad6:	67 95       	ror	r22
 ad8:	57 95       	ror	r21
 ada:	47 95       	ror	r20
 adc:	37 95       	ror	r19
 ade:	27 95       	ror	r18
 ae0:	0a 95       	dec	r16
 ae2:	aa f7       	brpl	.-22     	; 0xace <__lshrdi3+0x1e>
 ae4:	0f 91       	pop	r16
 ae6:	08 95       	ret

00000ae8 <__cmpdi2_s8>:
 ae8:	00 24       	eor	r0, r0
 aea:	a7 fd       	sbrc	r26, 7
 aec:	00 94       	com	r0
 aee:	2a 17       	cp	r18, r26
 af0:	30 05       	cpc	r19, r0
 af2:	40 05       	cpc	r20, r0
 af4:	50 05       	cpc	r21, r0
 af6:	60 05       	cpc	r22, r0
 af8:	70 05       	cpc	r23, r0
 afa:	80 05       	cpc	r24, r0
 afc:	90 05       	cpc	r25, r0
 afe:	08 95       	ret

00000b00 <__tablejump2__>:
 b00:	ee 0f       	add	r30, r30
 b02:	ff 1f       	adc	r31, r31
 b04:	05 90       	lpm	r0, Z+
 b06:	f4 91       	lpm	r31, Z
 b08:	e0 2d       	mov	r30, r0
 b0a:	09 94       	ijmp

00000b0c <__do_global_dtors>:
 b0c:	10 e0       	ldi	r17, 0x00	; 0
 b0e:	cf e3       	ldi	r28, 0x3F	; 63
 b10:	d0 e0       	ldi	r29, 0x00	; 0
 b12:	04 c0       	rjmp	.+8      	; 0xb1c <__do_global_dtors+0x10>
 b14:	fe 01       	movw	r30, r28
 b16:	0e 94 80 05 	call	0xb00	; 0xb00 <__tablejump2__>
 b1a:	21 96       	adiw	r28, 0x01	; 1
 b1c:	c0 34       	cpi	r28, 0x40	; 64
 b1e:	d1 07       	cpc	r29, r17
 b20:	c9 f7       	brne	.-14     	; 0xb14 <__do_global_dtors+0x8>
 b22:	f8 94       	cli

00000b24 <__stop_program>:
 b24:	ff cf       	rjmp	.-2      	; 0xb24 <__stop_program>
